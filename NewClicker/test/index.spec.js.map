{"version":3,"sources":["webpack:///webpack/universalModuleDefinition","webpack:///webpack/bootstrap","webpack:///./node_modules/chai/lib/chai/utils/flag.js","webpack:///./node_modules/chai/lib/chai.js","webpack:///./node_modules/chai/lib/chai/config.js","webpack:///./node_modules/chai/lib/chai/utils/transferFlags.js","webpack:///./node_modules/jquery/dist/jquery.js","webpack:///./node_modules/chai/lib/chai/utils/inspect.js","webpack:///./node_modules/chai/lib/chai/utils/isProxyEnabled.js","webpack:///./node_modules/chai/lib/chai/utils/addLengthGuard.js","webpack:///./node_modules/chai/lib/chai/utils/proxify.js","webpack:///./node_modules/type-detect/type-detect.js","webpack:///./node_modules/assertion-error/index.js","webpack:///./node_modules/chai/lib/chai/utils/getActual.js","webpack:///./node_modules/get-func-name/index.js","webpack:///./node_modules/chai/lib/chai/utils/getProperties.js","webpack:///./node_modules/chai/lib/chai/utils/objDisplay.js","webpack:///./node_modules/chai/lib/chai/utils/getOwnEnumerablePropertySymbols.js","webpack:///./node_modules/chai/index.js","webpack:///./node_modules/chai/lib/chai/utils/index.js","webpack:///./node_modules/pathval/index.js","webpack:///./node_modules/chai/lib/chai/utils/test.js","webpack:///(webpack)/buildin/global.js","webpack:///./node_modules/chai/lib/chai/utils/expectTypes.js","webpack:///./node_modules/chai/lib/chai/utils/getMessage.js","webpack:///./node_modules/chai/lib/chai/utils/getEnumerableProperties.js","webpack:///./node_modules/deep-eql/index.js","webpack:///./node_modules/chai/lib/chai/utils/addProperty.js","webpack:///./node_modules/chai/lib/chai/utils/addMethod.js","webpack:///./node_modules/chai/lib/chai/utils/overwriteProperty.js","webpack:///./node_modules/chai/lib/chai/utils/overwriteMethod.js","webpack:///./node_modules/chai/lib/chai/utils/addChainableMethod.js","webpack:///./node_modules/chai/lib/chai/utils/overwriteChainableMethod.js","webpack:///./node_modules/chai/lib/chai/utils/compareByInspect.js","webpack:///./node_modules/chai/lib/chai/utils/getOwnEnumerableProperties.js","webpack:///./node_modules/check-error/index.js","webpack:///./node_modules/chai/lib/chai/utils/isNaN.js","webpack:///./node_modules/chai/lib/chai/assertion.js","webpack:///./node_modules/chai/lib/chai/core/assertions.js","webpack:///./node_modules/chai/lib/chai/interface/expect.js","webpack:///./node_modules/chai/lib/chai/interface/should.js","webpack:///./node_modules/chai/lib/chai/interface/assert.js","webpack:///./src/javascript/InterfacesBaseClasses/Unit.ts","webpack:///./src/javascript/InterfacesBaseClasses/Player.ts","webpack:///./src/javascript/InterfacesBaseClasses/StageLevel.ts","webpack:///./src/javascript/Database.ts","webpack:///./src/javascript/InterfacesBaseClasses/Enemy.ts","webpack:///./test/index.spec.ts","webpack:///./test/Database.spec.ts"],"names":["root","factory","exports","module","define","amd","a","i","window","installedModules","__webpack_require__","moduleId","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","prototype","hasOwnProperty","p","s","obj","flags","__flags","arguments","length","used","version","AssertionError","util","use","fn","indexOf","push","config","assertion","core","expect","should","assert","includeStack","showDiff","truncateThreshold","useProxy","proxyExcludedKeys","includeAll","flag","__WEBPACK_AMD_DEFINE_RESULT__","global","document","w","Error","this","noGlobal","arr","getProto","getPrototypeOf","slice","concat","class2type","toString","hasOwn","fnToString","ObjectFunctionString","support","isFunction","nodeType","isWindow","preservedScriptAttributes","type","src","noModule","DOMEval","code","doc","node","script","createElement","text","head","appendChild","parentNode","removeChild","toType","jQuery","selector","context","init","rtrim","isArrayLike","jquery","constructor","toArray","num","pushStack","elems","ret","merge","prevObject","each","callback","map","elem","apply","first","eq","last","len","j","end","sort","splice","extend","options","copy","copyIsArray","clone","target","deep","isPlainObject","Array","isArray","undefined","expando","Math","random","replace","isReady","error","msg","noop","proto","Ctor","isEmptyObject","globalEval","trim","makeArray","results","inArray","second","grep","invert","matches","callbackExpect","arg","guid","iterator","split","toLowerCase","Sizzle","Expr","getText","isXML","tokenize","compile","select","outermostContext","sortInput","hasDuplicate","setDocument","docElem","documentIsHTML","rbuggyQSA","rbuggyMatches","contains","Date","preferredDoc","dirruns","done","classCache","createCache","tokenCache","compilerCache","sortOrder","b","pop","push_native","list","booleans","whitespace","identifier","attributes","pseudos","rwhitespace","RegExp","rcomma","rcombinators","rattributeQuotes","rpseudo","ridentifier","matchExpr","ID","CLASS","TAG","ATTR","PSEUDO","CHILD","bool","needsContext","rinputs","rheader","rnative","rquickExpr","rsibling","runescape","funescape","_","escaped","escapedWhitespace","high","String","fromCharCode","rcssescape","fcssescape","ch","asCodePoint","charCodeAt","unloadHandler","disabledAncestor","addCombinator","disabled","dir","next","childNodes","e","els","seed","nid","match","groups","newSelector","newContext","ownerDocument","exec","getElementById","id","getElementsByTagName","getElementsByClassName","qsa","test","nodeName","getAttribute","setAttribute","toSelector","join","testContext","querySelectorAll","qsaError","removeAttribute","keys","cache","cacheLength","shift","markFunction","el","addHandle","attrs","handler","attrHandle","siblingCheck","cur","diff","sourceIndex","nextSibling","createInputPseudo","createButtonPseudo","createDisabledPseudo","isDisabled","createPositionalPseudo","argument","matchIndexes","documentElement","hasCompare","subWindow","defaultView","top","addEventListener","attachEvent","className","createComment","getById","getElementsByName","filter","attrId","find","getAttributeNode","tag","tmp","innerHTML","input","matchesSelector","webkitMatchesSelector","mozMatchesSelector","oMatchesSelector","msMatchesSelector","disconnectedMatch","compareDocumentPosition","adown","bup","compare","sortDetached","aup","ap","bp","unshift","expr","elements","attr","val","specified","escape","sel","uniqueSort","duplicates","detectDuplicates","sortStable","textContent","firstChild","nodeValue","selectors","createPseudo","relative",">"," ","+","~","preFilter","excess","unquoted","nodeNameSelector","pattern","operator","check","result","what","simple","forward","ofType","xml","uniqueCache","outerCache","nodeIndex","start","parent","useCache","lastChild","uniqueID","pseudo","args","setFilters","idx","matched","not","matcher","unmatched","has","innerText","lang","elemLang","hash","location","focus","activeElement","hasFocus","href","tabIndex","enabled","checked","selected","selectedIndex","empty","header","button","even","odd","lt","gt","radio","checkbox","file","password","image","submit","reset","tokens","combinator","base","skip","checkNonElements","doneName","oldCache","newCache","elementMatcher","matchers","condense","newUnmatched","mapped","setMatcher","postFilter","postFinder","postSelector","temp","preMap","postMap","preexisting","contexts","multipleContexts","matcherIn","matcherOut","matcherFromTokens","checkContext","leadingRelative","implicitRelative","matchContext","matchAnyContext","filters","parseOnly","soFar","preFilters","cached","setMatchers","elementMatchers","bySet","byElement","superMatcher","outermost","matchedCount","setMatched","contextBackup","dirrunsUnique","matcherFromGroupMatchers","token","compiled","defaultValue","unique","isXMLDoc","escapeSelector","until","truncate","is","siblings","rneedsContext","rsingleTag","winnow","qualifier","self","rootjQuery","parseHTML","ready","rparentsprev","guaranteedUnique","children","contents","prev","sibling","targets","closest","index","prevAll","add","addBack","parents","parentsUntil","nextAll","nextUntil","prevUntil","contentDocument","content","reverse","rnothtmlwhite","Identity","v","Thrower","ex","adoptValue","resolve","reject","noValue","method","promise","fail","then","Callbacks","createOptions","firing","memory","fired","locked","queue","firingIndex","fire","once","stopOnFalse","remove","disable","lock","fireWith","Deferred","func","tuples","state","always","deferred","catch","pipe","fns","newDefer","tuple","returned","progress","notify","onFulfilled","onRejected","onProgress","maxDepth","depth","special","that","mightThrow","TypeError","notifyWith","resolveWith","process","exceptionHook","stackTrace","rejectWith","getStackHook","setTimeout","stateString","when","singleValue","remaining","resolveContexts","resolveValues","master","updateFunc","rerrorNames","stack","console","warn","message","readyException","readyList","completed","removeEventListener","readyWait","wait","readyState","doScroll","access","chainable","emptyGet","raw","bulk","rmsPrefix","rdashAlpha","fcamelCase","all","letter","toUpperCase","camelCase","string","acceptData","owner","Data","uid","configurable","set","data","prop","hasData","dataPriv","dataUser","rbrace","rmultiDash","dataAttr","JSON","parse","getData","removeData","_data","_removeData","dequeue","startLength","hooks","_queueHooks","stop","setter","clearQueue","count","defer","pnum","source","rcssNum","cssExpand","isHiddenWithinTree","style","display","css","swap","old","adjustCSS","valueParts","tween","adjusted","scale","maxIterations","currentValue","initial","unit","cssNumber","initialInUnit","defaultDisplayMap","getDefaultDisplay","body","showHide","show","values","hide","toggle","rcheckableType","rtagName","rscriptType","wrapMap","option","thead","col","tr","td","_default","getAll","setGlobalEval","refElements","optgroup","tbody","tfoot","colgroup","caption","th","rhtml","buildFragment","scripts","selection","ignored","wrap","fragment","createDocumentFragment","nodes","htmlPrefilter","createTextNode","div","checkClone","cloneNode","noCloneChecked","rkeyEvent","rmouseEvent","rtypenamespace","returnTrue","returnFalse","safeActiveElement","err","on","types","one","origFn","event","off","handleObjIn","eventHandle","events","handleObj","handlers","namespaces","origType","elemData","handle","triggered","dispatch","delegateType","bindType","namespace","delegateCount","setup","mappedTypes","origCount","teardown","removeEvent","nativeEvent","handlerQueue","fix","delegateTarget","preDispatch","isPropagationStopped","currentTarget","isImmediatePropagationStopped","rnamespace","preventDefault","stopPropagation","postDispatch","matchedHandlers","matchedSelectors","addProp","hook","Event","originalEvent","writable","load","noBubble","trigger","blur","click","beforeunload","returnValue","props","isDefaultPrevented","defaultPrevented","relatedTarget","timeStamp","now","isSimulated","stopImmediatePropagation","altKey","bubbles","cancelable","changedTouches","ctrlKey","detail","eventPhase","metaKey","pageX","pageY","shiftKey","view","char","charCode","keyCode","buttons","clientX","clientY","offsetX","offsetY","pointerId","pointerType","screenX","screenY","targetTouches","toElement","touches","which","mouseenter","mouseleave","pointerenter","pointerleave","orig","related","rxhtmlTag","rnoInnerhtml","rchecked","rcleanScript","manipulationTarget","disableScript","restoreScript","cloneCopyEvent","dest","pdataOld","pdataCur","udataOld","udataCur","fixInput","domManip","collection","hasScripts","iNoClone","valueIsFunction","html","_evalUrl","keepData","cleanData","dataAndEvents","deepDataAndEvents","srcElements","destElements","inPage","detach","append","prepend","insertBefore","before","after","replaceWith","replaceChild","appendTo","prependTo","insertAfter","replaceAll","original","insert","rnumnonpx","getStyles","opener","getComputedStyle","rboxStyle","curCSS","computed","width","minWidth","maxWidth","getPropertyValue","pixelBoxStyles","addGetHookIf","conditionFn","hookFn","computeStyleTests","container","cssText","divStyle","pixelPositionVal","reliableMarginLeftVal","roundPixelMeasures","marginLeft","right","pixelBoxStylesVal","boxSizingReliableVal","position","scrollboxSizeVal","offsetWidth","measure","round","parseFloat","backgroundClip","clearCloneStyle","boxSizingReliable","pixelPosition","reliableMarginLeft","scrollboxSize","rdisplayswap","rcustomProp","cssShow","visibility","cssNormalTransform","letterSpacing","fontWeight","cssPrefixes","emptyStyle","finalPropName","cssProps","capName","vendorPropName","setPositiveNumber","subtract","max","boxModelAdjustment","dimension","box","isBorderBox","styles","computedVal","extra","delta","ceil","getWidthOrHeight","valueIsBorderBox","Tween","easing","cssHooks","opacity","animationIterationCount","columnCount","fillOpacity","flexGrow","flexShrink","lineHeight","order","orphans","widows","zIndex","zoom","origName","isCustomProp","setProperty","isFinite","getClientRects","getBoundingClientRect","left","margin","padding","border","prefix","suffix","expand","expanded","parts","propHooks","run","percent","eased","duration","pos","step","fx","scrollTop","scrollLeft","linear","swing","cos","PI","fxNow","inProgress","rfxtypes","rrun","schedule","hidden","requestAnimationFrame","interval","tick","createFxNow","genFx","includeWidth","height","createTween","animation","Animation","tweeners","properties","stopped","prefilters","currentTime","startTime","tweens","opts","specialEasing","originalProperties","originalOptions","gotoEnd","propFilter","complete","timer","anim","*","tweener","oldfire","propTween","restoreDisplay","isBox","dataShow","unqueued","overflow","overflowX","overflowY","prefilter","speed","opt","speeds","fadeTo","to","animate","optall","doAnimation","finish","stopQueue","timers","cssFn","slideDown","slideUp","slideToggle","fadeIn","fadeOut","fadeToggle","slow","fast","delay","time","timeout","clearTimeout","checkOn","optSelected","radioValue","boolHook","removeAttr","nType","attrHooks","attrNames","lowercaseName","rfocusable","rclickable","stripAndCollapse","getClass","classesToArray","removeProp","propFix","tabindex","parseInt","for","class","addClass","classes","curValue","clazz","finalValue","removeClass","toggleClass","stateVal","isValidValue","classNames","hasClass","rreturn","valHooks","optionSet","focusin","rfocusMorph","stopPropagationCallback","onlyHandlers","bubbleType","ontype","lastElement","eventPath","isTrigger","parentWindow","simulate","triggerHandler","attaches","nonce","rquery","parseXML","DOMParser","parseFromString","rbracket","rCRLF","rsubmitterTypes","rsubmittable","buildParams","traditional","param","valueOrFunction","encodeURIComponent","serialize","serializeArray","r20","rhash","rantiCache","rheaders","rnoContent","rprotocol","transports","allTypes","originAnchor","addToPrefiltersOrTransports","structure","dataTypeExpression","dataType","dataTypes","inspectPrefiltersOrTransports","jqXHR","inspected","seekingTransport","inspect","prefilterOrFactory","dataTypeOrTransport","ajaxExtend","flatOptions","ajaxSettings","active","lastModified","etag","url","isLocal","protocol","processData","async","contentType","accepts","json","responseFields","converters","* text","text html","text json","text xml","ajaxSetup","settings","ajaxPrefilter","ajaxTransport","ajax","transport","cacheURL","responseHeadersString","responseHeaders","timeoutTimer","urlAnchor","fireGlobals","uncached","callbackContext","globalEventContext","completeDeferred","statusCode","requestHeaders","requestHeadersNames","strAbort","getResponseHeader","getAllResponseHeaders","setRequestHeader","overrideMimeType","mimeType","status","abort","statusText","finalText","crossDomain","host","hasContent","ifModified","headers","beforeSend","success","send","nativeStatusText","responses","isSuccess","response","modified","ct","finalDataType","firstDataType","ajaxHandleResponses","conv2","current","conv","dataFilter","throws","ajaxConvert","getJSON","getScript","wrapAll","firstElementChild","wrapInner","htmlIsFunction","unwrap","visible","offsetHeight","xhr","XMLHttpRequest","xhrSuccessStatus","0","1223","xhrSupported","cors","errorCallback","open","username","xhrFields","onload","onerror","onabort","ontimeout","onreadystatechange","responseType","responseText","binary","text script","charset","scriptCharset","evt","oldCallbacks","rjsonp","jsonp","jsonpCallback","originalSettings","callbackName","overwritten","responseContainer","jsonProp","createHTMLDocument","implementation","keepScripts","parsed","params","animated","offset","setOffset","curPosition","curLeft","curCSSTop","curTop","curOffset","curCSSLeft","curElem","using","rect","win","pageYOffset","pageXOffset","offsetParent","parentOffset","scrollTo","Height","Width","","defaultExtra","funcName","hover","fnOver","fnOut","unbind","delegate","undelegate","proxy","holdReady","hold","parseJSON","isNumeric","isNaN","_jQuery","_$","$","noConflict","getName","getProperties","getEnumerableProperties","showHidden","colors","formatValue","seen","stylize","str","isDOMElement","HTMLElement","ctx","recurseTimes","primitive","stringify","Infinity","formatPrimitive","outerHTML","xmlVersion","XMLSerializer","serializeToString","createElementNS","nameSuffix","visibleKeys","isError","isRegExp","isDate","toUTCString","formatError","output","array","typedArray","braces","ar","objectToString","isTypedArray","formatProperty","forEach","formatArray","formatTypedArray","reduce","numLinesEst","reduceToSingleString","propDescriptor","getOwnPropertyDescriptor","line","substr","re","Proxy","Reflect","fnLengthDesc","assertionName","isChainable","isProxyEnabled","builtins","stringDistance","strA","strB","memo","min","nonChainableMethodName","proxyGetter","orderedProperties","promiseExists","Promise","globalObject","symbolExists","mapExists","Map","setExists","Set","weakMapExists","WeakMap","weakSetExists","WeakSet","dataViewExists","DataView","symbolIteratorExists","symbolToStringTagExists","setEntriesExists","entries","mapEntriesExists","setIteratorPrototype","mapIteratorPrototype","arrayIteratorExists","arrayIteratorPrototype","stringIteratorExists","stringIteratorPrototype","toStringLeftSliceLength","toStringRightSliceLength","typeofObj","navigator","mimeTypes","plugins","tagName","stringTag","objPrototype","exclude","excludes","excludeProps","res","_props","ssf","captureStackTrace","toJSON","_obj","Function","functionNameMatch","aFunc","getOwnPropertyNames","addProperty","getOwnPropertySymbols","sym","pathval","expectTypes","getMessage","getActual","objDisplay","transferFlags","eql","getPathInfo","hasProperty","addMethod","overwriteProperty","overwriteMethod","addChainableMethod","overwriteChainableMethod","compareByInspect","getOwnEnumerablePropertySymbols","getOwnEnumerableProperties","checkError","proxify","addLengthGuard","parsePath","path","mArr","internalGetPathValue","pathDepth","temporaryValue","part","info","exists","getPathValue","setPathValue","tempObj","propName","propVal","internalSetPathValue","negate","g","eval","flagMsg","ssfi","art","charAt","objType","some","expected","actual","FakeMap","_key","isExtensible","MemoizeMap","memoizeCompare","leftHandOperand","rightHandOperand","memoizeMap","isPrimitive","leftHandMap","memoizeSet","deepEqual","comparator","extensiveDeepEqual","simpleResult","simpleEqual","memoize","memoizeResultLeft","memoizeResultRight","comparatorResult","leftHandType","valueOf","iterableEqual","regexpEqual","getGeneratorEntries","generatorEqual","Uint8Array","buffer","entriesEqual","leftHandKeys","getEnumerableKeys","rightHandKeys","keysEqual","leftHandEntries","getIteratorEntries","rightHandEntries","objectEqual","extensiveDeepEqualByType","size","leftHandItems","rightHandItems","hasIteratorFunction","iteratorError","generator","generatorResult","accumulator","chai","propertyGetter","newAssertion","Assertion","methodWrapper","_get","_super","overwritingPropertyGetter","origLockSsfi","_method","overwritingMethodWrapper","canSetPrototype","setPrototypeOf","testFn","excludeNames","propDesc","chainingBehavior","chainableBehavior","__methods","chainableMethodWrapper","asserterName","pd","_chainingBehavior","getFunctionName","constructorFn","compatibleInstance","thrown","errorLike","compatibleConstructor","compatibleMessage","errMatcher","comparisonString","getConstructorName","constructorName","Number","_chai","lockSsfi","negateMsg","_actual","ok","an","article","SameValueZero","includeChainingBehavior","include","isDeep","descriptor","included","isEql","item","firstErr","numErrs","propAssertion","checkArguments","assertEqual","assertEql","assertAbove","doLength","msgPrefix","shouldThrow","have","errorMessage","assertLeast","assertBelow","assertMost","assertInstanceOf","isInstanceOf","assertProperty","isNested","isOwn","pathInfo","assertOwnProperty","assertOwnPropertyDescriptor","actualDescriptor","assertLengthChain","assertLength","assertMatch","assertKeys","keysType","deepStr","mixedArgsMsg","any","expectedKey","actualKey","every","assertThrows","errMsgMatcher","caughtErr","everyArgIsUndefined","everyArgIsDefined","Boolean","errorLikeFail","errMsgMatcherFail","errorLikeString","placeholder","respondTo","itself","satisfy","closeTo","abs","assertChanges","subject","final","msgObj","assertIncreases","assertDecreases","chain","itemsCount","startType","finishType","range","subset","be","failMsg","failNegateMsg","ordered","cmp","superset","matchIdx","elem2","isSubsetOf","expression","behavior","realDelta","isSealed","isFrozen","loadShould","shouldGetter","equal","val1","val2","Throw","errt","errs","exist","Should","express","errmsg","isOk","isNotOk","act","exp","notEqual","strictEqual","notStrictEqual","deepStrictEqual","notDeepEqual","isAbove","abv","above","isAtLeast","atlst","least","isBelow","blw","below","isAtMost","atmst","most","isTrue","isNotTrue","isFalse","isNotFalse","isNull","isNotNull","NaN","isNotNaN","notExists","isUndefined","isDefined","isNotFunction","isObject","isNotObject","isNotArray","isString","isNotString","isNumber","isNotNumber","finite","isBoolean","isNotBoolean","typeOf","notTypeOf","instanceOf","notInstanceOf","inc","notInclude","deepInclude","notDeepInclude","nestedInclude","nested","notNestedInclude","deepNestedInclude","notDeepNestedInclude","ownInclude","own","notOwnInclude","deepOwnInclude","notDeepOwnInclude","notMatch","notProperty","propertyVal","notPropertyVal","deepPropertyVal","notDeepPropertyVal","ownProperty","notOwnProperty","ownPropertyVal","notOwnPropertyVal","deepOwnPropertyVal","notDeepOwnPropertyVal","nestedProperty","notNestedProperty","nestedPropertyVal","notNestedPropertyVal","deepNestedPropertyVal","notDeepNestedPropertyVal","lengthOf","hasAnyKeys","hasAllKeys","containsAllKeys","contain","doesNotHaveAnyKeys","doesNotHaveAllKeys","hasAnyDeepKeys","hasAllDeepKeys","containsAllDeepKeys","doesNotHaveAnyDeepKeys","doesNotHaveAllDeepKeys","assertErr","throw","doesNotThrow","approximately","sameMembers","set1","set2","same","members","notSameMembers","sameDeepMembers","notSameDeepMembers","sameOrderedMembers","notSameOrderedMembers","sameDeepOrderedMembers","notSameDeepOrderedMembers","includeMembers","notIncludeMembers","includeDeepMembers","notIncludeDeepMembers","includeOrderedMembers","notIncludeOrderedMembers","includeDeepOrderedMembers","notIncludeDeepOrderedMembers","oneOf","inList","changes","change","changesBy","tmpMsg","by","doesNotChange","changesButNotBy","but","increases","increase","increasesBy","doesNotIncrease","increasesButNotBy","decreases","decrease","decreasesBy","doesNotDecrease","doesNotDecreaseBy","decreasesButNotBy","ifError","extensible","isNotExtensible","sealed","isNotSealed","frozen","isNotFrozen","isEmpty","isNotEmpty","alias","as","Unit_Enemy","Enemy","baseHP","baseDamage","maxHP","theStage","Level","currentHP","MaxHP","currentDamage","UpdateFeedback","counter","Hurt","Regenerate","ReceiveDamage","damage","adjustBarAnimation","CurrentHP","Die","Birth","RemoveByDeath","GetCurrentUnit","CurrentDamage","health","Unit_Unit","Unit","thePlayer","ArmyVitality","isUnlocked","Count","Unexist","Unlocked","alert","Exist","GetCurrentEnemy","percentage","jquery_default","Player","armyVitality","StageLevel","level","hasEnemy","hasUnit","log","CurrentUnit","Database_EnemyArrCounter","Database_StageOneEnemyArr","Database_EnemyArr","Database_CurrentEnemyArr","UnitArr","Database_counter","setInterval","u","MainGameCycle","Enemy_Enemy","Enemy_adjustBarAnimation","describe","it"],"mappings":"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","file":"index.spec.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([], factory);\n\telse {\n\t\tvar a = factory();\n\t\tfor(var i in a) (typeof exports === 'object' ? exports : root)[i] = a[i];\n\t}\n})(window, function() {\nreturn "," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 40);\n","/*!\n * Chai - flag utility\n * Copyright(c) 2012-2014 Jake Luer <jake@alogicalparadox.com>\n * MIT Licensed\n */\n\n/**\n * ### .flag(object, key, [value])\n *\n * Get or set a flag value on an object. If a\n * value is provided it will be set, else it will\n * return the currently set value or `undefined` if\n * the value is not set.\n *\n *     utils.flag(this, 'foo', 'bar'); // setter\n *     utils.flag(this, 'foo'); // getter, returns `bar`\n *\n * @param {Object} object constructed Assertion\n * @param {String} key\n * @param {Mixed} value (optional)\n * @namespace Utils\n * @name flag\n * @api private\n */\n\nmodule.exports = function flag(obj, key, value) {\n  var flags = obj.__flags || (obj.__flags = Object.create(null));\n  if (arguments.length === 3) {\n    flags[key] = value;\n  } else {\n    return flags[key];\n  }\n};\n","/*!\n * chai\n * Copyright(c) 2011-2014 Jake Luer <jake@alogicalparadox.com>\n * MIT Licensed\n */\n\nvar used = [];\n\n/*!\n * Chai version\n */\n\nexports.version = '4.1.2';\n\n/*!\n * Assertion Error\n */\n\nexports.AssertionError = require('assertion-error');\n\n/*!\n * Utils for plugins (not exported)\n */\n\nvar util = require('./chai/utils');\n\n/**\n * # .use(function)\n *\n * Provides a way to extend the internals of Chai.\n *\n * @param {Function}\n * @returns {this} for chaining\n * @api public\n */\n\nexports.use = function (fn) {\n  if (!~used.indexOf(fn)) {\n    fn(exports, util);\n    used.push(fn);\n  }\n\n  return exports;\n};\n\n/*!\n * Utility Functions\n */\n\nexports.util = util;\n\n/*!\n * Configuration\n */\n\nvar config = require('./chai/config');\nexports.config = config;\n\n/*!\n * Primary `Assertion` prototype\n */\n\nvar assertion = require('./chai/assertion');\nexports.use(assertion);\n\n/*!\n * Core Assertions\n */\n\nvar core = require('./chai/core/assertions');\nexports.use(core);\n\n/*!\n * Expect interface\n */\n\nvar expect = require('./chai/interface/expect');\nexports.use(expect);\n\n/*!\n * Should interface\n */\n\nvar should = require('./chai/interface/should');\nexports.use(should);\n\n/*!\n * Assert interface\n */\n\nvar assert = require('./chai/interface/assert');\nexports.use(assert);\n","module.exports = {\n\n  /**\n   * ### config.includeStack\n   *\n   * User configurable property, influences whether stack trace\n   * is included in Assertion error message. Default of false\n   * suppresses stack trace in the error message.\n   *\n   *     chai.config.includeStack = true;  // enable stack on error\n   *\n   * @param {Boolean}\n   * @api public\n   */\n\n  includeStack: false,\n\n  /**\n   * ### config.showDiff\n   *\n   * User configurable property, influences whether or not\n   * the `showDiff` flag should be included in the thrown\n   * AssertionErrors. `false` will always be `false`; `true`\n   * will be true when the assertion has requested a diff\n   * be shown.\n   *\n   * @param {Boolean}\n   * @api public\n   */\n\n  showDiff: true,\n\n  /**\n   * ### config.truncateThreshold\n   *\n   * User configurable property, sets length threshold for actual and\n   * expected values in assertion errors. If this threshold is exceeded, for\n   * example for large data structures, the value is replaced with something\n   * like `[ Array(3) ]` or `{ Object (prop1, prop2) }`.\n   *\n   * Set it to zero if you want to disable truncating altogether.\n   *\n   * This is especially userful when doing assertions on arrays: having this\n   * set to a reasonable large value makes the failure messages readily\n   * inspectable.\n   *\n   *     chai.config.truncateThreshold = 0;  // disable truncating\n   *\n   * @param {Number}\n   * @api public\n   */\n\n  truncateThreshold: 40,\n\n  /**\n   * ### config.useProxy\n   *\n   * User configurable property, defines if chai will use a Proxy to throw\n   * an error when a non-existent property is read, which protects users\n   * from typos when using property-based assertions.\n   *\n   * Set it to false if you want to disable this feature.\n   *\n   *     chai.config.useProxy = false;  // disable use of Proxy\n   *\n   * This feature is automatically disabled regardless of this config value\n   * in environments that don't support proxies.\n   *\n   * @param {Boolean}\n   * @api public\n   */\n\n  useProxy: true,\n\n  /**\n   * ### config.proxyExcludedKeys\n   *\n   * User configurable property, defines which properties should be ignored\n   * instead of throwing an error if they do not exist on the assertion.\n   * This is only applied if the environment Chai is running in supports proxies and\n   * if the `useProxy` configuration setting is enabled.\n   * By default, `then` and `inspect` will not throw an error if they do not exist on the\n   * assertion object because the `.inspect` property is read by `util.inspect` (for example, when\n   * using `console.log` on the assertion object) and `.then` is necessary for promise type-checking.\n   *\n   *     // By default these keys will not throw an error if they do not exist on the assertion object\n   *     chai.config.proxyExcludedKeys = ['then', 'inspect'];\n   *\n   * @param {Array}\n   * @api public\n   */\n\n  proxyExcludedKeys: ['then', 'inspect', 'toJSON']\n};\n","/*!\n * Chai - transferFlags utility\n * Copyright(c) 2012-2014 Jake Luer <jake@alogicalparadox.com>\n * MIT Licensed\n */\n\n/**\n * ### .transferFlags(assertion, object, includeAll = true)\n *\n * Transfer all the flags for `assertion` to `object`. If\n * `includeAll` is set to `false`, then the base Chai\n * assertion flags (namely `object`, `ssfi`, `lockSsfi`,\n * and `message`) will not be transferred.\n *\n *\n *     var newAssertion = new Assertion();\n *     utils.transferFlags(assertion, newAssertion);\n *\n *     var anotherAsseriton = new Assertion(myObj);\n *     utils.transferFlags(assertion, anotherAssertion, false);\n *\n * @param {Assertion} assertion the assertion to transfer the flags from\n * @param {Object} object the object to transfer the flags to; usually a new assertion\n * @param {Boolean} includeAll\n * @namespace Utils\n * @name transferFlags\n * @api private\n */\n\nmodule.exports = function transferFlags(assertion, object, includeAll) {\n  var flags = assertion.__flags || (assertion.__flags = Object.create(null));\n\n  if (!object.__flags) {\n    object.__flags = Object.create(null);\n  }\n\n  includeAll = arguments.length === 3 ? includeAll : true;\n\n  for (var flag in flags) {\n    if (includeAll ||\n        (flag !== 'object' && flag !== 'ssfi' && flag !== 'lockSsfi' && flag != 'message')) {\n      object.__flags[flag] = flags[flag];\n    }\n  }\n};\n","/*!\n * jQuery JavaScript Library v3.3.1\n * https://jquery.com/\n *\n * Includes Sizzle.js\n * https://sizzlejs.com/\n *\n * Copyright JS Foundation and other contributors\n * Released under the MIT license\n * https://jquery.org/license\n *\n * Date: 2018-01-20T17:24Z\n */\n( function( global, factory ) {\n\n\t\"use strict\";\n\n\tif ( typeof module === \"object\" && typeof module.exports === \"object\" ) {\n\n\t\t// For CommonJS and CommonJS-like environments where a proper `window`\n\t\t// is present, execute the factory and get jQuery.\n\t\t// For environments that do not have a `window` with a `document`\n\t\t// (such as Node.js), expose a factory as module.exports.\n\t\t// This accentuates the need for the creation of a real `window`.\n\t\t// e.g. var jQuery = require(\"jquery\")(window);\n\t\t// See ticket #14549 for more info.\n\t\tmodule.exports = global.document ?\n\t\t\tfactory( global, true ) :\n\t\t\tfunction( w ) {\n\t\t\t\tif ( !w.document ) {\n\t\t\t\t\tthrow new Error( \"jQuery requires a window with a document\" );\n\t\t\t\t}\n\t\t\t\treturn factory( w );\n\t\t\t};\n\t} else {\n\t\tfactory( global );\n\t}\n\n// Pass this if window is not defined yet\n} )( typeof window !== \"undefined\" ? window : this, function( window, noGlobal ) {\n\n// Edge <= 12 - 13+, Firefox <=18 - 45+, IE 10 - 11, Safari 5.1 - 9+, iOS 6 - 9.1\n// throw exceptions when non-strict code (e.g., ASP.NET 4.5) accesses strict mode\n// arguments.callee.caller (trac-13335). But as of jQuery 3.0 (2016), strict mode should be common\n// enough that all such attempts are guarded in a try block.\n\"use strict\";\n\nvar arr = [];\n\nvar document = window.document;\n\nvar getProto = Object.getPrototypeOf;\n\nvar slice = arr.slice;\n\nvar concat = arr.concat;\n\nvar push = arr.push;\n\nvar indexOf = arr.indexOf;\n\nvar class2type = {};\n\nvar toString = class2type.toString;\n\nvar hasOwn = class2type.hasOwnProperty;\n\nvar fnToString = hasOwn.toString;\n\nvar ObjectFunctionString = fnToString.call( Object );\n\nvar support = {};\n\nvar isFunction = function isFunction( obj ) {\n\n      // Support: Chrome <=57, Firefox <=52\n      // In some browsers, typeof returns \"function\" for HTML <object> elements\n      // (i.e., `typeof document.createElement( \"object\" ) === \"function\"`).\n      // We don't want to classify *any* DOM node as a function.\n      return typeof obj === \"function\" && typeof obj.nodeType !== \"number\";\n  };\n\n\nvar isWindow = function isWindow( obj ) {\n\t\treturn obj != null && obj === obj.window;\n\t};\n\n\n\n\n\tvar preservedScriptAttributes = {\n\t\ttype: true,\n\t\tsrc: true,\n\t\tnoModule: true\n\t};\n\n\tfunction DOMEval( code, doc, node ) {\n\t\tdoc = doc || document;\n\n\t\tvar i,\n\t\t\tscript = doc.createElement( \"script\" );\n\n\t\tscript.text = code;\n\t\tif ( node ) {\n\t\t\tfor ( i in preservedScriptAttributes ) {\n\t\t\t\tif ( node[ i ] ) {\n\t\t\t\t\tscript[ i ] = node[ i ];\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\tdoc.head.appendChild( script ).parentNode.removeChild( script );\n\t}\n\n\nfunction toType( obj ) {\n\tif ( obj == null ) {\n\t\treturn obj + \"\";\n\t}\n\n\t// Support: Android <=2.3 only (functionish RegExp)\n\treturn typeof obj === \"object\" || typeof obj === \"function\" ?\n\t\tclass2type[ toString.call( obj ) ] || \"object\" :\n\t\ttypeof obj;\n}\n/* global Symbol */\n// Defining this global in .eslintrc.json would create a danger of using the global\n// unguarded in another place, it seems safer to define global only for this module\n\n\n\nvar\n\tversion = \"3.3.1\",\n\n\t// Define a local copy of jQuery\n\tjQuery = function( selector, context ) {\n\n\t\t// The jQuery object is actually just the init constructor 'enhanced'\n\t\t// Need init if jQuery is called (just allow error to be thrown if not included)\n\t\treturn new jQuery.fn.init( selector, context );\n\t},\n\n\t// Support: Android <=4.0 only\n\t// Make sure we trim BOM and NBSP\n\trtrim = /^[\\s\\uFEFF\\xA0]+|[\\s\\uFEFF\\xA0]+$/g;\n\njQuery.fn = jQuery.prototype = {\n\n\t// The current version of jQuery being used\n\tjquery: version,\n\n\tconstructor: jQuery,\n\n\t// The default length of a jQuery object is 0\n\tlength: 0,\n\n\ttoArray: function() {\n\t\treturn slice.call( this );\n\t},\n\n\t// Get the Nth element in the matched element set OR\n\t// Get the whole matched element set as a clean array\n\tget: function( num ) {\n\n\t\t// Return all the elements in a clean array\n\t\tif ( num == null ) {\n\t\t\treturn slice.call( this );\n\t\t}\n\n\t\t// Return just the one element from the set\n\t\treturn num < 0 ? this[ num + this.length ] : this[ num ];\n\t},\n\n\t// Take an array of elements and push it onto the stack\n\t// (returning the new matched element set)\n\tpushStack: function( elems ) {\n\n\t\t// Build a new jQuery matched element set\n\t\tvar ret = jQuery.merge( this.constructor(), elems );\n\n\t\t// Add the old object onto the stack (as a reference)\n\t\tret.prevObject = this;\n\n\t\t// Return the newly-formed element set\n\t\treturn ret;\n\t},\n\n\t// Execute a callback for every element in the matched set.\n\teach: function( callback ) {\n\t\treturn jQuery.each( this, callback );\n\t},\n\n\tmap: function( callback ) {\n\t\treturn this.pushStack( jQuery.map( this, function( elem, i ) {\n\t\t\treturn callback.call( elem, i, elem );\n\t\t} ) );\n\t},\n\n\tslice: function() {\n\t\treturn this.pushStack( slice.apply( this, arguments ) );\n\t},\n\n\tfirst: function() {\n\t\treturn this.eq( 0 );\n\t},\n\n\tlast: function() {\n\t\treturn this.eq( -1 );\n\t},\n\n\teq: function( i ) {\n\t\tvar len = this.length,\n\t\t\tj = +i + ( i < 0 ? len : 0 );\n\t\treturn this.pushStack( j >= 0 && j < len ? [ this[ j ] ] : [] );\n\t},\n\n\tend: function() {\n\t\treturn this.prevObject || this.constructor();\n\t},\n\n\t// For internal use only.\n\t// Behaves like an Array's method, not like a jQuery method.\n\tpush: push,\n\tsort: arr.sort,\n\tsplice: arr.splice\n};\n\njQuery.extend = jQuery.fn.extend = function() {\n\tvar options, name, src, copy, copyIsArray, clone,\n\t\ttarget = arguments[ 0 ] || {},\n\t\ti = 1,\n\t\tlength = arguments.length,\n\t\tdeep = false;\n\n\t// Handle a deep copy situation\n\tif ( typeof target === \"boolean\" ) {\n\t\tdeep = target;\n\n\t\t// Skip the boolean and the target\n\t\ttarget = arguments[ i ] || {};\n\t\ti++;\n\t}\n\n\t// Handle case when target is a string or something (possible in deep copy)\n\tif ( typeof target !== \"object\" && !isFunction( target ) ) {\n\t\ttarget = {};\n\t}\n\n\t// Extend jQuery itself if only one argument is passed\n\tif ( i === length ) {\n\t\ttarget = this;\n\t\ti--;\n\t}\n\n\tfor ( ; i < length; i++ ) {\n\n\t\t// Only deal with non-null/undefined values\n\t\tif ( ( options = arguments[ i ] ) != null ) {\n\n\t\t\t// Extend the base object\n\t\t\tfor ( name in options ) {\n\t\t\t\tsrc = target[ name ];\n\t\t\t\tcopy = options[ name ];\n\n\t\t\t\t// Prevent never-ending loop\n\t\t\t\tif ( target === copy ) {\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\t// Recurse if we're merging plain objects or arrays\n\t\t\t\tif ( deep && copy && ( jQuery.isPlainObject( copy ) ||\n\t\t\t\t\t( copyIsArray = Array.isArray( copy ) ) ) ) {\n\n\t\t\t\t\tif ( copyIsArray ) {\n\t\t\t\t\t\tcopyIsArray = false;\n\t\t\t\t\t\tclone = src && Array.isArray( src ) ? src : [];\n\n\t\t\t\t\t} else {\n\t\t\t\t\t\tclone = src && jQuery.isPlainObject( src ) ? src : {};\n\t\t\t\t\t}\n\n\t\t\t\t\t// Never move original objects, clone them\n\t\t\t\t\ttarget[ name ] = jQuery.extend( deep, clone, copy );\n\n\t\t\t\t// Don't bring in undefined values\n\t\t\t\t} else if ( copy !== undefined ) {\n\t\t\t\t\ttarget[ name ] = copy;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\t// Return the modified object\n\treturn target;\n};\n\njQuery.extend( {\n\n\t// Unique for each copy of jQuery on the page\n\texpando: \"jQuery\" + ( version + Math.random() ).replace( /\\D/g, \"\" ),\n\n\t// Assume jQuery is ready without the ready module\n\tisReady: true,\n\n\terror: function( msg ) {\n\t\tthrow new Error( msg );\n\t},\n\n\tnoop: function() {},\n\n\tisPlainObject: function( obj ) {\n\t\tvar proto, Ctor;\n\n\t\t// Detect obvious negatives\n\t\t// Use toString instead of jQuery.type to catch host objects\n\t\tif ( !obj || toString.call( obj ) !== \"[object Object]\" ) {\n\t\t\treturn false;\n\t\t}\n\n\t\tproto = getProto( obj );\n\n\t\t// Objects with no prototype (e.g., `Object.create( null )`) are plain\n\t\tif ( !proto ) {\n\t\t\treturn true;\n\t\t}\n\n\t\t// Objects with prototype are plain iff they were constructed by a global Object function\n\t\tCtor = hasOwn.call( proto, \"constructor\" ) && proto.constructor;\n\t\treturn typeof Ctor === \"function\" && fnToString.call( Ctor ) === ObjectFunctionString;\n\t},\n\n\tisEmptyObject: function( obj ) {\n\n\t\t/* eslint-disable no-unused-vars */\n\t\t// See https://github.com/eslint/eslint/issues/6125\n\t\tvar name;\n\n\t\tfor ( name in obj ) {\n\t\t\treturn false;\n\t\t}\n\t\treturn true;\n\t},\n\n\t// Evaluates a script in a global context\n\tglobalEval: function( code ) {\n\t\tDOMEval( code );\n\t},\n\n\teach: function( obj, callback ) {\n\t\tvar length, i = 0;\n\n\t\tif ( isArrayLike( obj ) ) {\n\t\t\tlength = obj.length;\n\t\t\tfor ( ; i < length; i++ ) {\n\t\t\t\tif ( callback.call( obj[ i ], i, obj[ i ] ) === false ) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t} else {\n\t\t\tfor ( i in obj ) {\n\t\t\t\tif ( callback.call( obj[ i ], i, obj[ i ] ) === false ) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\treturn obj;\n\t},\n\n\t// Support: Android <=4.0 only\n\ttrim: function( text ) {\n\t\treturn text == null ?\n\t\t\t\"\" :\n\t\t\t( text + \"\" ).replace( rtrim, \"\" );\n\t},\n\n\t// results is for internal usage only\n\tmakeArray: function( arr, results ) {\n\t\tvar ret = results || [];\n\n\t\tif ( arr != null ) {\n\t\t\tif ( isArrayLike( Object( arr ) ) ) {\n\t\t\t\tjQuery.merge( ret,\n\t\t\t\t\ttypeof arr === \"string\" ?\n\t\t\t\t\t[ arr ] : arr\n\t\t\t\t);\n\t\t\t} else {\n\t\t\t\tpush.call( ret, arr );\n\t\t\t}\n\t\t}\n\n\t\treturn ret;\n\t},\n\n\tinArray: function( elem, arr, i ) {\n\t\treturn arr == null ? -1 : indexOf.call( arr, elem, i );\n\t},\n\n\t// Support: Android <=4.0 only, PhantomJS 1 only\n\t// push.apply(_, arraylike) throws on ancient WebKit\n\tmerge: function( first, second ) {\n\t\tvar len = +second.length,\n\t\t\tj = 0,\n\t\t\ti = first.length;\n\n\t\tfor ( ; j < len; j++ ) {\n\t\t\tfirst[ i++ ] = second[ j ];\n\t\t}\n\n\t\tfirst.length = i;\n\n\t\treturn first;\n\t},\n\n\tgrep: function( elems, callback, invert ) {\n\t\tvar callbackInverse,\n\t\t\tmatches = [],\n\t\t\ti = 0,\n\t\t\tlength = elems.length,\n\t\t\tcallbackExpect = !invert;\n\n\t\t// Go through the array, only saving the items\n\t\t// that pass the validator function\n\t\tfor ( ; i < length; i++ ) {\n\t\t\tcallbackInverse = !callback( elems[ i ], i );\n\t\t\tif ( callbackInverse !== callbackExpect ) {\n\t\t\t\tmatches.push( elems[ i ] );\n\t\t\t}\n\t\t}\n\n\t\treturn matches;\n\t},\n\n\t// arg is for internal usage only\n\tmap: function( elems, callback, arg ) {\n\t\tvar length, value,\n\t\t\ti = 0,\n\t\t\tret = [];\n\n\t\t// Go through the array, translating each of the items to their new values\n\t\tif ( isArrayLike( elems ) ) {\n\t\t\tlength = elems.length;\n\t\t\tfor ( ; i < length; i++ ) {\n\t\t\t\tvalue = callback( elems[ i ], i, arg );\n\n\t\t\t\tif ( value != null ) {\n\t\t\t\t\tret.push( value );\n\t\t\t\t}\n\t\t\t}\n\n\t\t// Go through every key on the object,\n\t\t} else {\n\t\t\tfor ( i in elems ) {\n\t\t\t\tvalue = callback( elems[ i ], i, arg );\n\n\t\t\t\tif ( value != null ) {\n\t\t\t\t\tret.push( value );\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\t// Flatten any nested arrays\n\t\treturn concat.apply( [], ret );\n\t},\n\n\t// A global GUID counter for objects\n\tguid: 1,\n\n\t// jQuery.support is not used in Core but other projects attach their\n\t// properties to it so it needs to exist.\n\tsupport: support\n} );\n\nif ( typeof Symbol === \"function\" ) {\n\tjQuery.fn[ Symbol.iterator ] = arr[ Symbol.iterator ];\n}\n\n// Populate the class2type map\njQuery.each( \"Boolean Number String Function Array Date RegExp Object Error Symbol\".split( \" \" ),\nfunction( i, name ) {\n\tclass2type[ \"[object \" + name + \"]\" ] = name.toLowerCase();\n} );\n\nfunction isArrayLike( obj ) {\n\n\t// Support: real iOS 8.2 only (not reproducible in simulator)\n\t// `in` check used to prevent JIT error (gh-2145)\n\t// hasOwn isn't used here due to false negatives\n\t// regarding Nodelist length in IE\n\tvar length = !!obj && \"length\" in obj && obj.length,\n\t\ttype = toType( obj );\n\n\tif ( isFunction( obj ) || isWindow( obj ) ) {\n\t\treturn false;\n\t}\n\n\treturn type === \"array\" || length === 0 ||\n\t\ttypeof length === \"number\" && length > 0 && ( length - 1 ) in obj;\n}\nvar Sizzle =\n/*!\n * Sizzle CSS Selector Engine v2.3.3\n * https://sizzlejs.com/\n *\n * Copyright jQuery Foundation and other contributors\n * Released under the MIT license\n * http://jquery.org/license\n *\n * Date: 2016-08-08\n */\n(function( window ) {\n\nvar i,\n\tsupport,\n\tExpr,\n\tgetText,\n\tisXML,\n\ttokenize,\n\tcompile,\n\tselect,\n\toutermostContext,\n\tsortInput,\n\thasDuplicate,\n\n\t// Local document vars\n\tsetDocument,\n\tdocument,\n\tdocElem,\n\tdocumentIsHTML,\n\trbuggyQSA,\n\trbuggyMatches,\n\tmatches,\n\tcontains,\n\n\t// Instance-specific data\n\texpando = \"sizzle\" + 1 * new Date(),\n\tpreferredDoc = window.document,\n\tdirruns = 0,\n\tdone = 0,\n\tclassCache = createCache(),\n\ttokenCache = createCache(),\n\tcompilerCache = createCache(),\n\tsortOrder = function( a, b ) {\n\t\tif ( a === b ) {\n\t\t\thasDuplicate = true;\n\t\t}\n\t\treturn 0;\n\t},\n\n\t// Instance methods\n\thasOwn = ({}).hasOwnProperty,\n\tarr = [],\n\tpop = arr.pop,\n\tpush_native = arr.push,\n\tpush = arr.push,\n\tslice = arr.slice,\n\t// Use a stripped-down indexOf as it's faster than native\n\t// https://jsperf.com/thor-indexof-vs-for/5\n\tindexOf = function( list, elem ) {\n\t\tvar i = 0,\n\t\t\tlen = list.length;\n\t\tfor ( ; i < len; i++ ) {\n\t\t\tif ( list[i] === elem ) {\n\t\t\t\treturn i;\n\t\t\t}\n\t\t}\n\t\treturn -1;\n\t},\n\n\tbooleans = \"checked|selected|async|autofocus|autoplay|controls|defer|disabled|hidden|ismap|loop|multiple|open|readonly|required|scoped\",\n\n\t// Regular expressions\n\n\t// http://www.w3.org/TR/css3-selectors/#whitespace\n\twhitespace = \"[\\\\x20\\\\t\\\\r\\\\n\\\\f]\",\n\n\t// http://www.w3.org/TR/CSS21/syndata.html#value-def-identifier\n\tidentifier = \"(?:\\\\\\\\.|[\\\\w-]|[^\\0-\\\\xa0])+\",\n\n\t// Attribute selectors: http://www.w3.org/TR/selectors/#attribute-selectors\n\tattributes = \"\\\\[\" + whitespace + \"*(\" + identifier + \")(?:\" + whitespace +\n\t\t// Operator (capture 2)\n\t\t\"*([*^$|!~]?=)\" + whitespace +\n\t\t// \"Attribute values must be CSS identifiers [capture 5] or strings [capture 3 or capture 4]\"\n\t\t\"*(?:'((?:\\\\\\\\.|[^\\\\\\\\'])*)'|\\\"((?:\\\\\\\\.|[^\\\\\\\\\\\"])*)\\\"|(\" + identifier + \"))|)\" + whitespace +\n\t\t\"*\\\\]\",\n\n\tpseudos = \":(\" + identifier + \")(?:\\\\((\" +\n\t\t// To reduce the number of selectors needing tokenize in the preFilter, prefer arguments:\n\t\t// 1. quoted (capture 3; capture 4 or capture 5)\n\t\t\"('((?:\\\\\\\\.|[^\\\\\\\\'])*)'|\\\"((?:\\\\\\\\.|[^\\\\\\\\\\\"])*)\\\")|\" +\n\t\t// 2. simple (capture 6)\n\t\t\"((?:\\\\\\\\.|[^\\\\\\\\()[\\\\]]|\" + attributes + \")*)|\" +\n\t\t// 3. anything else (capture 2)\n\t\t\".*\" +\n\t\t\")\\\\)|)\",\n\n\t// Leading and non-escaped trailing whitespace, capturing some non-whitespace characters preceding the latter\n\trwhitespace = new RegExp( whitespace + \"+\", \"g\" ),\n\trtrim = new RegExp( \"^\" + whitespace + \"+|((?:^|[^\\\\\\\\])(?:\\\\\\\\.)*)\" + whitespace + \"+$\", \"g\" ),\n\n\trcomma = new RegExp( \"^\" + whitespace + \"*,\" + whitespace + \"*\" ),\n\trcombinators = new RegExp( \"^\" + whitespace + \"*([>+~]|\" + whitespace + \")\" + whitespace + \"*\" ),\n\n\trattributeQuotes = new RegExp( \"=\" + whitespace + \"*([^\\\\]'\\\"]*?)\" + whitespace + \"*\\\\]\", \"g\" ),\n\n\trpseudo = new RegExp( pseudos ),\n\tridentifier = new RegExp( \"^\" + identifier + \"$\" ),\n\n\tmatchExpr = {\n\t\t\"ID\": new RegExp( \"^#(\" + identifier + \")\" ),\n\t\t\"CLASS\": new RegExp( \"^\\\\.(\" + identifier + \")\" ),\n\t\t\"TAG\": new RegExp( \"^(\" + identifier + \"|[*])\" ),\n\t\t\"ATTR\": new RegExp( \"^\" + attributes ),\n\t\t\"PSEUDO\": new RegExp( \"^\" + pseudos ),\n\t\t\"CHILD\": new RegExp( \"^:(only|first|last|nth|nth-last)-(child|of-type)(?:\\\\(\" + whitespace +\n\t\t\t\"*(even|odd|(([+-]|)(\\\\d*)n|)\" + whitespace + \"*(?:([+-]|)\" + whitespace +\n\t\t\t\"*(\\\\d+)|))\" + whitespace + \"*\\\\)|)\", \"i\" ),\n\t\t\"bool\": new RegExp( \"^(?:\" + booleans + \")$\", \"i\" ),\n\t\t// For use in libraries implementing .is()\n\t\t// We use this for POS matching in `select`\n\t\t\"needsContext\": new RegExp( \"^\" + whitespace + \"*[>+~]|:(even|odd|eq|gt|lt|nth|first|last)(?:\\\\(\" +\n\t\t\twhitespace + \"*((?:-\\\\d)?\\\\d*)\" + whitespace + \"*\\\\)|)(?=[^-]|$)\", \"i\" )\n\t},\n\n\trinputs = /^(?:input|select|textarea|button)$/i,\n\trheader = /^h\\d$/i,\n\n\trnative = /^[^{]+\\{\\s*\\[native \\w/,\n\n\t// Easily-parseable/retrievable ID or TAG or CLASS selectors\n\trquickExpr = /^(?:#([\\w-]+)|(\\w+)|\\.([\\w-]+))$/,\n\n\trsibling = /[+~]/,\n\n\t// CSS escapes\n\t// http://www.w3.org/TR/CSS21/syndata.html#escaped-characters\n\trunescape = new RegExp( \"\\\\\\\\([\\\\da-f]{1,6}\" + whitespace + \"?|(\" + whitespace + \")|.)\", \"ig\" ),\n\tfunescape = function( _, escaped, escapedWhitespace ) {\n\t\tvar high = \"0x\" + escaped - 0x10000;\n\t\t// NaN means non-codepoint\n\t\t// Support: Firefox<24\n\t\t// Workaround erroneous numeric interpretation of +\"0x\"\n\t\treturn high !== high || escapedWhitespace ?\n\t\t\tescaped :\n\t\t\thigh < 0 ?\n\t\t\t\t// BMP codepoint\n\t\t\t\tString.fromCharCode( high + 0x10000 ) :\n\t\t\t\t// Supplemental Plane codepoint (surrogate pair)\n\t\t\t\tString.fromCharCode( high >> 10 | 0xD800, high & 0x3FF | 0xDC00 );\n\t},\n\n\t// CSS string/identifier serialization\n\t// https://drafts.csswg.org/cssom/#common-serializing-idioms\n\trcssescape = /([\\0-\\x1f\\x7f]|^-?\\d)|^-$|[^\\0-\\x1f\\x7f-\\uFFFF\\w-]/g,\n\tfcssescape = function( ch, asCodePoint ) {\n\t\tif ( asCodePoint ) {\n\n\t\t\t// U+0000 NULL becomes U+FFFD REPLACEMENT CHARACTER\n\t\t\tif ( ch === \"\\0\" ) {\n\t\t\t\treturn \"\\uFFFD\";\n\t\t\t}\n\n\t\t\t// Control characters and (dependent upon position) numbers get escaped as code points\n\t\t\treturn ch.slice( 0, -1 ) + \"\\\\\" + ch.charCodeAt( ch.length - 1 ).toString( 16 ) + \" \";\n\t\t}\n\n\t\t// Other potentially-special ASCII characters get backslash-escaped\n\t\treturn \"\\\\\" + ch;\n\t},\n\n\t// Used for iframes\n\t// See setDocument()\n\t// Removing the function wrapper causes a \"Permission Denied\"\n\t// error in IE\n\tunloadHandler = function() {\n\t\tsetDocument();\n\t},\n\n\tdisabledAncestor = addCombinator(\n\t\tfunction( elem ) {\n\t\t\treturn elem.disabled === true && (\"form\" in elem || \"label\" in elem);\n\t\t},\n\t\t{ dir: \"parentNode\", next: \"legend\" }\n\t);\n\n// Optimize for push.apply( _, NodeList )\ntry {\n\tpush.apply(\n\t\t(arr = slice.call( preferredDoc.childNodes )),\n\t\tpreferredDoc.childNodes\n\t);\n\t// Support: Android<4.0\n\t// Detect silently failing push.apply\n\tarr[ preferredDoc.childNodes.length ].nodeType;\n} catch ( e ) {\n\tpush = { apply: arr.length ?\n\n\t\t// Leverage slice if possible\n\t\tfunction( target, els ) {\n\t\t\tpush_native.apply( target, slice.call(els) );\n\t\t} :\n\n\t\t// Support: IE<9\n\t\t// Otherwise append directly\n\t\tfunction( target, els ) {\n\t\t\tvar j = target.length,\n\t\t\t\ti = 0;\n\t\t\t// Can't trust NodeList.length\n\t\t\twhile ( (target[j++] = els[i++]) ) {}\n\t\t\ttarget.length = j - 1;\n\t\t}\n\t};\n}\n\nfunction Sizzle( selector, context, results, seed ) {\n\tvar m, i, elem, nid, match, groups, newSelector,\n\t\tnewContext = context && context.ownerDocument,\n\n\t\t// nodeType defaults to 9, since context defaults to document\n\t\tnodeType = context ? context.nodeType : 9;\n\n\tresults = results || [];\n\n\t// Return early from calls with invalid selector or context\n\tif ( typeof selector !== \"string\" || !selector ||\n\t\tnodeType !== 1 && nodeType !== 9 && nodeType !== 11 ) {\n\n\t\treturn results;\n\t}\n\n\t// Try to shortcut find operations (as opposed to filters) in HTML documents\n\tif ( !seed ) {\n\n\t\tif ( ( context ? context.ownerDocument || context : preferredDoc ) !== document ) {\n\t\t\tsetDocument( context );\n\t\t}\n\t\tcontext = context || document;\n\n\t\tif ( documentIsHTML ) {\n\n\t\t\t// If the selector is sufficiently simple, try using a \"get*By*\" DOM method\n\t\t\t// (excepting DocumentFragment context, where the methods don't exist)\n\t\t\tif ( nodeType !== 11 && (match = rquickExpr.exec( selector )) ) {\n\n\t\t\t\t// ID selector\n\t\t\t\tif ( (m = match[1]) ) {\n\n\t\t\t\t\t// Document context\n\t\t\t\t\tif ( nodeType === 9 ) {\n\t\t\t\t\t\tif ( (elem = context.getElementById( m )) ) {\n\n\t\t\t\t\t\t\t// Support: IE, Opera, Webkit\n\t\t\t\t\t\t\t// TODO: identify versions\n\t\t\t\t\t\t\t// getElementById can match elements by name instead of ID\n\t\t\t\t\t\t\tif ( elem.id === m ) {\n\t\t\t\t\t\t\t\tresults.push( elem );\n\t\t\t\t\t\t\t\treturn results;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\treturn results;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t// Element context\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\t// Support: IE, Opera, Webkit\n\t\t\t\t\t\t// TODO: identify versions\n\t\t\t\t\t\t// getElementById can match elements by name instead of ID\n\t\t\t\t\t\tif ( newContext && (elem = newContext.getElementById( m )) &&\n\t\t\t\t\t\t\tcontains( context, elem ) &&\n\t\t\t\t\t\t\telem.id === m ) {\n\n\t\t\t\t\t\t\tresults.push( elem );\n\t\t\t\t\t\t\treturn results;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t// Type selector\n\t\t\t\t} else if ( match[2] ) {\n\t\t\t\t\tpush.apply( results, context.getElementsByTagName( selector ) );\n\t\t\t\t\treturn results;\n\n\t\t\t\t// Class selector\n\t\t\t\t} else if ( (m = match[3]) && support.getElementsByClassName &&\n\t\t\t\t\tcontext.getElementsByClassName ) {\n\n\t\t\t\t\tpush.apply( results, context.getElementsByClassName( m ) );\n\t\t\t\t\treturn results;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// Take advantage of querySelectorAll\n\t\t\tif ( support.qsa &&\n\t\t\t\t!compilerCache[ selector + \" \" ] &&\n\t\t\t\t(!rbuggyQSA || !rbuggyQSA.test( selector )) ) {\n\n\t\t\t\tif ( nodeType !== 1 ) {\n\t\t\t\t\tnewContext = context;\n\t\t\t\t\tnewSelector = selector;\n\n\t\t\t\t// qSA looks outside Element context, which is not what we want\n\t\t\t\t// Thanks to Andrew Dupont for this workaround technique\n\t\t\t\t// Support: IE <=8\n\t\t\t\t// Exclude object elements\n\t\t\t\t} else if ( context.nodeName.toLowerCase() !== \"object\" ) {\n\n\t\t\t\t\t// Capture the context ID, setting it first if necessary\n\t\t\t\t\tif ( (nid = context.getAttribute( \"id\" )) ) {\n\t\t\t\t\t\tnid = nid.replace( rcssescape, fcssescape );\n\t\t\t\t\t} else {\n\t\t\t\t\t\tcontext.setAttribute( \"id\", (nid = expando) );\n\t\t\t\t\t}\n\n\t\t\t\t\t// Prefix every selector in the list\n\t\t\t\t\tgroups = tokenize( selector );\n\t\t\t\t\ti = groups.length;\n\t\t\t\t\twhile ( i-- ) {\n\t\t\t\t\t\tgroups[i] = \"#\" + nid + \" \" + toSelector( groups[i] );\n\t\t\t\t\t}\n\t\t\t\t\tnewSelector = groups.join( \",\" );\n\n\t\t\t\t\t// Expand context for sibling selectors\n\t\t\t\t\tnewContext = rsibling.test( selector ) && testContext( context.parentNode ) ||\n\t\t\t\t\t\tcontext;\n\t\t\t\t}\n\n\t\t\t\tif ( newSelector ) {\n\t\t\t\t\ttry {\n\t\t\t\t\t\tpush.apply( results,\n\t\t\t\t\t\t\tnewContext.querySelectorAll( newSelector )\n\t\t\t\t\t\t);\n\t\t\t\t\t\treturn results;\n\t\t\t\t\t} catch ( qsaError ) {\n\t\t\t\t\t} finally {\n\t\t\t\t\t\tif ( nid === expando ) {\n\t\t\t\t\t\t\tcontext.removeAttribute( \"id\" );\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\t// All others\n\treturn select( selector.replace( rtrim, \"$1\" ), context, results, seed );\n}\n\n/**\n * Create key-value caches of limited size\n * @returns {function(string, object)} Returns the Object data after storing it on itself with\n *\tproperty name the (space-suffixed) string and (if the cache is larger than Expr.cacheLength)\n *\tdeleting the oldest entry\n */\nfunction createCache() {\n\tvar keys = [];\n\n\tfunction cache( key, value ) {\n\t\t// Use (key + \" \") to avoid collision with native prototype properties (see Issue #157)\n\t\tif ( keys.push( key + \" \" ) > Expr.cacheLength ) {\n\t\t\t// Only keep the most recent entries\n\t\t\tdelete cache[ keys.shift() ];\n\t\t}\n\t\treturn (cache[ key + \" \" ] = value);\n\t}\n\treturn cache;\n}\n\n/**\n * Mark a function for special use by Sizzle\n * @param {Function} fn The function to mark\n */\nfunction markFunction( fn ) {\n\tfn[ expando ] = true;\n\treturn fn;\n}\n\n/**\n * Support testing using an element\n * @param {Function} fn Passed the created element and returns a boolean result\n */\nfunction assert( fn ) {\n\tvar el = document.createElement(\"fieldset\");\n\n\ttry {\n\t\treturn !!fn( el );\n\t} catch (e) {\n\t\treturn false;\n\t} finally {\n\t\t// Remove from its parent by default\n\t\tif ( el.parentNode ) {\n\t\t\tel.parentNode.removeChild( el );\n\t\t}\n\t\t// release memory in IE\n\t\tel = null;\n\t}\n}\n\n/**\n * Adds the same handler for all of the specified attrs\n * @param {String} attrs Pipe-separated list of attributes\n * @param {Function} handler The method that will be applied\n */\nfunction addHandle( attrs, handler ) {\n\tvar arr = attrs.split(\"|\"),\n\t\ti = arr.length;\n\n\twhile ( i-- ) {\n\t\tExpr.attrHandle[ arr[i] ] = handler;\n\t}\n}\n\n/**\n * Checks document order of two siblings\n * @param {Element} a\n * @param {Element} b\n * @returns {Number} Returns less than 0 if a precedes b, greater than 0 if a follows b\n */\nfunction siblingCheck( a, b ) {\n\tvar cur = b && a,\n\t\tdiff = cur && a.nodeType === 1 && b.nodeType === 1 &&\n\t\t\ta.sourceIndex - b.sourceIndex;\n\n\t// Use IE sourceIndex if available on both nodes\n\tif ( diff ) {\n\t\treturn diff;\n\t}\n\n\t// Check if b follows a\n\tif ( cur ) {\n\t\twhile ( (cur = cur.nextSibling) ) {\n\t\t\tif ( cur === b ) {\n\t\t\t\treturn -1;\n\t\t\t}\n\t\t}\n\t}\n\n\treturn a ? 1 : -1;\n}\n\n/**\n * Returns a function to use in pseudos for input types\n * @param {String} type\n */\nfunction createInputPseudo( type ) {\n\treturn function( elem ) {\n\t\tvar name = elem.nodeName.toLowerCase();\n\t\treturn name === \"input\" && elem.type === type;\n\t};\n}\n\n/**\n * Returns a function to use in pseudos for buttons\n * @param {String} type\n */\nfunction createButtonPseudo( type ) {\n\treturn function( elem ) {\n\t\tvar name = elem.nodeName.toLowerCase();\n\t\treturn (name === \"input\" || name === \"button\") && elem.type === type;\n\t};\n}\n\n/**\n * Returns a function to use in pseudos for :enabled/:disabled\n * @param {Boolean} disabled true for :disabled; false for :enabled\n */\nfunction createDisabledPseudo( disabled ) {\n\n\t// Known :disabled false positives: fieldset[disabled] > legend:nth-of-type(n+2) :can-disable\n\treturn function( elem ) {\n\n\t\t// Only certain elements can match :enabled or :disabled\n\t\t// https://html.spec.whatwg.org/multipage/scripting.html#selector-enabled\n\t\t// https://html.spec.whatwg.org/multipage/scripting.html#selector-disabled\n\t\tif ( \"form\" in elem ) {\n\n\t\t\t// Check for inherited disabledness on relevant non-disabled elements:\n\t\t\t// * listed form-associated elements in a disabled fieldset\n\t\t\t//   https://html.spec.whatwg.org/multipage/forms.html#category-listed\n\t\t\t//   https://html.spec.whatwg.org/multipage/forms.html#concept-fe-disabled\n\t\t\t// * option elements in a disabled optgroup\n\t\t\t//   https://html.spec.whatwg.org/multipage/forms.html#concept-option-disabled\n\t\t\t// All such elements have a \"form\" property.\n\t\t\tif ( elem.parentNode && elem.disabled === false ) {\n\n\t\t\t\t// Option elements defer to a parent optgroup if present\n\t\t\t\tif ( \"label\" in elem ) {\n\t\t\t\t\tif ( \"label\" in elem.parentNode ) {\n\t\t\t\t\t\treturn elem.parentNode.disabled === disabled;\n\t\t\t\t\t} else {\n\t\t\t\t\t\treturn elem.disabled === disabled;\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\t// Support: IE 6 - 11\n\t\t\t\t// Use the isDisabled shortcut property to check for disabled fieldset ancestors\n\t\t\t\treturn elem.isDisabled === disabled ||\n\n\t\t\t\t\t// Where there is no isDisabled, check manually\n\t\t\t\t\t/* jshint -W018 */\n\t\t\t\t\telem.isDisabled !== !disabled &&\n\t\t\t\t\t\tdisabledAncestor( elem ) === disabled;\n\t\t\t}\n\n\t\t\treturn elem.disabled === disabled;\n\n\t\t// Try to winnow out elements that can't be disabled before trusting the disabled property.\n\t\t// Some victims get caught in our net (label, legend, menu, track), but it shouldn't\n\t\t// even exist on them, let alone have a boolean value.\n\t\t} else if ( \"label\" in elem ) {\n\t\t\treturn elem.disabled === disabled;\n\t\t}\n\n\t\t// Remaining elements are neither :enabled nor :disabled\n\t\treturn false;\n\t};\n}\n\n/**\n * Returns a function to use in pseudos for positionals\n * @param {Function} fn\n */\nfunction createPositionalPseudo( fn ) {\n\treturn markFunction(function( argument ) {\n\t\targument = +argument;\n\t\treturn markFunction(function( seed, matches ) {\n\t\t\tvar j,\n\t\t\t\tmatchIndexes = fn( [], seed.length, argument ),\n\t\t\t\ti = matchIndexes.length;\n\n\t\t\t// Match elements found at the specified indexes\n\t\t\twhile ( i-- ) {\n\t\t\t\tif ( seed[ (j = matchIndexes[i]) ] ) {\n\t\t\t\t\tseed[j] = !(matches[j] = seed[j]);\n\t\t\t\t}\n\t\t\t}\n\t\t});\n\t});\n}\n\n/**\n * Checks a node for validity as a Sizzle context\n * @param {Element|Object=} context\n * @returns {Element|Object|Boolean} The input node if acceptable, otherwise a falsy value\n */\nfunction testContext( context ) {\n\treturn context && typeof context.getElementsByTagName !== \"undefined\" && context;\n}\n\n// Expose support vars for convenience\nsupport = Sizzle.support = {};\n\n/**\n * Detects XML nodes\n * @param {Element|Object} elem An element or a document\n * @returns {Boolean} True iff elem is a non-HTML XML node\n */\nisXML = Sizzle.isXML = function( elem ) {\n\t// documentElement is verified for cases where it doesn't yet exist\n\t// (such as loading iframes in IE - #4833)\n\tvar documentElement = elem && (elem.ownerDocument || elem).documentElement;\n\treturn documentElement ? documentElement.nodeName !== \"HTML\" : false;\n};\n\n/**\n * Sets document-related variables once based on the current document\n * @param {Element|Object} [doc] An element or document object to use to set the document\n * @returns {Object} Returns the current document\n */\nsetDocument = Sizzle.setDocument = function( node ) {\n\tvar hasCompare, subWindow,\n\t\tdoc = node ? node.ownerDocument || node : preferredDoc;\n\n\t// Return early if doc is invalid or already selected\n\tif ( doc === document || doc.nodeType !== 9 || !doc.documentElement ) {\n\t\treturn document;\n\t}\n\n\t// Update global variables\n\tdocument = doc;\n\tdocElem = document.documentElement;\n\tdocumentIsHTML = !isXML( document );\n\n\t// Support: IE 9-11, Edge\n\t// Accessing iframe documents after unload throws \"permission denied\" errors (jQuery #13936)\n\tif ( preferredDoc !== document &&\n\t\t(subWindow = document.defaultView) && subWindow.top !== subWindow ) {\n\n\t\t// Support: IE 11, Edge\n\t\tif ( subWindow.addEventListener ) {\n\t\t\tsubWindow.addEventListener( \"unload\", unloadHandler, false );\n\n\t\t// Support: IE 9 - 10 only\n\t\t} else if ( subWindow.attachEvent ) {\n\t\t\tsubWindow.attachEvent( \"onunload\", unloadHandler );\n\t\t}\n\t}\n\n\t/* Attributes\n\t---------------------------------------------------------------------- */\n\n\t// Support: IE<8\n\t// Verify that getAttribute really returns attributes and not properties\n\t// (excepting IE8 booleans)\n\tsupport.attributes = assert(function( el ) {\n\t\tel.className = \"i\";\n\t\treturn !el.getAttribute(\"className\");\n\t});\n\n\t/* getElement(s)By*\n\t---------------------------------------------------------------------- */\n\n\t// Check if getElementsByTagName(\"*\") returns only elements\n\tsupport.getElementsByTagName = assert(function( el ) {\n\t\tel.appendChild( document.createComment(\"\") );\n\t\treturn !el.getElementsByTagName(\"*\").length;\n\t});\n\n\t// Support: IE<9\n\tsupport.getElementsByClassName = rnative.test( document.getElementsByClassName );\n\n\t// Support: IE<10\n\t// Check if getElementById returns elements by name\n\t// The broken getElementById methods don't pick up programmatically-set names,\n\t// so use a roundabout getElementsByName test\n\tsupport.getById = assert(function( el ) {\n\t\tdocElem.appendChild( el ).id = expando;\n\t\treturn !document.getElementsByName || !document.getElementsByName( expando ).length;\n\t});\n\n\t// ID filter and find\n\tif ( support.getById ) {\n\t\tExpr.filter[\"ID\"] = function( id ) {\n\t\t\tvar attrId = id.replace( runescape, funescape );\n\t\t\treturn function( elem ) {\n\t\t\t\treturn elem.getAttribute(\"id\") === attrId;\n\t\t\t};\n\t\t};\n\t\tExpr.find[\"ID\"] = function( id, context ) {\n\t\t\tif ( typeof context.getElementById !== \"undefined\" && documentIsHTML ) {\n\t\t\t\tvar elem = context.getElementById( id );\n\t\t\t\treturn elem ? [ elem ] : [];\n\t\t\t}\n\t\t};\n\t} else {\n\t\tExpr.filter[\"ID\"] =  function( id ) {\n\t\t\tvar attrId = id.replace( runescape, funescape );\n\t\t\treturn function( elem ) {\n\t\t\t\tvar node = typeof elem.getAttributeNode !== \"undefined\" &&\n\t\t\t\t\telem.getAttributeNode(\"id\");\n\t\t\t\treturn node && node.value === attrId;\n\t\t\t};\n\t\t};\n\n\t\t// Support: IE 6 - 7 only\n\t\t// getElementById is not reliable as a find shortcut\n\t\tExpr.find[\"ID\"] = function( id, context ) {\n\t\t\tif ( typeof context.getElementById !== \"undefined\" && documentIsHTML ) {\n\t\t\t\tvar node, i, elems,\n\t\t\t\t\telem = context.getElementById( id );\n\n\t\t\t\tif ( elem ) {\n\n\t\t\t\t\t// Verify the id attribute\n\t\t\t\t\tnode = elem.getAttributeNode(\"id\");\n\t\t\t\t\tif ( node && node.value === id ) {\n\t\t\t\t\t\treturn [ elem ];\n\t\t\t\t\t}\n\n\t\t\t\t\t// Fall back on getElementsByName\n\t\t\t\t\telems = context.getElementsByName( id );\n\t\t\t\t\ti = 0;\n\t\t\t\t\twhile ( (elem = elems[i++]) ) {\n\t\t\t\t\t\tnode = elem.getAttributeNode(\"id\");\n\t\t\t\t\t\tif ( node && node.value === id ) {\n\t\t\t\t\t\t\treturn [ elem ];\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\treturn [];\n\t\t\t}\n\t\t};\n\t}\n\n\t// Tag\n\tExpr.find[\"TAG\"] = support.getElementsByTagName ?\n\t\tfunction( tag, context ) {\n\t\t\tif ( typeof context.getElementsByTagName !== \"undefined\" ) {\n\t\t\t\treturn context.getElementsByTagName( tag );\n\n\t\t\t// DocumentFragment nodes don't have gEBTN\n\t\t\t} else if ( support.qsa ) {\n\t\t\t\treturn context.querySelectorAll( tag );\n\t\t\t}\n\t\t} :\n\n\t\tfunction( tag, context ) {\n\t\t\tvar elem,\n\t\t\t\ttmp = [],\n\t\t\t\ti = 0,\n\t\t\t\t// By happy coincidence, a (broken) gEBTN appears on DocumentFragment nodes too\n\t\t\t\tresults = context.getElementsByTagName( tag );\n\n\t\t\t// Filter out possible comments\n\t\t\tif ( tag === \"*\" ) {\n\t\t\t\twhile ( (elem = results[i++]) ) {\n\t\t\t\t\tif ( elem.nodeType === 1 ) {\n\t\t\t\t\t\ttmp.push( elem );\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\treturn tmp;\n\t\t\t}\n\t\t\treturn results;\n\t\t};\n\n\t// Class\n\tExpr.find[\"CLASS\"] = support.getElementsByClassName && function( className, context ) {\n\t\tif ( typeof context.getElementsByClassName !== \"undefined\" && documentIsHTML ) {\n\t\t\treturn context.getElementsByClassName( className );\n\t\t}\n\t};\n\n\t/* QSA/matchesSelector\n\t---------------------------------------------------------------------- */\n\n\t// QSA and matchesSelector support\n\n\t// matchesSelector(:active) reports false when true (IE9/Opera 11.5)\n\trbuggyMatches = [];\n\n\t// qSa(:focus) reports false when true (Chrome 21)\n\t// We allow this because of a bug in IE8/9 that throws an error\n\t// whenever `document.activeElement` is accessed on an iframe\n\t// So, we allow :focus to pass through QSA all the time to avoid the IE error\n\t// See https://bugs.jquery.com/ticket/13378\n\trbuggyQSA = [];\n\n\tif ( (support.qsa = rnative.test( document.querySelectorAll )) ) {\n\t\t// Build QSA regex\n\t\t// Regex strategy adopted from Diego Perini\n\t\tassert(function( el ) {\n\t\t\t// Select is set to empty string on purpose\n\t\t\t// This is to test IE's treatment of not explicitly\n\t\t\t// setting a boolean content attribute,\n\t\t\t// since its presence should be enough\n\t\t\t// https://bugs.jquery.com/ticket/12359\n\t\t\tdocElem.appendChild( el ).innerHTML = \"<a id='\" + expando + \"'></a>\" +\n\t\t\t\t\"<select id='\" + expando + \"-\\r\\\\' msallowcapture=''>\" +\n\t\t\t\t\"<option selected=''></option></select>\";\n\n\t\t\t// Support: IE8, Opera 11-12.16\n\t\t\t// Nothing should be selected when empty strings follow ^= or $= or *=\n\t\t\t// The test attribute must be unknown in Opera but \"safe\" for WinRT\n\t\t\t// https://msdn.microsoft.com/en-us/library/ie/hh465388.aspx#attribute_section\n\t\t\tif ( el.querySelectorAll(\"[msallowcapture^='']\").length ) {\n\t\t\t\trbuggyQSA.push( \"[*^$]=\" + whitespace + \"*(?:''|\\\"\\\")\" );\n\t\t\t}\n\n\t\t\t// Support: IE8\n\t\t\t// Boolean attributes and \"value\" are not treated correctly\n\t\t\tif ( !el.querySelectorAll(\"[selected]\").length ) {\n\t\t\t\trbuggyQSA.push( \"\\\\[\" + whitespace + \"*(?:value|\" + booleans + \")\" );\n\t\t\t}\n\n\t\t\t// Support: Chrome<29, Android<4.4, Safari<7.0+, iOS<7.0+, PhantomJS<1.9.8+\n\t\t\tif ( !el.querySelectorAll( \"[id~=\" + expando + \"-]\" ).length ) {\n\t\t\t\trbuggyQSA.push(\"~=\");\n\t\t\t}\n\n\t\t\t// Webkit/Opera - :checked should return selected option elements\n\t\t\t// http://www.w3.org/TR/2011/REC-css3-selectors-20110929/#checked\n\t\t\t// IE8 throws error here and will not see later tests\n\t\t\tif ( !el.querySelectorAll(\":checked\").length ) {\n\t\t\t\trbuggyQSA.push(\":checked\");\n\t\t\t}\n\n\t\t\t// Support: Safari 8+, iOS 8+\n\t\t\t// https://bugs.webkit.org/show_bug.cgi?id=136851\n\t\t\t// In-page `selector#id sibling-combinator selector` fails\n\t\t\tif ( !el.querySelectorAll( \"a#\" + expando + \"+*\" ).length ) {\n\t\t\t\trbuggyQSA.push(\".#.+[+~]\");\n\t\t\t}\n\t\t});\n\n\t\tassert(function( el ) {\n\t\t\tel.innerHTML = \"<a href='' disabled='disabled'></a>\" +\n\t\t\t\t\"<select disabled='disabled'><option/></select>\";\n\n\t\t\t// Support: Windows 8 Native Apps\n\t\t\t// The type and name attributes are restricted during .innerHTML assignment\n\t\t\tvar input = document.createElement(\"input\");\n\t\t\tinput.setAttribute( \"type\", \"hidden\" );\n\t\t\tel.appendChild( input ).setAttribute( \"name\", \"D\" );\n\n\t\t\t// Support: IE8\n\t\t\t// Enforce case-sensitivity of name attribute\n\t\t\tif ( el.querySelectorAll(\"[name=d]\").length ) {\n\t\t\t\trbuggyQSA.push( \"name\" + whitespace + \"*[*^$|!~]?=\" );\n\t\t\t}\n\n\t\t\t// FF 3.5 - :enabled/:disabled and hidden elements (hidden elements are still enabled)\n\t\t\t// IE8 throws error here and will not see later tests\n\t\t\tif ( el.querySelectorAll(\":enabled\").length !== 2 ) {\n\t\t\t\trbuggyQSA.push( \":enabled\", \":disabled\" );\n\t\t\t}\n\n\t\t\t// Support: IE9-11+\n\t\t\t// IE's :disabled selector does not pick up the children of disabled fieldsets\n\t\t\tdocElem.appendChild( el ).disabled = true;\n\t\t\tif ( el.querySelectorAll(\":disabled\").length !== 2 ) {\n\t\t\t\trbuggyQSA.push( \":enabled\", \":disabled\" );\n\t\t\t}\n\n\t\t\t// Opera 10-11 does not throw on post-comma invalid pseudos\n\t\t\tel.querySelectorAll(\"*,:x\");\n\t\t\trbuggyQSA.push(\",.*:\");\n\t\t});\n\t}\n\n\tif ( (support.matchesSelector = rnative.test( (matches = docElem.matches ||\n\t\tdocElem.webkitMatchesSelector ||\n\t\tdocElem.mozMatchesSelector ||\n\t\tdocElem.oMatchesSelector ||\n\t\tdocElem.msMatchesSelector) )) ) {\n\n\t\tassert(function( el ) {\n\t\t\t// Check to see if it's possible to do matchesSelector\n\t\t\t// on a disconnected node (IE 9)\n\t\t\tsupport.disconnectedMatch = matches.call( el, \"*\" );\n\n\t\t\t// This should fail with an exception\n\t\t\t// Gecko does not error, returns false instead\n\t\t\tmatches.call( el, \"[s!='']:x\" );\n\t\t\trbuggyMatches.push( \"!=\", pseudos );\n\t\t});\n\t}\n\n\trbuggyQSA = rbuggyQSA.length && new RegExp( rbuggyQSA.join(\"|\") );\n\trbuggyMatches = rbuggyMatches.length && new RegExp( rbuggyMatches.join(\"|\") );\n\n\t/* Contains\n\t---------------------------------------------------------------------- */\n\thasCompare = rnative.test( docElem.compareDocumentPosition );\n\n\t// Element contains another\n\t// Purposefully self-exclusive\n\t// As in, an element does not contain itself\n\tcontains = hasCompare || rnative.test( docElem.contains ) ?\n\t\tfunction( a, b ) {\n\t\t\tvar adown = a.nodeType === 9 ? a.documentElement : a,\n\t\t\t\tbup = b && b.parentNode;\n\t\t\treturn a === bup || !!( bup && bup.nodeType === 1 && (\n\t\t\t\tadown.contains ?\n\t\t\t\t\tadown.contains( bup ) :\n\t\t\t\t\ta.compareDocumentPosition && a.compareDocumentPosition( bup ) & 16\n\t\t\t));\n\t\t} :\n\t\tfunction( a, b ) {\n\t\t\tif ( b ) {\n\t\t\t\twhile ( (b = b.parentNode) ) {\n\t\t\t\t\tif ( b === a ) {\n\t\t\t\t\t\treturn true;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn false;\n\t\t};\n\n\t/* Sorting\n\t---------------------------------------------------------------------- */\n\n\t// Document order sorting\n\tsortOrder = hasCompare ?\n\tfunction( a, b ) {\n\n\t\t// Flag for duplicate removal\n\t\tif ( a === b ) {\n\t\t\thasDuplicate = true;\n\t\t\treturn 0;\n\t\t}\n\n\t\t// Sort on method existence if only one input has compareDocumentPosition\n\t\tvar compare = !a.compareDocumentPosition - !b.compareDocumentPosition;\n\t\tif ( compare ) {\n\t\t\treturn compare;\n\t\t}\n\n\t\t// Calculate position if both inputs belong to the same document\n\t\tcompare = ( a.ownerDocument || a ) === ( b.ownerDocument || b ) ?\n\t\t\ta.compareDocumentPosition( b ) :\n\n\t\t\t// Otherwise we know they are disconnected\n\t\t\t1;\n\n\t\t// Disconnected nodes\n\t\tif ( compare & 1 ||\n\t\t\t(!support.sortDetached && b.compareDocumentPosition( a ) === compare) ) {\n\n\t\t\t// Choose the first element that is related to our preferred document\n\t\t\tif ( a === document || a.ownerDocument === preferredDoc && contains(preferredDoc, a) ) {\n\t\t\t\treturn -1;\n\t\t\t}\n\t\t\tif ( b === document || b.ownerDocument === preferredDoc && contains(preferredDoc, b) ) {\n\t\t\t\treturn 1;\n\t\t\t}\n\n\t\t\t// Maintain original order\n\t\t\treturn sortInput ?\n\t\t\t\t( indexOf( sortInput, a ) - indexOf( sortInput, b ) ) :\n\t\t\t\t0;\n\t\t}\n\n\t\treturn compare & 4 ? -1 : 1;\n\t} :\n\tfunction( a, b ) {\n\t\t// Exit early if the nodes are identical\n\t\tif ( a === b ) {\n\t\t\thasDuplicate = true;\n\t\t\treturn 0;\n\t\t}\n\n\t\tvar cur,\n\t\t\ti = 0,\n\t\t\taup = a.parentNode,\n\t\t\tbup = b.parentNode,\n\t\t\tap = [ a ],\n\t\t\tbp = [ b ];\n\n\t\t// Parentless nodes are either documents or disconnected\n\t\tif ( !aup || !bup ) {\n\t\t\treturn a === document ? -1 :\n\t\t\t\tb === document ? 1 :\n\t\t\t\taup ? -1 :\n\t\t\t\tbup ? 1 :\n\t\t\t\tsortInput ?\n\t\t\t\t( indexOf( sortInput, a ) - indexOf( sortInput, b ) ) :\n\t\t\t\t0;\n\n\t\t// If the nodes are siblings, we can do a quick check\n\t\t} else if ( aup === bup ) {\n\t\t\treturn siblingCheck( a, b );\n\t\t}\n\n\t\t// Otherwise we need full lists of their ancestors for comparison\n\t\tcur = a;\n\t\twhile ( (cur = cur.parentNode) ) {\n\t\t\tap.unshift( cur );\n\t\t}\n\t\tcur = b;\n\t\twhile ( (cur = cur.parentNode) ) {\n\t\t\tbp.unshift( cur );\n\t\t}\n\n\t\t// Walk down the tree looking for a discrepancy\n\t\twhile ( ap[i] === bp[i] ) {\n\t\t\ti++;\n\t\t}\n\n\t\treturn i ?\n\t\t\t// Do a sibling check if the nodes have a common ancestor\n\t\t\tsiblingCheck( ap[i], bp[i] ) :\n\n\t\t\t// Otherwise nodes in our document sort first\n\t\t\tap[i] === preferredDoc ? -1 :\n\t\t\tbp[i] === preferredDoc ? 1 :\n\t\t\t0;\n\t};\n\n\treturn document;\n};\n\nSizzle.matches = function( expr, elements ) {\n\treturn Sizzle( expr, null, null, elements );\n};\n\nSizzle.matchesSelector = function( elem, expr ) {\n\t// Set document vars if needed\n\tif ( ( elem.ownerDocument || elem ) !== document ) {\n\t\tsetDocument( elem );\n\t}\n\n\t// Make sure that attribute selectors are quoted\n\texpr = expr.replace( rattributeQuotes, \"='$1']\" );\n\n\tif ( support.matchesSelector && documentIsHTML &&\n\t\t!compilerCache[ expr + \" \" ] &&\n\t\t( !rbuggyMatches || !rbuggyMatches.test( expr ) ) &&\n\t\t( !rbuggyQSA     || !rbuggyQSA.test( expr ) ) ) {\n\n\t\ttry {\n\t\t\tvar ret = matches.call( elem, expr );\n\n\t\t\t// IE 9's matchesSelector returns false on disconnected nodes\n\t\t\tif ( ret || support.disconnectedMatch ||\n\t\t\t\t\t// As well, disconnected nodes are said to be in a document\n\t\t\t\t\t// fragment in IE 9\n\t\t\t\t\telem.document && elem.document.nodeType !== 11 ) {\n\t\t\t\treturn ret;\n\t\t\t}\n\t\t} catch (e) {}\n\t}\n\n\treturn Sizzle( expr, document, null, [ elem ] ).length > 0;\n};\n\nSizzle.contains = function( context, elem ) {\n\t// Set document vars if needed\n\tif ( ( context.ownerDocument || context ) !== document ) {\n\t\tsetDocument( context );\n\t}\n\treturn contains( context, elem );\n};\n\nSizzle.attr = function( elem, name ) {\n\t// Set document vars if needed\n\tif ( ( elem.ownerDocument || elem ) !== document ) {\n\t\tsetDocument( elem );\n\t}\n\n\tvar fn = Expr.attrHandle[ name.toLowerCase() ],\n\t\t// Don't get fooled by Object.prototype properties (jQuery #13807)\n\t\tval = fn && hasOwn.call( Expr.attrHandle, name.toLowerCase() ) ?\n\t\t\tfn( elem, name, !documentIsHTML ) :\n\t\t\tundefined;\n\n\treturn val !== undefined ?\n\t\tval :\n\t\tsupport.attributes || !documentIsHTML ?\n\t\t\telem.getAttribute( name ) :\n\t\t\t(val = elem.getAttributeNode(name)) && val.specified ?\n\t\t\t\tval.value :\n\t\t\t\tnull;\n};\n\nSizzle.escape = function( sel ) {\n\treturn (sel + \"\").replace( rcssescape, fcssescape );\n};\n\nSizzle.error = function( msg ) {\n\tthrow new Error( \"Syntax error, unrecognized expression: \" + msg );\n};\n\n/**\n * Document sorting and removing duplicates\n * @param {ArrayLike} results\n */\nSizzle.uniqueSort = function( results ) {\n\tvar elem,\n\t\tduplicates = [],\n\t\tj = 0,\n\t\ti = 0;\n\n\t// Unless we *know* we can detect duplicates, assume their presence\n\thasDuplicate = !support.detectDuplicates;\n\tsortInput = !support.sortStable && results.slice( 0 );\n\tresults.sort( sortOrder );\n\n\tif ( hasDuplicate ) {\n\t\twhile ( (elem = results[i++]) ) {\n\t\t\tif ( elem === results[ i ] ) {\n\t\t\t\tj = duplicates.push( i );\n\t\t\t}\n\t\t}\n\t\twhile ( j-- ) {\n\t\t\tresults.splice( duplicates[ j ], 1 );\n\t\t}\n\t}\n\n\t// Clear input after sorting to release objects\n\t// See https://github.com/jquery/sizzle/pull/225\n\tsortInput = null;\n\n\treturn results;\n};\n\n/**\n * Utility function for retrieving the text value of an array of DOM nodes\n * @param {Array|Element} elem\n */\ngetText = Sizzle.getText = function( elem ) {\n\tvar node,\n\t\tret = \"\",\n\t\ti = 0,\n\t\tnodeType = elem.nodeType;\n\n\tif ( !nodeType ) {\n\t\t// If no nodeType, this is expected to be an array\n\t\twhile ( (node = elem[i++]) ) {\n\t\t\t// Do not traverse comment nodes\n\t\t\tret += getText( node );\n\t\t}\n\t} else if ( nodeType === 1 || nodeType === 9 || nodeType === 11 ) {\n\t\t// Use textContent for elements\n\t\t// innerText usage removed for consistency of new lines (jQuery #11153)\n\t\tif ( typeof elem.textContent === \"string\" ) {\n\t\t\treturn elem.textContent;\n\t\t} else {\n\t\t\t// Traverse its children\n\t\t\tfor ( elem = elem.firstChild; elem; elem = elem.nextSibling ) {\n\t\t\t\tret += getText( elem );\n\t\t\t}\n\t\t}\n\t} else if ( nodeType === 3 || nodeType === 4 ) {\n\t\treturn elem.nodeValue;\n\t}\n\t// Do not include comment or processing instruction nodes\n\n\treturn ret;\n};\n\nExpr = Sizzle.selectors = {\n\n\t// Can be adjusted by the user\n\tcacheLength: 50,\n\n\tcreatePseudo: markFunction,\n\n\tmatch: matchExpr,\n\n\tattrHandle: {},\n\n\tfind: {},\n\n\trelative: {\n\t\t\">\": { dir: \"parentNode\", first: true },\n\t\t\" \": { dir: \"parentNode\" },\n\t\t\"+\": { dir: \"previousSibling\", first: true },\n\t\t\"~\": { dir: \"previousSibling\" }\n\t},\n\n\tpreFilter: {\n\t\t\"ATTR\": function( match ) {\n\t\t\tmatch[1] = match[1].replace( runescape, funescape );\n\n\t\t\t// Move the given value to match[3] whether quoted or unquoted\n\t\t\tmatch[3] = ( match[3] || match[4] || match[5] || \"\" ).replace( runescape, funescape );\n\n\t\t\tif ( match[2] === \"~=\" ) {\n\t\t\t\tmatch[3] = \" \" + match[3] + \" \";\n\t\t\t}\n\n\t\t\treturn match.slice( 0, 4 );\n\t\t},\n\n\t\t\"CHILD\": function( match ) {\n\t\t\t/* matches from matchExpr[\"CHILD\"]\n\t\t\t\t1 type (only|nth|...)\n\t\t\t\t2 what (child|of-type)\n\t\t\t\t3 argument (even|odd|\\d*|\\d*n([+-]\\d+)?|...)\n\t\t\t\t4 xn-component of xn+y argument ([+-]?\\d*n|)\n\t\t\t\t5 sign of xn-component\n\t\t\t\t6 x of xn-component\n\t\t\t\t7 sign of y-component\n\t\t\t\t8 y of y-component\n\t\t\t*/\n\t\t\tmatch[1] = match[1].toLowerCase();\n\n\t\t\tif ( match[1].slice( 0, 3 ) === \"nth\" ) {\n\t\t\t\t// nth-* requires argument\n\t\t\t\tif ( !match[3] ) {\n\t\t\t\t\tSizzle.error( match[0] );\n\t\t\t\t}\n\n\t\t\t\t// numeric x and y parameters for Expr.filter.CHILD\n\t\t\t\t// remember that false/true cast respectively to 0/1\n\t\t\t\tmatch[4] = +( match[4] ? match[5] + (match[6] || 1) : 2 * ( match[3] === \"even\" || match[3] === \"odd\" ) );\n\t\t\t\tmatch[5] = +( ( match[7] + match[8] ) || match[3] === \"odd\" );\n\n\t\t\t// other types prohibit arguments\n\t\t\t} else if ( match[3] ) {\n\t\t\t\tSizzle.error( match[0] );\n\t\t\t}\n\n\t\t\treturn match;\n\t\t},\n\n\t\t\"PSEUDO\": function( match ) {\n\t\t\tvar excess,\n\t\t\t\tunquoted = !match[6] && match[2];\n\n\t\t\tif ( matchExpr[\"CHILD\"].test( match[0] ) ) {\n\t\t\t\treturn null;\n\t\t\t}\n\n\t\t\t// Accept quoted arguments as-is\n\t\t\tif ( match[3] ) {\n\t\t\t\tmatch[2] = match[4] || match[5] || \"\";\n\n\t\t\t// Strip excess characters from unquoted arguments\n\t\t\t} else if ( unquoted && rpseudo.test( unquoted ) &&\n\t\t\t\t// Get excess from tokenize (recursively)\n\t\t\t\t(excess = tokenize( unquoted, true )) &&\n\t\t\t\t// advance to the next closing parenthesis\n\t\t\t\t(excess = unquoted.indexOf( \")\", unquoted.length - excess ) - unquoted.length) ) {\n\n\t\t\t\t// excess is a negative index\n\t\t\t\tmatch[0] = match[0].slice( 0, excess );\n\t\t\t\tmatch[2] = unquoted.slice( 0, excess );\n\t\t\t}\n\n\t\t\t// Return only captures needed by the pseudo filter method (type and argument)\n\t\t\treturn match.slice( 0, 3 );\n\t\t}\n\t},\n\n\tfilter: {\n\n\t\t\"TAG\": function( nodeNameSelector ) {\n\t\t\tvar nodeName = nodeNameSelector.replace( runescape, funescape ).toLowerCase();\n\t\t\treturn nodeNameSelector === \"*\" ?\n\t\t\t\tfunction() { return true; } :\n\t\t\t\tfunction( elem ) {\n\t\t\t\t\treturn elem.nodeName && elem.nodeName.toLowerCase() === nodeName;\n\t\t\t\t};\n\t\t},\n\n\t\t\"CLASS\": function( className ) {\n\t\t\tvar pattern = classCache[ className + \" \" ];\n\n\t\t\treturn pattern ||\n\t\t\t\t(pattern = new RegExp( \"(^|\" + whitespace + \")\" + className + \"(\" + whitespace + \"|$)\" )) &&\n\t\t\t\tclassCache( className, function( elem ) {\n\t\t\t\t\treturn pattern.test( typeof elem.className === \"string\" && elem.className || typeof elem.getAttribute !== \"undefined\" && elem.getAttribute(\"class\") || \"\" );\n\t\t\t\t});\n\t\t},\n\n\t\t\"ATTR\": function( name, operator, check ) {\n\t\t\treturn function( elem ) {\n\t\t\t\tvar result = Sizzle.attr( elem, name );\n\n\t\t\t\tif ( result == null ) {\n\t\t\t\t\treturn operator === \"!=\";\n\t\t\t\t}\n\t\t\t\tif ( !operator ) {\n\t\t\t\t\treturn true;\n\t\t\t\t}\n\n\t\t\t\tresult += \"\";\n\n\t\t\t\treturn operator === \"=\" ? result === check :\n\t\t\t\t\toperator === \"!=\" ? result !== check :\n\t\t\t\t\toperator === \"^=\" ? check && result.indexOf( check ) === 0 :\n\t\t\t\t\toperator === \"*=\" ? check && result.indexOf( check ) > -1 :\n\t\t\t\t\toperator === \"$=\" ? check && result.slice( -check.length ) === check :\n\t\t\t\t\toperator === \"~=\" ? ( \" \" + result.replace( rwhitespace, \" \" ) + \" \" ).indexOf( check ) > -1 :\n\t\t\t\t\toperator === \"|=\" ? result === check || result.slice( 0, check.length + 1 ) === check + \"-\" :\n\t\t\t\t\tfalse;\n\t\t\t};\n\t\t},\n\n\t\t\"CHILD\": function( type, what, argument, first, last ) {\n\t\t\tvar simple = type.slice( 0, 3 ) !== \"nth\",\n\t\t\t\tforward = type.slice( -4 ) !== \"last\",\n\t\t\t\tofType = what === \"of-type\";\n\n\t\t\treturn first === 1 && last === 0 ?\n\n\t\t\t\t// Shortcut for :nth-*(n)\n\t\t\t\tfunction( elem ) {\n\t\t\t\t\treturn !!elem.parentNode;\n\t\t\t\t} :\n\n\t\t\t\tfunction( elem, context, xml ) {\n\t\t\t\t\tvar cache, uniqueCache, outerCache, node, nodeIndex, start,\n\t\t\t\t\t\tdir = simple !== forward ? \"nextSibling\" : \"previousSibling\",\n\t\t\t\t\t\tparent = elem.parentNode,\n\t\t\t\t\t\tname = ofType && elem.nodeName.toLowerCase(),\n\t\t\t\t\t\tuseCache = !xml && !ofType,\n\t\t\t\t\t\tdiff = false;\n\n\t\t\t\t\tif ( parent ) {\n\n\t\t\t\t\t\t// :(first|last|only)-(child|of-type)\n\t\t\t\t\t\tif ( simple ) {\n\t\t\t\t\t\t\twhile ( dir ) {\n\t\t\t\t\t\t\t\tnode = elem;\n\t\t\t\t\t\t\t\twhile ( (node = node[ dir ]) ) {\n\t\t\t\t\t\t\t\t\tif ( ofType ?\n\t\t\t\t\t\t\t\t\t\tnode.nodeName.toLowerCase() === name :\n\t\t\t\t\t\t\t\t\t\tnode.nodeType === 1 ) {\n\n\t\t\t\t\t\t\t\t\t\treturn false;\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t// Reverse direction for :only-* (if we haven't yet done so)\n\t\t\t\t\t\t\t\tstart = dir = type === \"only\" && !start && \"nextSibling\";\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\treturn true;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tstart = [ forward ? parent.firstChild : parent.lastChild ];\n\n\t\t\t\t\t\t// non-xml :nth-child(...) stores cache data on `parent`\n\t\t\t\t\t\tif ( forward && useCache ) {\n\n\t\t\t\t\t\t\t// Seek `elem` from a previously-cached index\n\n\t\t\t\t\t\t\t// ...in a gzip-friendly way\n\t\t\t\t\t\t\tnode = parent;\n\t\t\t\t\t\t\touterCache = node[ expando ] || (node[ expando ] = {});\n\n\t\t\t\t\t\t\t// Support: IE <9 only\n\t\t\t\t\t\t\t// Defend against cloned attroperties (jQuery gh-1709)\n\t\t\t\t\t\t\tuniqueCache = outerCache[ node.uniqueID ] ||\n\t\t\t\t\t\t\t\t(outerCache[ node.uniqueID ] = {});\n\n\t\t\t\t\t\t\tcache = uniqueCache[ type ] || [];\n\t\t\t\t\t\t\tnodeIndex = cache[ 0 ] === dirruns && cache[ 1 ];\n\t\t\t\t\t\t\tdiff = nodeIndex && cache[ 2 ];\n\t\t\t\t\t\t\tnode = nodeIndex && parent.childNodes[ nodeIndex ];\n\n\t\t\t\t\t\t\twhile ( (node = ++nodeIndex && node && node[ dir ] ||\n\n\t\t\t\t\t\t\t\t// Fallback to seeking `elem` from the start\n\t\t\t\t\t\t\t\t(diff = nodeIndex = 0) || start.pop()) ) {\n\n\t\t\t\t\t\t\t\t// When found, cache indexes on `parent` and break\n\t\t\t\t\t\t\t\tif ( node.nodeType === 1 && ++diff && node === elem ) {\n\t\t\t\t\t\t\t\t\tuniqueCache[ type ] = [ dirruns, nodeIndex, diff ];\n\t\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t// Use previously-cached element index if available\n\t\t\t\t\t\t\tif ( useCache ) {\n\t\t\t\t\t\t\t\t// ...in a gzip-friendly way\n\t\t\t\t\t\t\t\tnode = elem;\n\t\t\t\t\t\t\t\touterCache = node[ expando ] || (node[ expando ] = {});\n\n\t\t\t\t\t\t\t\t// Support: IE <9 only\n\t\t\t\t\t\t\t\t// Defend against cloned attroperties (jQuery gh-1709)\n\t\t\t\t\t\t\t\tuniqueCache = outerCache[ node.uniqueID ] ||\n\t\t\t\t\t\t\t\t\t(outerCache[ node.uniqueID ] = {});\n\n\t\t\t\t\t\t\t\tcache = uniqueCache[ type ] || [];\n\t\t\t\t\t\t\t\tnodeIndex = cache[ 0 ] === dirruns && cache[ 1 ];\n\t\t\t\t\t\t\t\tdiff = nodeIndex;\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t// xml :nth-child(...)\n\t\t\t\t\t\t\t// or :nth-last-child(...) or :nth(-last)?-of-type(...)\n\t\t\t\t\t\t\tif ( diff === false ) {\n\t\t\t\t\t\t\t\t// Use the same loop as above to seek `elem` from the start\n\t\t\t\t\t\t\t\twhile ( (node = ++nodeIndex && node && node[ dir ] ||\n\t\t\t\t\t\t\t\t\t(diff = nodeIndex = 0) || start.pop()) ) {\n\n\t\t\t\t\t\t\t\t\tif ( ( ofType ?\n\t\t\t\t\t\t\t\t\t\tnode.nodeName.toLowerCase() === name :\n\t\t\t\t\t\t\t\t\t\tnode.nodeType === 1 ) &&\n\t\t\t\t\t\t\t\t\t\t++diff ) {\n\n\t\t\t\t\t\t\t\t\t\t// Cache the index of each encountered element\n\t\t\t\t\t\t\t\t\t\tif ( useCache ) {\n\t\t\t\t\t\t\t\t\t\t\touterCache = node[ expando ] || (node[ expando ] = {});\n\n\t\t\t\t\t\t\t\t\t\t\t// Support: IE <9 only\n\t\t\t\t\t\t\t\t\t\t\t// Defend against cloned attroperties (jQuery gh-1709)\n\t\t\t\t\t\t\t\t\t\t\tuniqueCache = outerCache[ node.uniqueID ] ||\n\t\t\t\t\t\t\t\t\t\t\t\t(outerCache[ node.uniqueID ] = {});\n\n\t\t\t\t\t\t\t\t\t\t\tuniqueCache[ type ] = [ dirruns, diff ];\n\t\t\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t\t\t\tif ( node === elem ) {\n\t\t\t\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\t// Incorporate the offset, then check against cycle size\n\t\t\t\t\t\tdiff -= last;\n\t\t\t\t\t\treturn diff === first || ( diff % first === 0 && diff / first >= 0 );\n\t\t\t\t\t}\n\t\t\t\t};\n\t\t},\n\n\t\t\"PSEUDO\": function( pseudo, argument ) {\n\t\t\t// pseudo-class names are case-insensitive\n\t\t\t// http://www.w3.org/TR/selectors/#pseudo-classes\n\t\t\t// Prioritize by case sensitivity in case custom pseudos are added with uppercase letters\n\t\t\t// Remember that setFilters inherits from pseudos\n\t\t\tvar args,\n\t\t\t\tfn = Expr.pseudos[ pseudo ] || Expr.setFilters[ pseudo.toLowerCase() ] ||\n\t\t\t\t\tSizzle.error( \"unsupported pseudo: \" + pseudo );\n\n\t\t\t// The user may use createPseudo to indicate that\n\t\t\t// arguments are needed to create the filter function\n\t\t\t// just as Sizzle does\n\t\t\tif ( fn[ expando ] ) {\n\t\t\t\treturn fn( argument );\n\t\t\t}\n\n\t\t\t// But maintain support for old signatures\n\t\t\tif ( fn.length > 1 ) {\n\t\t\t\targs = [ pseudo, pseudo, \"\", argument ];\n\t\t\t\treturn Expr.setFilters.hasOwnProperty( pseudo.toLowerCase() ) ?\n\t\t\t\t\tmarkFunction(function( seed, matches ) {\n\t\t\t\t\t\tvar idx,\n\t\t\t\t\t\t\tmatched = fn( seed, argument ),\n\t\t\t\t\t\t\ti = matched.length;\n\t\t\t\t\t\twhile ( i-- ) {\n\t\t\t\t\t\t\tidx = indexOf( seed, matched[i] );\n\t\t\t\t\t\t\tseed[ idx ] = !( matches[ idx ] = matched[i] );\n\t\t\t\t\t\t}\n\t\t\t\t\t}) :\n\t\t\t\t\tfunction( elem ) {\n\t\t\t\t\t\treturn fn( elem, 0, args );\n\t\t\t\t\t};\n\t\t\t}\n\n\t\t\treturn fn;\n\t\t}\n\t},\n\n\tpseudos: {\n\t\t// Potentially complex pseudos\n\t\t\"not\": markFunction(function( selector ) {\n\t\t\t// Trim the selector passed to compile\n\t\t\t// to avoid treating leading and trailing\n\t\t\t// spaces as combinators\n\t\t\tvar input = [],\n\t\t\t\tresults = [],\n\t\t\t\tmatcher = compile( selector.replace( rtrim, \"$1\" ) );\n\n\t\t\treturn matcher[ expando ] ?\n\t\t\t\tmarkFunction(function( seed, matches, context, xml ) {\n\t\t\t\t\tvar elem,\n\t\t\t\t\t\tunmatched = matcher( seed, null, xml, [] ),\n\t\t\t\t\t\ti = seed.length;\n\n\t\t\t\t\t// Match elements unmatched by `matcher`\n\t\t\t\t\twhile ( i-- ) {\n\t\t\t\t\t\tif ( (elem = unmatched[i]) ) {\n\t\t\t\t\t\t\tseed[i] = !(matches[i] = elem);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}) :\n\t\t\t\tfunction( elem, context, xml ) {\n\t\t\t\t\tinput[0] = elem;\n\t\t\t\t\tmatcher( input, null, xml, results );\n\t\t\t\t\t// Don't keep the element (issue #299)\n\t\t\t\t\tinput[0] = null;\n\t\t\t\t\treturn !results.pop();\n\t\t\t\t};\n\t\t}),\n\n\t\t\"has\": markFunction(function( selector ) {\n\t\t\treturn function( elem ) {\n\t\t\t\treturn Sizzle( selector, elem ).length > 0;\n\t\t\t};\n\t\t}),\n\n\t\t\"contains\": markFunction(function( text ) {\n\t\t\ttext = text.replace( runescape, funescape );\n\t\t\treturn function( elem ) {\n\t\t\t\treturn ( elem.textContent || elem.innerText || getText( elem ) ).indexOf( text ) > -1;\n\t\t\t};\n\t\t}),\n\n\t\t// \"Whether an element is represented by a :lang() selector\n\t\t// is based solely on the element's language value\n\t\t// being equal to the identifier C,\n\t\t// or beginning with the identifier C immediately followed by \"-\".\n\t\t// The matching of C against the element's language value is performed case-insensitively.\n\t\t// The identifier C does not have to be a valid language name.\"\n\t\t// http://www.w3.org/TR/selectors/#lang-pseudo\n\t\t\"lang\": markFunction( function( lang ) {\n\t\t\t// lang value must be a valid identifier\n\t\t\tif ( !ridentifier.test(lang || \"\") ) {\n\t\t\t\tSizzle.error( \"unsupported lang: \" + lang );\n\t\t\t}\n\t\t\tlang = lang.replace( runescape, funescape ).toLowerCase();\n\t\t\treturn function( elem ) {\n\t\t\t\tvar elemLang;\n\t\t\t\tdo {\n\t\t\t\t\tif ( (elemLang = documentIsHTML ?\n\t\t\t\t\t\telem.lang :\n\t\t\t\t\t\telem.getAttribute(\"xml:lang\") || elem.getAttribute(\"lang\")) ) {\n\n\t\t\t\t\t\telemLang = elemLang.toLowerCase();\n\t\t\t\t\t\treturn elemLang === lang || elemLang.indexOf( lang + \"-\" ) === 0;\n\t\t\t\t\t}\n\t\t\t\t} while ( (elem = elem.parentNode) && elem.nodeType === 1 );\n\t\t\t\treturn false;\n\t\t\t};\n\t\t}),\n\n\t\t// Miscellaneous\n\t\t\"target\": function( elem ) {\n\t\t\tvar hash = window.location && window.location.hash;\n\t\t\treturn hash && hash.slice( 1 ) === elem.id;\n\t\t},\n\n\t\t\"root\": function( elem ) {\n\t\t\treturn elem === docElem;\n\t\t},\n\n\t\t\"focus\": function( elem ) {\n\t\t\treturn elem === document.activeElement && (!document.hasFocus || document.hasFocus()) && !!(elem.type || elem.href || ~elem.tabIndex);\n\t\t},\n\n\t\t// Boolean properties\n\t\t\"enabled\": createDisabledPseudo( false ),\n\t\t\"disabled\": createDisabledPseudo( true ),\n\n\t\t\"checked\": function( elem ) {\n\t\t\t// In CSS3, :checked should return both checked and selected elements\n\t\t\t// http://www.w3.org/TR/2011/REC-css3-selectors-20110929/#checked\n\t\t\tvar nodeName = elem.nodeName.toLowerCase();\n\t\t\treturn (nodeName === \"input\" && !!elem.checked) || (nodeName === \"option\" && !!elem.selected);\n\t\t},\n\n\t\t\"selected\": function( elem ) {\n\t\t\t// Accessing this property makes selected-by-default\n\t\t\t// options in Safari work properly\n\t\t\tif ( elem.parentNode ) {\n\t\t\t\telem.parentNode.selectedIndex;\n\t\t\t}\n\n\t\t\treturn elem.selected === true;\n\t\t},\n\n\t\t// Contents\n\t\t\"empty\": function( elem ) {\n\t\t\t// http://www.w3.org/TR/selectors/#empty-pseudo\n\t\t\t// :empty is negated by element (1) or content nodes (text: 3; cdata: 4; entity ref: 5),\n\t\t\t//   but not by others (comment: 8; processing instruction: 7; etc.)\n\t\t\t// nodeType < 6 works because attributes (2) do not appear as children\n\t\t\tfor ( elem = elem.firstChild; elem; elem = elem.nextSibling ) {\n\t\t\t\tif ( elem.nodeType < 6 ) {\n\t\t\t\t\treturn false;\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn true;\n\t\t},\n\n\t\t\"parent\": function( elem ) {\n\t\t\treturn !Expr.pseudos[\"empty\"]( elem );\n\t\t},\n\n\t\t// Element/input types\n\t\t\"header\": function( elem ) {\n\t\t\treturn rheader.test( elem.nodeName );\n\t\t},\n\n\t\t\"input\": function( elem ) {\n\t\t\treturn rinputs.test( elem.nodeName );\n\t\t},\n\n\t\t\"button\": function( elem ) {\n\t\t\tvar name = elem.nodeName.toLowerCase();\n\t\t\treturn name === \"input\" && elem.type === \"button\" || name === \"button\";\n\t\t},\n\n\t\t\"text\": function( elem ) {\n\t\t\tvar attr;\n\t\t\treturn elem.nodeName.toLowerCase() === \"input\" &&\n\t\t\t\telem.type === \"text\" &&\n\n\t\t\t\t// Support: IE<8\n\t\t\t\t// New HTML5 attribute values (e.g., \"search\") appear with elem.type === \"text\"\n\t\t\t\t( (attr = elem.getAttribute(\"type\")) == null || attr.toLowerCase() === \"text\" );\n\t\t},\n\n\t\t// Position-in-collection\n\t\t\"first\": createPositionalPseudo(function() {\n\t\t\treturn [ 0 ];\n\t\t}),\n\n\t\t\"last\": createPositionalPseudo(function( matchIndexes, length ) {\n\t\t\treturn [ length - 1 ];\n\t\t}),\n\n\t\t\"eq\": createPositionalPseudo(function( matchIndexes, length, argument ) {\n\t\t\treturn [ argument < 0 ? argument + length : argument ];\n\t\t}),\n\n\t\t\"even\": createPositionalPseudo(function( matchIndexes, length ) {\n\t\t\tvar i = 0;\n\t\t\tfor ( ; i < length; i += 2 ) {\n\t\t\t\tmatchIndexes.push( i );\n\t\t\t}\n\t\t\treturn matchIndexes;\n\t\t}),\n\n\t\t\"odd\": createPositionalPseudo(function( matchIndexes, length ) {\n\t\t\tvar i = 1;\n\t\t\tfor ( ; i < length; i += 2 ) {\n\t\t\t\tmatchIndexes.push( i );\n\t\t\t}\n\t\t\treturn matchIndexes;\n\t\t}),\n\n\t\t\"lt\": createPositionalPseudo(function( matchIndexes, length, argument ) {\n\t\t\tvar i = argument < 0 ? argument + length : argument;\n\t\t\tfor ( ; --i >= 0; ) {\n\t\t\t\tmatchIndexes.push( i );\n\t\t\t}\n\t\t\treturn matchIndexes;\n\t\t}),\n\n\t\t\"gt\": createPositionalPseudo(function( matchIndexes, length, argument ) {\n\t\t\tvar i = argument < 0 ? argument + length : argument;\n\t\t\tfor ( ; ++i < length; ) {\n\t\t\t\tmatchIndexes.push( i );\n\t\t\t}\n\t\t\treturn matchIndexes;\n\t\t})\n\t}\n};\n\nExpr.pseudos[\"nth\"] = Expr.pseudos[\"eq\"];\n\n// Add button/input type pseudos\nfor ( i in { radio: true, checkbox: true, file: true, password: true, image: true } ) {\n\tExpr.pseudos[ i ] = createInputPseudo( i );\n}\nfor ( i in { submit: true, reset: true } ) {\n\tExpr.pseudos[ i ] = createButtonPseudo( i );\n}\n\n// Easy API for creating new setFilters\nfunction setFilters() {}\nsetFilters.prototype = Expr.filters = Expr.pseudos;\nExpr.setFilters = new setFilters();\n\ntokenize = Sizzle.tokenize = function( selector, parseOnly ) {\n\tvar matched, match, tokens, type,\n\t\tsoFar, groups, preFilters,\n\t\tcached = tokenCache[ selector + \" \" ];\n\n\tif ( cached ) {\n\t\treturn parseOnly ? 0 : cached.slice( 0 );\n\t}\n\n\tsoFar = selector;\n\tgroups = [];\n\tpreFilters = Expr.preFilter;\n\n\twhile ( soFar ) {\n\n\t\t// Comma and first run\n\t\tif ( !matched || (match = rcomma.exec( soFar )) ) {\n\t\t\tif ( match ) {\n\t\t\t\t// Don't consume trailing commas as valid\n\t\t\t\tsoFar = soFar.slice( match[0].length ) || soFar;\n\t\t\t}\n\t\t\tgroups.push( (tokens = []) );\n\t\t}\n\n\t\tmatched = false;\n\n\t\t// Combinators\n\t\tif ( (match = rcombinators.exec( soFar )) ) {\n\t\t\tmatched = match.shift();\n\t\t\ttokens.push({\n\t\t\t\tvalue: matched,\n\t\t\t\t// Cast descendant combinators to space\n\t\t\t\ttype: match[0].replace( rtrim, \" \" )\n\t\t\t});\n\t\t\tsoFar = soFar.slice( matched.length );\n\t\t}\n\n\t\t// Filters\n\t\tfor ( type in Expr.filter ) {\n\t\t\tif ( (match = matchExpr[ type ].exec( soFar )) && (!preFilters[ type ] ||\n\t\t\t\t(match = preFilters[ type ]( match ))) ) {\n\t\t\t\tmatched = match.shift();\n\t\t\t\ttokens.push({\n\t\t\t\t\tvalue: matched,\n\t\t\t\t\ttype: type,\n\t\t\t\t\tmatches: match\n\t\t\t\t});\n\t\t\t\tsoFar = soFar.slice( matched.length );\n\t\t\t}\n\t\t}\n\n\t\tif ( !matched ) {\n\t\t\tbreak;\n\t\t}\n\t}\n\n\t// Return the length of the invalid excess\n\t// if we're just parsing\n\t// Otherwise, throw an error or return tokens\n\treturn parseOnly ?\n\t\tsoFar.length :\n\t\tsoFar ?\n\t\t\tSizzle.error( selector ) :\n\t\t\t// Cache the tokens\n\t\t\ttokenCache( selector, groups ).slice( 0 );\n};\n\nfunction toSelector( tokens ) {\n\tvar i = 0,\n\t\tlen = tokens.length,\n\t\tselector = \"\";\n\tfor ( ; i < len; i++ ) {\n\t\tselector += tokens[i].value;\n\t}\n\treturn selector;\n}\n\nfunction addCombinator( matcher, combinator, base ) {\n\tvar dir = combinator.dir,\n\t\tskip = combinator.next,\n\t\tkey = skip || dir,\n\t\tcheckNonElements = base && key === \"parentNode\",\n\t\tdoneName = done++;\n\n\treturn combinator.first ?\n\t\t// Check against closest ancestor/preceding element\n\t\tfunction( elem, context, xml ) {\n\t\t\twhile ( (elem = elem[ dir ]) ) {\n\t\t\t\tif ( elem.nodeType === 1 || checkNonElements ) {\n\t\t\t\t\treturn matcher( elem, context, xml );\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn false;\n\t\t} :\n\n\t\t// Check against all ancestor/preceding elements\n\t\tfunction( elem, context, xml ) {\n\t\t\tvar oldCache, uniqueCache, outerCache,\n\t\t\t\tnewCache = [ dirruns, doneName ];\n\n\t\t\t// We can't set arbitrary data on XML nodes, so they don't benefit from combinator caching\n\t\t\tif ( xml ) {\n\t\t\t\twhile ( (elem = elem[ dir ]) ) {\n\t\t\t\t\tif ( elem.nodeType === 1 || checkNonElements ) {\n\t\t\t\t\t\tif ( matcher( elem, context, xml ) ) {\n\t\t\t\t\t\t\treturn true;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\twhile ( (elem = elem[ dir ]) ) {\n\t\t\t\t\tif ( elem.nodeType === 1 || checkNonElements ) {\n\t\t\t\t\t\touterCache = elem[ expando ] || (elem[ expando ] = {});\n\n\t\t\t\t\t\t// Support: IE <9 only\n\t\t\t\t\t\t// Defend against cloned attroperties (jQuery gh-1709)\n\t\t\t\t\t\tuniqueCache = outerCache[ elem.uniqueID ] || (outerCache[ elem.uniqueID ] = {});\n\n\t\t\t\t\t\tif ( skip && skip === elem.nodeName.toLowerCase() ) {\n\t\t\t\t\t\t\telem = elem[ dir ] || elem;\n\t\t\t\t\t\t} else if ( (oldCache = uniqueCache[ key ]) &&\n\t\t\t\t\t\t\toldCache[ 0 ] === dirruns && oldCache[ 1 ] === doneName ) {\n\n\t\t\t\t\t\t\t// Assign to newCache so results back-propagate to previous elements\n\t\t\t\t\t\t\treturn (newCache[ 2 ] = oldCache[ 2 ]);\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t// Reuse newcache so results back-propagate to previous elements\n\t\t\t\t\t\t\tuniqueCache[ key ] = newCache;\n\n\t\t\t\t\t\t\t// A match means we're done; a fail means we have to keep checking\n\t\t\t\t\t\t\tif ( (newCache[ 2 ] = matcher( elem, context, xml )) ) {\n\t\t\t\t\t\t\t\treturn true;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn false;\n\t\t};\n}\n\nfunction elementMatcher( matchers ) {\n\treturn matchers.length > 1 ?\n\t\tfunction( elem, context, xml ) {\n\t\t\tvar i = matchers.length;\n\t\t\twhile ( i-- ) {\n\t\t\t\tif ( !matchers[i]( elem, context, xml ) ) {\n\t\t\t\t\treturn false;\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn true;\n\t\t} :\n\t\tmatchers[0];\n}\n\nfunction multipleContexts( selector, contexts, results ) {\n\tvar i = 0,\n\t\tlen = contexts.length;\n\tfor ( ; i < len; i++ ) {\n\t\tSizzle( selector, contexts[i], results );\n\t}\n\treturn results;\n}\n\nfunction condense( unmatched, map, filter, context, xml ) {\n\tvar elem,\n\t\tnewUnmatched = [],\n\t\ti = 0,\n\t\tlen = unmatched.length,\n\t\tmapped = map != null;\n\n\tfor ( ; i < len; i++ ) {\n\t\tif ( (elem = unmatched[i]) ) {\n\t\t\tif ( !filter || filter( elem, context, xml ) ) {\n\t\t\t\tnewUnmatched.push( elem );\n\t\t\t\tif ( mapped ) {\n\t\t\t\t\tmap.push( i );\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\treturn newUnmatched;\n}\n\nfunction setMatcher( preFilter, selector, matcher, postFilter, postFinder, postSelector ) {\n\tif ( postFilter && !postFilter[ expando ] ) {\n\t\tpostFilter = setMatcher( postFilter );\n\t}\n\tif ( postFinder && !postFinder[ expando ] ) {\n\t\tpostFinder = setMatcher( postFinder, postSelector );\n\t}\n\treturn markFunction(function( seed, results, context, xml ) {\n\t\tvar temp, i, elem,\n\t\t\tpreMap = [],\n\t\t\tpostMap = [],\n\t\t\tpreexisting = results.length,\n\n\t\t\t// Get initial elements from seed or context\n\t\t\telems = seed || multipleContexts( selector || \"*\", context.nodeType ? [ context ] : context, [] ),\n\n\t\t\t// Prefilter to get matcher input, preserving a map for seed-results synchronization\n\t\t\tmatcherIn = preFilter && ( seed || !selector ) ?\n\t\t\t\tcondense( elems, preMap, preFilter, context, xml ) :\n\t\t\t\telems,\n\n\t\t\tmatcherOut = matcher ?\n\t\t\t\t// If we have a postFinder, or filtered seed, or non-seed postFilter or preexisting results,\n\t\t\t\tpostFinder || ( seed ? preFilter : preexisting || postFilter ) ?\n\n\t\t\t\t\t// ...intermediate processing is necessary\n\t\t\t\t\t[] :\n\n\t\t\t\t\t// ...otherwise use results directly\n\t\t\t\t\tresults :\n\t\t\t\tmatcherIn;\n\n\t\t// Find primary matches\n\t\tif ( matcher ) {\n\t\t\tmatcher( matcherIn, matcherOut, context, xml );\n\t\t}\n\n\t\t// Apply postFilter\n\t\tif ( postFilter ) {\n\t\t\ttemp = condense( matcherOut, postMap );\n\t\t\tpostFilter( temp, [], context, xml );\n\n\t\t\t// Un-match failing elements by moving them back to matcherIn\n\t\t\ti = temp.length;\n\t\t\twhile ( i-- ) {\n\t\t\t\tif ( (elem = temp[i]) ) {\n\t\t\t\t\tmatcherOut[ postMap[i] ] = !(matcherIn[ postMap[i] ] = elem);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tif ( seed ) {\n\t\t\tif ( postFinder || preFilter ) {\n\t\t\t\tif ( postFinder ) {\n\t\t\t\t\t// Get the final matcherOut by condensing this intermediate into postFinder contexts\n\t\t\t\t\ttemp = [];\n\t\t\t\t\ti = matcherOut.length;\n\t\t\t\t\twhile ( i-- ) {\n\t\t\t\t\t\tif ( (elem = matcherOut[i]) ) {\n\t\t\t\t\t\t\t// Restore matcherIn since elem is not yet a final match\n\t\t\t\t\t\t\ttemp.push( (matcherIn[i] = elem) );\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tpostFinder( null, (matcherOut = []), temp, xml );\n\t\t\t\t}\n\n\t\t\t\t// Move matched elements from seed to results to keep them synchronized\n\t\t\t\ti = matcherOut.length;\n\t\t\t\twhile ( i-- ) {\n\t\t\t\t\tif ( (elem = matcherOut[i]) &&\n\t\t\t\t\t\t(temp = postFinder ? indexOf( seed, elem ) : preMap[i]) > -1 ) {\n\n\t\t\t\t\t\tseed[temp] = !(results[temp] = elem);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t// Add elements to results, through postFinder if defined\n\t\t} else {\n\t\t\tmatcherOut = condense(\n\t\t\t\tmatcherOut === results ?\n\t\t\t\t\tmatcherOut.splice( preexisting, matcherOut.length ) :\n\t\t\t\t\tmatcherOut\n\t\t\t);\n\t\t\tif ( postFinder ) {\n\t\t\t\tpostFinder( null, results, matcherOut, xml );\n\t\t\t} else {\n\t\t\t\tpush.apply( results, matcherOut );\n\t\t\t}\n\t\t}\n\t});\n}\n\nfunction matcherFromTokens( tokens ) {\n\tvar checkContext, matcher, j,\n\t\tlen = tokens.length,\n\t\tleadingRelative = Expr.relative[ tokens[0].type ],\n\t\timplicitRelative = leadingRelative || Expr.relative[\" \"],\n\t\ti = leadingRelative ? 1 : 0,\n\n\t\t// The foundational matcher ensures that elements are reachable from top-level context(s)\n\t\tmatchContext = addCombinator( function( elem ) {\n\t\t\treturn elem === checkContext;\n\t\t}, implicitRelative, true ),\n\t\tmatchAnyContext = addCombinator( function( elem ) {\n\t\t\treturn indexOf( checkContext, elem ) > -1;\n\t\t}, implicitRelative, true ),\n\t\tmatchers = [ function( elem, context, xml ) {\n\t\t\tvar ret = ( !leadingRelative && ( xml || context !== outermostContext ) ) || (\n\t\t\t\t(checkContext = context).nodeType ?\n\t\t\t\t\tmatchContext( elem, context, xml ) :\n\t\t\t\t\tmatchAnyContext( elem, context, xml ) );\n\t\t\t// Avoid hanging onto element (issue #299)\n\t\t\tcheckContext = null;\n\t\t\treturn ret;\n\t\t} ];\n\n\tfor ( ; i < len; i++ ) {\n\t\tif ( (matcher = Expr.relative[ tokens[i].type ]) ) {\n\t\t\tmatchers = [ addCombinator(elementMatcher( matchers ), matcher) ];\n\t\t} else {\n\t\t\tmatcher = Expr.filter[ tokens[i].type ].apply( null, tokens[i].matches );\n\n\t\t\t// Return special upon seeing a positional matcher\n\t\t\tif ( matcher[ expando ] ) {\n\t\t\t\t// Find the next relative operator (if any) for proper handling\n\t\t\t\tj = ++i;\n\t\t\t\tfor ( ; j < len; j++ ) {\n\t\t\t\t\tif ( Expr.relative[ tokens[j].type ] ) {\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\treturn setMatcher(\n\t\t\t\t\ti > 1 && elementMatcher( matchers ),\n\t\t\t\t\ti > 1 && toSelector(\n\t\t\t\t\t\t// If the preceding token was a descendant combinator, insert an implicit any-element `*`\n\t\t\t\t\t\ttokens.slice( 0, i - 1 ).concat({ value: tokens[ i - 2 ].type === \" \" ? \"*\" : \"\" })\n\t\t\t\t\t).replace( rtrim, \"$1\" ),\n\t\t\t\t\tmatcher,\n\t\t\t\t\ti < j && matcherFromTokens( tokens.slice( i, j ) ),\n\t\t\t\t\tj < len && matcherFromTokens( (tokens = tokens.slice( j )) ),\n\t\t\t\t\tj < len && toSelector( tokens )\n\t\t\t\t);\n\t\t\t}\n\t\t\tmatchers.push( matcher );\n\t\t}\n\t}\n\n\treturn elementMatcher( matchers );\n}\n\nfunction matcherFromGroupMatchers( elementMatchers, setMatchers ) {\n\tvar bySet = setMatchers.length > 0,\n\t\tbyElement = elementMatchers.length > 0,\n\t\tsuperMatcher = function( seed, context, xml, results, outermost ) {\n\t\t\tvar elem, j, matcher,\n\t\t\t\tmatchedCount = 0,\n\t\t\t\ti = \"0\",\n\t\t\t\tunmatched = seed && [],\n\t\t\t\tsetMatched = [],\n\t\t\t\tcontextBackup = outermostContext,\n\t\t\t\t// We must always have either seed elements or outermost context\n\t\t\t\telems = seed || byElement && Expr.find[\"TAG\"]( \"*\", outermost ),\n\t\t\t\t// Use integer dirruns iff this is the outermost matcher\n\t\t\t\tdirrunsUnique = (dirruns += contextBackup == null ? 1 : Math.random() || 0.1),\n\t\t\t\tlen = elems.length;\n\n\t\t\tif ( outermost ) {\n\t\t\t\toutermostContext = context === document || context || outermost;\n\t\t\t}\n\n\t\t\t// Add elements passing elementMatchers directly to results\n\t\t\t// Support: IE<9, Safari\n\t\t\t// Tolerate NodeList properties (IE: \"length\"; Safari: <number>) matching elements by id\n\t\t\tfor ( ; i !== len && (elem = elems[i]) != null; i++ ) {\n\t\t\t\tif ( byElement && elem ) {\n\t\t\t\t\tj = 0;\n\t\t\t\t\tif ( !context && elem.ownerDocument !== document ) {\n\t\t\t\t\t\tsetDocument( elem );\n\t\t\t\t\t\txml = !documentIsHTML;\n\t\t\t\t\t}\n\t\t\t\t\twhile ( (matcher = elementMatchers[j++]) ) {\n\t\t\t\t\t\tif ( matcher( elem, context || document, xml) ) {\n\t\t\t\t\t\t\tresults.push( elem );\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tif ( outermost ) {\n\t\t\t\t\t\tdirruns = dirrunsUnique;\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\t// Track unmatched elements for set filters\n\t\t\t\tif ( bySet ) {\n\t\t\t\t\t// They will have gone through all possible matchers\n\t\t\t\t\tif ( (elem = !matcher && elem) ) {\n\t\t\t\t\t\tmatchedCount--;\n\t\t\t\t\t}\n\n\t\t\t\t\t// Lengthen the array for every element, matched or not\n\t\t\t\t\tif ( seed ) {\n\t\t\t\t\t\tunmatched.push( elem );\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// `i` is now the count of elements visited above, and adding it to `matchedCount`\n\t\t\t// makes the latter nonnegative.\n\t\t\tmatchedCount += i;\n\n\t\t\t// Apply set filters to unmatched elements\n\t\t\t// NOTE: This can be skipped if there are no unmatched elements (i.e., `matchedCount`\n\t\t\t// equals `i`), unless we didn't visit _any_ elements in the above loop because we have\n\t\t\t// no element matchers and no seed.\n\t\t\t// Incrementing an initially-string \"0\" `i` allows `i` to remain a string only in that\n\t\t\t// case, which will result in a \"00\" `matchedCount` that differs from `i` but is also\n\t\t\t// numerically zero.\n\t\t\tif ( bySet && i !== matchedCount ) {\n\t\t\t\tj = 0;\n\t\t\t\twhile ( (matcher = setMatchers[j++]) ) {\n\t\t\t\t\tmatcher( unmatched, setMatched, context, xml );\n\t\t\t\t}\n\n\t\t\t\tif ( seed ) {\n\t\t\t\t\t// Reintegrate element matches to eliminate the need for sorting\n\t\t\t\t\tif ( matchedCount > 0 ) {\n\t\t\t\t\t\twhile ( i-- ) {\n\t\t\t\t\t\t\tif ( !(unmatched[i] || setMatched[i]) ) {\n\t\t\t\t\t\t\t\tsetMatched[i] = pop.call( results );\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\t// Discard index placeholder values to get only actual matches\n\t\t\t\t\tsetMatched = condense( setMatched );\n\t\t\t\t}\n\n\t\t\t\t// Add matches to results\n\t\t\t\tpush.apply( results, setMatched );\n\n\t\t\t\t// Seedless set matches succeeding multiple successful matchers stipulate sorting\n\t\t\t\tif ( outermost && !seed && setMatched.length > 0 &&\n\t\t\t\t\t( matchedCount + setMatchers.length ) > 1 ) {\n\n\t\t\t\t\tSizzle.uniqueSort( results );\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// Override manipulation of globals by nested matchers\n\t\t\tif ( outermost ) {\n\t\t\t\tdirruns = dirrunsUnique;\n\t\t\t\toutermostContext = contextBackup;\n\t\t\t}\n\n\t\t\treturn unmatched;\n\t\t};\n\n\treturn bySet ?\n\t\tmarkFunction( superMatcher ) :\n\t\tsuperMatcher;\n}\n\ncompile = Sizzle.compile = function( selector, match /* Internal Use Only */ ) {\n\tvar i,\n\t\tsetMatchers = [],\n\t\telementMatchers = [],\n\t\tcached = compilerCache[ selector + \" \" ];\n\n\tif ( !cached ) {\n\t\t// Generate a function of recursive functions that can be used to check each element\n\t\tif ( !match ) {\n\t\t\tmatch = tokenize( selector );\n\t\t}\n\t\ti = match.length;\n\t\twhile ( i-- ) {\n\t\t\tcached = matcherFromTokens( match[i] );\n\t\t\tif ( cached[ expando ] ) {\n\t\t\t\tsetMatchers.push( cached );\n\t\t\t} else {\n\t\t\t\telementMatchers.push( cached );\n\t\t\t}\n\t\t}\n\n\t\t// Cache the compiled function\n\t\tcached = compilerCache( selector, matcherFromGroupMatchers( elementMatchers, setMatchers ) );\n\n\t\t// Save selector and tokenization\n\t\tcached.selector = selector;\n\t}\n\treturn cached;\n};\n\n/**\n * A low-level selection function that works with Sizzle's compiled\n *  selector functions\n * @param {String|Function} selector A selector or a pre-compiled\n *  selector function built with Sizzle.compile\n * @param {Element} context\n * @param {Array} [results]\n * @param {Array} [seed] A set of elements to match against\n */\nselect = Sizzle.select = function( selector, context, results, seed ) {\n\tvar i, tokens, token, type, find,\n\t\tcompiled = typeof selector === \"function\" && selector,\n\t\tmatch = !seed && tokenize( (selector = compiled.selector || selector) );\n\n\tresults = results || [];\n\n\t// Try to minimize operations if there is only one selector in the list and no seed\n\t// (the latter of which guarantees us context)\n\tif ( match.length === 1 ) {\n\n\t\t// Reduce context if the leading compound selector is an ID\n\t\ttokens = match[0] = match[0].slice( 0 );\n\t\tif ( tokens.length > 2 && (token = tokens[0]).type === \"ID\" &&\n\t\t\t\tcontext.nodeType === 9 && documentIsHTML && Expr.relative[ tokens[1].type ] ) {\n\n\t\t\tcontext = ( Expr.find[\"ID\"]( token.matches[0].replace(runescape, funescape), context ) || [] )[0];\n\t\t\tif ( !context ) {\n\t\t\t\treturn results;\n\n\t\t\t// Precompiled matchers will still verify ancestry, so step up a level\n\t\t\t} else if ( compiled ) {\n\t\t\t\tcontext = context.parentNode;\n\t\t\t}\n\n\t\t\tselector = selector.slice( tokens.shift().value.length );\n\t\t}\n\n\t\t// Fetch a seed set for right-to-left matching\n\t\ti = matchExpr[\"needsContext\"].test( selector ) ? 0 : tokens.length;\n\t\twhile ( i-- ) {\n\t\t\ttoken = tokens[i];\n\n\t\t\t// Abort if we hit a combinator\n\t\t\tif ( Expr.relative[ (type = token.type) ] ) {\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\tif ( (find = Expr.find[ type ]) ) {\n\t\t\t\t// Search, expanding context for leading sibling combinators\n\t\t\t\tif ( (seed = find(\n\t\t\t\t\ttoken.matches[0].replace( runescape, funescape ),\n\t\t\t\t\trsibling.test( tokens[0].type ) && testContext( context.parentNode ) || context\n\t\t\t\t)) ) {\n\n\t\t\t\t\t// If seed is empty or no tokens remain, we can return early\n\t\t\t\t\ttokens.splice( i, 1 );\n\t\t\t\t\tselector = seed.length && toSelector( tokens );\n\t\t\t\t\tif ( !selector ) {\n\t\t\t\t\t\tpush.apply( results, seed );\n\t\t\t\t\t\treturn results;\n\t\t\t\t\t}\n\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\t// Compile and execute a filtering function if one is not provided\n\t// Provide `match` to avoid retokenization if we modified the selector above\n\t( compiled || compile( selector, match ) )(\n\t\tseed,\n\t\tcontext,\n\t\t!documentIsHTML,\n\t\tresults,\n\t\t!context || rsibling.test( selector ) && testContext( context.parentNode ) || context\n\t);\n\treturn results;\n};\n\n// One-time assignments\n\n// Sort stability\nsupport.sortStable = expando.split(\"\").sort( sortOrder ).join(\"\") === expando;\n\n// Support: Chrome 14-35+\n// Always assume duplicates if they aren't passed to the comparison function\nsupport.detectDuplicates = !!hasDuplicate;\n\n// Initialize against the default document\nsetDocument();\n\n// Support: Webkit<537.32 - Safari 6.0.3/Chrome 25 (fixed in Chrome 27)\n// Detached nodes confoundingly follow *each other*\nsupport.sortDetached = assert(function( el ) {\n\t// Should return 1, but returns 4 (following)\n\treturn el.compareDocumentPosition( document.createElement(\"fieldset\") ) & 1;\n});\n\n// Support: IE<8\n// Prevent attribute/property \"interpolation\"\n// https://msdn.microsoft.com/en-us/library/ms536429%28VS.85%29.aspx\nif ( !assert(function( el ) {\n\tel.innerHTML = \"<a href='#'></a>\";\n\treturn el.firstChild.getAttribute(\"href\") === \"#\" ;\n}) ) {\n\taddHandle( \"type|href|height|width\", function( elem, name, isXML ) {\n\t\tif ( !isXML ) {\n\t\t\treturn elem.getAttribute( name, name.toLowerCase() === \"type\" ? 1 : 2 );\n\t\t}\n\t});\n}\n\n// Support: IE<9\n// Use defaultValue in place of getAttribute(\"value\")\nif ( !support.attributes || !assert(function( el ) {\n\tel.innerHTML = \"<input/>\";\n\tel.firstChild.setAttribute( \"value\", \"\" );\n\treturn el.firstChild.getAttribute( \"value\" ) === \"\";\n}) ) {\n\taddHandle( \"value\", function( elem, name, isXML ) {\n\t\tif ( !isXML && elem.nodeName.toLowerCase() === \"input\" ) {\n\t\t\treturn elem.defaultValue;\n\t\t}\n\t});\n}\n\n// Support: IE<9\n// Use getAttributeNode to fetch booleans when getAttribute lies\nif ( !assert(function( el ) {\n\treturn el.getAttribute(\"disabled\") == null;\n}) ) {\n\taddHandle( booleans, function( elem, name, isXML ) {\n\t\tvar val;\n\t\tif ( !isXML ) {\n\t\t\treturn elem[ name ] === true ? name.toLowerCase() :\n\t\t\t\t\t(val = elem.getAttributeNode( name )) && val.specified ?\n\t\t\t\t\tval.value :\n\t\t\t\tnull;\n\t\t}\n\t});\n}\n\nreturn Sizzle;\n\n})( window );\n\n\n\njQuery.find = Sizzle;\njQuery.expr = Sizzle.selectors;\n\n// Deprecated\njQuery.expr[ \":\" ] = jQuery.expr.pseudos;\njQuery.uniqueSort = jQuery.unique = Sizzle.uniqueSort;\njQuery.text = Sizzle.getText;\njQuery.isXMLDoc = Sizzle.isXML;\njQuery.contains = Sizzle.contains;\njQuery.escapeSelector = Sizzle.escape;\n\n\n\n\nvar dir = function( elem, dir, until ) {\n\tvar matched = [],\n\t\ttruncate = until !== undefined;\n\n\twhile ( ( elem = elem[ dir ] ) && elem.nodeType !== 9 ) {\n\t\tif ( elem.nodeType === 1 ) {\n\t\t\tif ( truncate && jQuery( elem ).is( until ) ) {\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\tmatched.push( elem );\n\t\t}\n\t}\n\treturn matched;\n};\n\n\nvar siblings = function( n, elem ) {\n\tvar matched = [];\n\n\tfor ( ; n; n = n.nextSibling ) {\n\t\tif ( n.nodeType === 1 && n !== elem ) {\n\t\t\tmatched.push( n );\n\t\t}\n\t}\n\n\treturn matched;\n};\n\n\nvar rneedsContext = jQuery.expr.match.needsContext;\n\n\n\nfunction nodeName( elem, name ) {\n\n  return elem.nodeName && elem.nodeName.toLowerCase() === name.toLowerCase();\n\n};\nvar rsingleTag = ( /^<([a-z][^\\/\\0>:\\x20\\t\\r\\n\\f]*)[\\x20\\t\\r\\n\\f]*\\/?>(?:<\\/\\1>|)$/i );\n\n\n\n// Implement the identical functionality for filter and not\nfunction winnow( elements, qualifier, not ) {\n\tif ( isFunction( qualifier ) ) {\n\t\treturn jQuery.grep( elements, function( elem, i ) {\n\t\t\treturn !!qualifier.call( elem, i, elem ) !== not;\n\t\t} );\n\t}\n\n\t// Single element\n\tif ( qualifier.nodeType ) {\n\t\treturn jQuery.grep( elements, function( elem ) {\n\t\t\treturn ( elem === qualifier ) !== not;\n\t\t} );\n\t}\n\n\t// Arraylike of elements (jQuery, arguments, Array)\n\tif ( typeof qualifier !== \"string\" ) {\n\t\treturn jQuery.grep( elements, function( elem ) {\n\t\t\treturn ( indexOf.call( qualifier, elem ) > -1 ) !== not;\n\t\t} );\n\t}\n\n\t// Filtered directly for both simple and complex selectors\n\treturn jQuery.filter( qualifier, elements, not );\n}\n\njQuery.filter = function( expr, elems, not ) {\n\tvar elem = elems[ 0 ];\n\n\tif ( not ) {\n\t\texpr = \":not(\" + expr + \")\";\n\t}\n\n\tif ( elems.length === 1 && elem.nodeType === 1 ) {\n\t\treturn jQuery.find.matchesSelector( elem, expr ) ? [ elem ] : [];\n\t}\n\n\treturn jQuery.find.matches( expr, jQuery.grep( elems, function( elem ) {\n\t\treturn elem.nodeType === 1;\n\t} ) );\n};\n\njQuery.fn.extend( {\n\tfind: function( selector ) {\n\t\tvar i, ret,\n\t\t\tlen = this.length,\n\t\t\tself = this;\n\n\t\tif ( typeof selector !== \"string\" ) {\n\t\t\treturn this.pushStack( jQuery( selector ).filter( function() {\n\t\t\t\tfor ( i = 0; i < len; i++ ) {\n\t\t\t\t\tif ( jQuery.contains( self[ i ], this ) ) {\n\t\t\t\t\t\treturn true;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t} ) );\n\t\t}\n\n\t\tret = this.pushStack( [] );\n\n\t\tfor ( i = 0; i < len; i++ ) {\n\t\t\tjQuery.find( selector, self[ i ], ret );\n\t\t}\n\n\t\treturn len > 1 ? jQuery.uniqueSort( ret ) : ret;\n\t},\n\tfilter: function( selector ) {\n\t\treturn this.pushStack( winnow( this, selector || [], false ) );\n\t},\n\tnot: function( selector ) {\n\t\treturn this.pushStack( winnow( this, selector || [], true ) );\n\t},\n\tis: function( selector ) {\n\t\treturn !!winnow(\n\t\t\tthis,\n\n\t\t\t// If this is a positional/relative selector, check membership in the returned set\n\t\t\t// so $(\"p:first\").is(\"p:last\") won't return true for a doc with two \"p\".\n\t\t\ttypeof selector === \"string\" && rneedsContext.test( selector ) ?\n\t\t\t\tjQuery( selector ) :\n\t\t\t\tselector || [],\n\t\t\tfalse\n\t\t).length;\n\t}\n} );\n\n\n// Initialize a jQuery object\n\n\n// A central reference to the root jQuery(document)\nvar rootjQuery,\n\n\t// A simple way to check for HTML strings\n\t// Prioritize #id over <tag> to avoid XSS via location.hash (#9521)\n\t// Strict HTML recognition (#11290: must start with <)\n\t// Shortcut simple #id case for speed\n\trquickExpr = /^(?:\\s*(<[\\w\\W]+>)[^>]*|#([\\w-]+))$/,\n\n\tinit = jQuery.fn.init = function( selector, context, root ) {\n\t\tvar match, elem;\n\n\t\t// HANDLE: $(\"\"), $(null), $(undefined), $(false)\n\t\tif ( !selector ) {\n\t\t\treturn this;\n\t\t}\n\n\t\t// Method init() accepts an alternate rootjQuery\n\t\t// so migrate can support jQuery.sub (gh-2101)\n\t\troot = root || rootjQuery;\n\n\t\t// Handle HTML strings\n\t\tif ( typeof selector === \"string\" ) {\n\t\t\tif ( selector[ 0 ] === \"<\" &&\n\t\t\t\tselector[ selector.length - 1 ] === \">\" &&\n\t\t\t\tselector.length >= 3 ) {\n\n\t\t\t\t// Assume that strings that start and end with <> are HTML and skip the regex check\n\t\t\t\tmatch = [ null, selector, null ];\n\n\t\t\t} else {\n\t\t\t\tmatch = rquickExpr.exec( selector );\n\t\t\t}\n\n\t\t\t// Match html or make sure no context is specified for #id\n\t\t\tif ( match && ( match[ 1 ] || !context ) ) {\n\n\t\t\t\t// HANDLE: $(html) -> $(array)\n\t\t\t\tif ( match[ 1 ] ) {\n\t\t\t\t\tcontext = context instanceof jQuery ? context[ 0 ] : context;\n\n\t\t\t\t\t// Option to run scripts is true for back-compat\n\t\t\t\t\t// Intentionally let the error be thrown if parseHTML is not present\n\t\t\t\t\tjQuery.merge( this, jQuery.parseHTML(\n\t\t\t\t\t\tmatch[ 1 ],\n\t\t\t\t\t\tcontext && context.nodeType ? context.ownerDocument || context : document,\n\t\t\t\t\t\ttrue\n\t\t\t\t\t) );\n\n\t\t\t\t\t// HANDLE: $(html, props)\n\t\t\t\t\tif ( rsingleTag.test( match[ 1 ] ) && jQuery.isPlainObject( context ) ) {\n\t\t\t\t\t\tfor ( match in context ) {\n\n\t\t\t\t\t\t\t// Properties of context are called as methods if possible\n\t\t\t\t\t\t\tif ( isFunction( this[ match ] ) ) {\n\t\t\t\t\t\t\t\tthis[ match ]( context[ match ] );\n\n\t\t\t\t\t\t\t// ...and otherwise set as attributes\n\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\tthis.attr( match, context[ match ] );\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\treturn this;\n\n\t\t\t\t// HANDLE: $(#id)\n\t\t\t\t} else {\n\t\t\t\t\telem = document.getElementById( match[ 2 ] );\n\n\t\t\t\t\tif ( elem ) {\n\n\t\t\t\t\t\t// Inject the element directly into the jQuery object\n\t\t\t\t\t\tthis[ 0 ] = elem;\n\t\t\t\t\t\tthis.length = 1;\n\t\t\t\t\t}\n\t\t\t\t\treturn this;\n\t\t\t\t}\n\n\t\t\t// HANDLE: $(expr, $(...))\n\t\t\t} else if ( !context || context.jquery ) {\n\t\t\t\treturn ( context || root ).find( selector );\n\n\t\t\t// HANDLE: $(expr, context)\n\t\t\t// (which is just equivalent to: $(context).find(expr)\n\t\t\t} else {\n\t\t\t\treturn this.constructor( context ).find( selector );\n\t\t\t}\n\n\t\t// HANDLE: $(DOMElement)\n\t\t} else if ( selector.nodeType ) {\n\t\t\tthis[ 0 ] = selector;\n\t\t\tthis.length = 1;\n\t\t\treturn this;\n\n\t\t// HANDLE: $(function)\n\t\t// Shortcut for document ready\n\t\t} else if ( isFunction( selector ) ) {\n\t\t\treturn root.ready !== undefined ?\n\t\t\t\troot.ready( selector ) :\n\n\t\t\t\t// Execute immediately if ready is not present\n\t\t\t\tselector( jQuery );\n\t\t}\n\n\t\treturn jQuery.makeArray( selector, this );\n\t};\n\n// Give the init function the jQuery prototype for later instantiation\ninit.prototype = jQuery.fn;\n\n// Initialize central reference\nrootjQuery = jQuery( document );\n\n\nvar rparentsprev = /^(?:parents|prev(?:Until|All))/,\n\n\t// Methods guaranteed to produce a unique set when starting from a unique set\n\tguaranteedUnique = {\n\t\tchildren: true,\n\t\tcontents: true,\n\t\tnext: true,\n\t\tprev: true\n\t};\n\njQuery.fn.extend( {\n\thas: function( target ) {\n\t\tvar targets = jQuery( target, this ),\n\t\t\tl = targets.length;\n\n\t\treturn this.filter( function() {\n\t\t\tvar i = 0;\n\t\t\tfor ( ; i < l; i++ ) {\n\t\t\t\tif ( jQuery.contains( this, targets[ i ] ) ) {\n\t\t\t\t\treturn true;\n\t\t\t\t}\n\t\t\t}\n\t\t} );\n\t},\n\n\tclosest: function( selectors, context ) {\n\t\tvar cur,\n\t\t\ti = 0,\n\t\t\tl = this.length,\n\t\t\tmatched = [],\n\t\t\ttargets = typeof selectors !== \"string\" && jQuery( selectors );\n\n\t\t// Positional selectors never match, since there's no _selection_ context\n\t\tif ( !rneedsContext.test( selectors ) ) {\n\t\t\tfor ( ; i < l; i++ ) {\n\t\t\t\tfor ( cur = this[ i ]; cur && cur !== context; cur = cur.parentNode ) {\n\n\t\t\t\t\t// Always skip document fragments\n\t\t\t\t\tif ( cur.nodeType < 11 && ( targets ?\n\t\t\t\t\t\ttargets.index( cur ) > -1 :\n\n\t\t\t\t\t\t// Don't pass non-elements to Sizzle\n\t\t\t\t\t\tcur.nodeType === 1 &&\n\t\t\t\t\t\t\tjQuery.find.matchesSelector( cur, selectors ) ) ) {\n\n\t\t\t\t\t\tmatched.push( cur );\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\treturn this.pushStack( matched.length > 1 ? jQuery.uniqueSort( matched ) : matched );\n\t},\n\n\t// Determine the position of an element within the set\n\tindex: function( elem ) {\n\n\t\t// No argument, return index in parent\n\t\tif ( !elem ) {\n\t\t\treturn ( this[ 0 ] && this[ 0 ].parentNode ) ? this.first().prevAll().length : -1;\n\t\t}\n\n\t\t// Index in selector\n\t\tif ( typeof elem === \"string\" ) {\n\t\t\treturn indexOf.call( jQuery( elem ), this[ 0 ] );\n\t\t}\n\n\t\t// Locate the position of the desired element\n\t\treturn indexOf.call( this,\n\n\t\t\t// If it receives a jQuery object, the first element is used\n\t\t\telem.jquery ? elem[ 0 ] : elem\n\t\t);\n\t},\n\n\tadd: function( selector, context ) {\n\t\treturn this.pushStack(\n\t\t\tjQuery.uniqueSort(\n\t\t\t\tjQuery.merge( this.get(), jQuery( selector, context ) )\n\t\t\t)\n\t\t);\n\t},\n\n\taddBack: function( selector ) {\n\t\treturn this.add( selector == null ?\n\t\t\tthis.prevObject : this.prevObject.filter( selector )\n\t\t);\n\t}\n} );\n\nfunction sibling( cur, dir ) {\n\twhile ( ( cur = cur[ dir ] ) && cur.nodeType !== 1 ) {}\n\treturn cur;\n}\n\njQuery.each( {\n\tparent: function( elem ) {\n\t\tvar parent = elem.parentNode;\n\t\treturn parent && parent.nodeType !== 11 ? parent : null;\n\t},\n\tparents: function( elem ) {\n\t\treturn dir( elem, \"parentNode\" );\n\t},\n\tparentsUntil: function( elem, i, until ) {\n\t\treturn dir( elem, \"parentNode\", until );\n\t},\n\tnext: function( elem ) {\n\t\treturn sibling( elem, \"nextSibling\" );\n\t},\n\tprev: function( elem ) {\n\t\treturn sibling( elem, \"previousSibling\" );\n\t},\n\tnextAll: function( elem ) {\n\t\treturn dir( elem, \"nextSibling\" );\n\t},\n\tprevAll: function( elem ) {\n\t\treturn dir( elem, \"previousSibling\" );\n\t},\n\tnextUntil: function( elem, i, until ) {\n\t\treturn dir( elem, \"nextSibling\", until );\n\t},\n\tprevUntil: function( elem, i, until ) {\n\t\treturn dir( elem, \"previousSibling\", until );\n\t},\n\tsiblings: function( elem ) {\n\t\treturn siblings( ( elem.parentNode || {} ).firstChild, elem );\n\t},\n\tchildren: function( elem ) {\n\t\treturn siblings( elem.firstChild );\n\t},\n\tcontents: function( elem ) {\n        if ( nodeName( elem, \"iframe\" ) ) {\n            return elem.contentDocument;\n        }\n\n        // Support: IE 9 - 11 only, iOS 7 only, Android Browser <=4.3 only\n        // Treat the template element as a regular one in browsers that\n        // don't support it.\n        if ( nodeName( elem, \"template\" ) ) {\n            elem = elem.content || elem;\n        }\n\n        return jQuery.merge( [], elem.childNodes );\n\t}\n}, function( name, fn ) {\n\tjQuery.fn[ name ] = function( until, selector ) {\n\t\tvar matched = jQuery.map( this, fn, until );\n\n\t\tif ( name.slice( -5 ) !== \"Until\" ) {\n\t\t\tselector = until;\n\t\t}\n\n\t\tif ( selector && typeof selector === \"string\" ) {\n\t\t\tmatched = jQuery.filter( selector, matched );\n\t\t}\n\n\t\tif ( this.length > 1 ) {\n\n\t\t\t// Remove duplicates\n\t\t\tif ( !guaranteedUnique[ name ] ) {\n\t\t\t\tjQuery.uniqueSort( matched );\n\t\t\t}\n\n\t\t\t// Reverse order for parents* and prev-derivatives\n\t\t\tif ( rparentsprev.test( name ) ) {\n\t\t\t\tmatched.reverse();\n\t\t\t}\n\t\t}\n\n\t\treturn this.pushStack( matched );\n\t};\n} );\nvar rnothtmlwhite = ( /[^\\x20\\t\\r\\n\\f]+/g );\n\n\n\n// Convert String-formatted options into Object-formatted ones\nfunction createOptions( options ) {\n\tvar object = {};\n\tjQuery.each( options.match( rnothtmlwhite ) || [], function( _, flag ) {\n\t\tobject[ flag ] = true;\n\t} );\n\treturn object;\n}\n\n/*\n * Create a callback list using the following parameters:\n *\n *\toptions: an optional list of space-separated options that will change how\n *\t\t\tthe callback list behaves or a more traditional option object\n *\n * By default a callback list will act like an event callback list and can be\n * \"fired\" multiple times.\n *\n * Possible options:\n *\n *\tonce:\t\t\twill ensure the callback list can only be fired once (like a Deferred)\n *\n *\tmemory:\t\t\twill keep track of previous values and will call any callback added\n *\t\t\t\t\tafter the list has been fired right away with the latest \"memorized\"\n *\t\t\t\t\tvalues (like a Deferred)\n *\n *\tunique:\t\t\twill ensure a callback can only be added once (no duplicate in the list)\n *\n *\tstopOnFalse:\tinterrupt callings when a callback returns false\n *\n */\njQuery.Callbacks = function( options ) {\n\n\t// Convert options from String-formatted to Object-formatted if needed\n\t// (we check in cache first)\n\toptions = typeof options === \"string\" ?\n\t\tcreateOptions( options ) :\n\t\tjQuery.extend( {}, options );\n\n\tvar // Flag to know if list is currently firing\n\t\tfiring,\n\n\t\t// Last fire value for non-forgettable lists\n\t\tmemory,\n\n\t\t// Flag to know if list was already fired\n\t\tfired,\n\n\t\t// Flag to prevent firing\n\t\tlocked,\n\n\t\t// Actual callback list\n\t\tlist = [],\n\n\t\t// Queue of execution data for repeatable lists\n\t\tqueue = [],\n\n\t\t// Index of currently firing callback (modified by add/remove as needed)\n\t\tfiringIndex = -1,\n\n\t\t// Fire callbacks\n\t\tfire = function() {\n\n\t\t\t// Enforce single-firing\n\t\t\tlocked = locked || options.once;\n\n\t\t\t// Execute callbacks for all pending executions,\n\t\t\t// respecting firingIndex overrides and runtime changes\n\t\t\tfired = firing = true;\n\t\t\tfor ( ; queue.length; firingIndex = -1 ) {\n\t\t\t\tmemory = queue.shift();\n\t\t\t\twhile ( ++firingIndex < list.length ) {\n\n\t\t\t\t\t// Run callback and check for early termination\n\t\t\t\t\tif ( list[ firingIndex ].apply( memory[ 0 ], memory[ 1 ] ) === false &&\n\t\t\t\t\t\toptions.stopOnFalse ) {\n\n\t\t\t\t\t\t// Jump to end and forget the data so .add doesn't re-fire\n\t\t\t\t\t\tfiringIndex = list.length;\n\t\t\t\t\t\tmemory = false;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// Forget the data if we're done with it\n\t\t\tif ( !options.memory ) {\n\t\t\t\tmemory = false;\n\t\t\t}\n\n\t\t\tfiring = false;\n\n\t\t\t// Clean up if we're done firing for good\n\t\t\tif ( locked ) {\n\n\t\t\t\t// Keep an empty list if we have data for future add calls\n\t\t\t\tif ( memory ) {\n\t\t\t\t\tlist = [];\n\n\t\t\t\t// Otherwise, this object is spent\n\t\t\t\t} else {\n\t\t\t\t\tlist = \"\";\n\t\t\t\t}\n\t\t\t}\n\t\t},\n\n\t\t// Actual Callbacks object\n\t\tself = {\n\n\t\t\t// Add a callback or a collection of callbacks to the list\n\t\t\tadd: function() {\n\t\t\t\tif ( list ) {\n\n\t\t\t\t\t// If we have memory from a past run, we should fire after adding\n\t\t\t\t\tif ( memory && !firing ) {\n\t\t\t\t\t\tfiringIndex = list.length - 1;\n\t\t\t\t\t\tqueue.push( memory );\n\t\t\t\t\t}\n\n\t\t\t\t\t( function add( args ) {\n\t\t\t\t\t\tjQuery.each( args, function( _, arg ) {\n\t\t\t\t\t\t\tif ( isFunction( arg ) ) {\n\t\t\t\t\t\t\t\tif ( !options.unique || !self.has( arg ) ) {\n\t\t\t\t\t\t\t\t\tlist.push( arg );\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t} else if ( arg && arg.length && toType( arg ) !== \"string\" ) {\n\n\t\t\t\t\t\t\t\t// Inspect recursively\n\t\t\t\t\t\t\t\tadd( arg );\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t} );\n\t\t\t\t\t} )( arguments );\n\n\t\t\t\t\tif ( memory && !firing ) {\n\t\t\t\t\t\tfire();\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\treturn this;\n\t\t\t},\n\n\t\t\t// Remove a callback from the list\n\t\t\tremove: function() {\n\t\t\t\tjQuery.each( arguments, function( _, arg ) {\n\t\t\t\t\tvar index;\n\t\t\t\t\twhile ( ( index = jQuery.inArray( arg, list, index ) ) > -1 ) {\n\t\t\t\t\t\tlist.splice( index, 1 );\n\n\t\t\t\t\t\t// Handle firing indexes\n\t\t\t\t\t\tif ( index <= firingIndex ) {\n\t\t\t\t\t\t\tfiringIndex--;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t} );\n\t\t\t\treturn this;\n\t\t\t},\n\n\t\t\t// Check if a given callback is in the list.\n\t\t\t// If no argument is given, return whether or not list has callbacks attached.\n\t\t\thas: function( fn ) {\n\t\t\t\treturn fn ?\n\t\t\t\t\tjQuery.inArray( fn, list ) > -1 :\n\t\t\t\t\tlist.length > 0;\n\t\t\t},\n\n\t\t\t// Remove all callbacks from the list\n\t\t\tempty: function() {\n\t\t\t\tif ( list ) {\n\t\t\t\t\tlist = [];\n\t\t\t\t}\n\t\t\t\treturn this;\n\t\t\t},\n\n\t\t\t// Disable .fire and .add\n\t\t\t// Abort any current/pending executions\n\t\t\t// Clear all callbacks and values\n\t\t\tdisable: function() {\n\t\t\t\tlocked = queue = [];\n\t\t\t\tlist = memory = \"\";\n\t\t\t\treturn this;\n\t\t\t},\n\t\t\tdisabled: function() {\n\t\t\t\treturn !list;\n\t\t\t},\n\n\t\t\t// Disable .fire\n\t\t\t// Also disable .add unless we have memory (since it would have no effect)\n\t\t\t// Abort any pending executions\n\t\t\tlock: function() {\n\t\t\t\tlocked = queue = [];\n\t\t\t\tif ( !memory && !firing ) {\n\t\t\t\t\tlist = memory = \"\";\n\t\t\t\t}\n\t\t\t\treturn this;\n\t\t\t},\n\t\t\tlocked: function() {\n\t\t\t\treturn !!locked;\n\t\t\t},\n\n\t\t\t// Call all callbacks with the given context and arguments\n\t\t\tfireWith: function( context, args ) {\n\t\t\t\tif ( !locked ) {\n\t\t\t\t\targs = args || [];\n\t\t\t\t\targs = [ context, args.slice ? args.slice() : args ];\n\t\t\t\t\tqueue.push( args );\n\t\t\t\t\tif ( !firing ) {\n\t\t\t\t\t\tfire();\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\treturn this;\n\t\t\t},\n\n\t\t\t// Call all the callbacks with the given arguments\n\t\t\tfire: function() {\n\t\t\t\tself.fireWith( this, arguments );\n\t\t\t\treturn this;\n\t\t\t},\n\n\t\t\t// To know if the callbacks have already been called at least once\n\t\t\tfired: function() {\n\t\t\t\treturn !!fired;\n\t\t\t}\n\t\t};\n\n\treturn self;\n};\n\n\nfunction Identity( v ) {\n\treturn v;\n}\nfunction Thrower( ex ) {\n\tthrow ex;\n}\n\nfunction adoptValue( value, resolve, reject, noValue ) {\n\tvar method;\n\n\ttry {\n\n\t\t// Check for promise aspect first to privilege synchronous behavior\n\t\tif ( value && isFunction( ( method = value.promise ) ) ) {\n\t\t\tmethod.call( value ).done( resolve ).fail( reject );\n\n\t\t// Other thenables\n\t\t} else if ( value && isFunction( ( method = value.then ) ) ) {\n\t\t\tmethod.call( value, resolve, reject );\n\n\t\t// Other non-thenables\n\t\t} else {\n\n\t\t\t// Control `resolve` arguments by letting Array#slice cast boolean `noValue` to integer:\n\t\t\t// * false: [ value ].slice( 0 ) => resolve( value )\n\t\t\t// * true: [ value ].slice( 1 ) => resolve()\n\t\t\tresolve.apply( undefined, [ value ].slice( noValue ) );\n\t\t}\n\n\t// For Promises/A+, convert exceptions into rejections\n\t// Since jQuery.when doesn't unwrap thenables, we can skip the extra checks appearing in\n\t// Deferred#then to conditionally suppress rejection.\n\t} catch ( value ) {\n\n\t\t// Support: Android 4.0 only\n\t\t// Strict mode functions invoked without .call/.apply get global-object context\n\t\treject.apply( undefined, [ value ] );\n\t}\n}\n\njQuery.extend( {\n\n\tDeferred: function( func ) {\n\t\tvar tuples = [\n\n\t\t\t\t// action, add listener, callbacks,\n\t\t\t\t// ... .then handlers, argument index, [final state]\n\t\t\t\t[ \"notify\", \"progress\", jQuery.Callbacks( \"memory\" ),\n\t\t\t\t\tjQuery.Callbacks( \"memory\" ), 2 ],\n\t\t\t\t[ \"resolve\", \"done\", jQuery.Callbacks( \"once memory\" ),\n\t\t\t\t\tjQuery.Callbacks( \"once memory\" ), 0, \"resolved\" ],\n\t\t\t\t[ \"reject\", \"fail\", jQuery.Callbacks( \"once memory\" ),\n\t\t\t\t\tjQuery.Callbacks( \"once memory\" ), 1, \"rejected\" ]\n\t\t\t],\n\t\t\tstate = \"pending\",\n\t\t\tpromise = {\n\t\t\t\tstate: function() {\n\t\t\t\t\treturn state;\n\t\t\t\t},\n\t\t\t\talways: function() {\n\t\t\t\t\tdeferred.done( arguments ).fail( arguments );\n\t\t\t\t\treturn this;\n\t\t\t\t},\n\t\t\t\t\"catch\": function( fn ) {\n\t\t\t\t\treturn promise.then( null, fn );\n\t\t\t\t},\n\n\t\t\t\t// Keep pipe for back-compat\n\t\t\t\tpipe: function( /* fnDone, fnFail, fnProgress */ ) {\n\t\t\t\t\tvar fns = arguments;\n\n\t\t\t\t\treturn jQuery.Deferred( function( newDefer ) {\n\t\t\t\t\t\tjQuery.each( tuples, function( i, tuple ) {\n\n\t\t\t\t\t\t\t// Map tuples (progress, done, fail) to arguments (done, fail, progress)\n\t\t\t\t\t\t\tvar fn = isFunction( fns[ tuple[ 4 ] ] ) && fns[ tuple[ 4 ] ];\n\n\t\t\t\t\t\t\t// deferred.progress(function() { bind to newDefer or newDefer.notify })\n\t\t\t\t\t\t\t// deferred.done(function() { bind to newDefer or newDefer.resolve })\n\t\t\t\t\t\t\t// deferred.fail(function() { bind to newDefer or newDefer.reject })\n\t\t\t\t\t\t\tdeferred[ tuple[ 1 ] ]( function() {\n\t\t\t\t\t\t\t\tvar returned = fn && fn.apply( this, arguments );\n\t\t\t\t\t\t\t\tif ( returned && isFunction( returned.promise ) ) {\n\t\t\t\t\t\t\t\t\treturned.promise()\n\t\t\t\t\t\t\t\t\t\t.progress( newDefer.notify )\n\t\t\t\t\t\t\t\t\t\t.done( newDefer.resolve )\n\t\t\t\t\t\t\t\t\t\t.fail( newDefer.reject );\n\t\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\t\tnewDefer[ tuple[ 0 ] + \"With\" ](\n\t\t\t\t\t\t\t\t\t\tthis,\n\t\t\t\t\t\t\t\t\t\tfn ? [ returned ] : arguments\n\t\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t} );\n\t\t\t\t\t\t} );\n\t\t\t\t\t\tfns = null;\n\t\t\t\t\t} ).promise();\n\t\t\t\t},\n\t\t\t\tthen: function( onFulfilled, onRejected, onProgress ) {\n\t\t\t\t\tvar maxDepth = 0;\n\t\t\t\t\tfunction resolve( depth, deferred, handler, special ) {\n\t\t\t\t\t\treturn function() {\n\t\t\t\t\t\t\tvar that = this,\n\t\t\t\t\t\t\t\targs = arguments,\n\t\t\t\t\t\t\t\tmightThrow = function() {\n\t\t\t\t\t\t\t\t\tvar returned, then;\n\n\t\t\t\t\t\t\t\t\t// Support: Promises/A+ section 2.3.3.3.3\n\t\t\t\t\t\t\t\t\t// https://promisesaplus.com/#point-59\n\t\t\t\t\t\t\t\t\t// Ignore double-resolution attempts\n\t\t\t\t\t\t\t\t\tif ( depth < maxDepth ) {\n\t\t\t\t\t\t\t\t\t\treturn;\n\t\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t\t\treturned = handler.apply( that, args );\n\n\t\t\t\t\t\t\t\t\t// Support: Promises/A+ section 2.3.1\n\t\t\t\t\t\t\t\t\t// https://promisesaplus.com/#point-48\n\t\t\t\t\t\t\t\t\tif ( returned === deferred.promise() ) {\n\t\t\t\t\t\t\t\t\t\tthrow new TypeError( \"Thenable self-resolution\" );\n\t\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t\t\t// Support: Promises/A+ sections 2.3.3.1, 3.5\n\t\t\t\t\t\t\t\t\t// https://promisesaplus.com/#point-54\n\t\t\t\t\t\t\t\t\t// https://promisesaplus.com/#point-75\n\t\t\t\t\t\t\t\t\t// Retrieve `then` only once\n\t\t\t\t\t\t\t\t\tthen = returned &&\n\n\t\t\t\t\t\t\t\t\t\t// Support: Promises/A+ section 2.3.4\n\t\t\t\t\t\t\t\t\t\t// https://promisesaplus.com/#point-64\n\t\t\t\t\t\t\t\t\t\t// Only check objects and functions for thenability\n\t\t\t\t\t\t\t\t\t\t( typeof returned === \"object\" ||\n\t\t\t\t\t\t\t\t\t\t\ttypeof returned === \"function\" ) &&\n\t\t\t\t\t\t\t\t\t\treturned.then;\n\n\t\t\t\t\t\t\t\t\t// Handle a returned thenable\n\t\t\t\t\t\t\t\t\tif ( isFunction( then ) ) {\n\n\t\t\t\t\t\t\t\t\t\t// Special processors (notify) just wait for resolution\n\t\t\t\t\t\t\t\t\t\tif ( special ) {\n\t\t\t\t\t\t\t\t\t\t\tthen.call(\n\t\t\t\t\t\t\t\t\t\t\t\treturned,\n\t\t\t\t\t\t\t\t\t\t\t\tresolve( maxDepth, deferred, Identity, special ),\n\t\t\t\t\t\t\t\t\t\t\t\tresolve( maxDepth, deferred, Thrower, special )\n\t\t\t\t\t\t\t\t\t\t\t);\n\n\t\t\t\t\t\t\t\t\t\t// Normal processors (resolve) also hook into progress\n\t\t\t\t\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\t\t\t\t\t// ...and disregard older resolution values\n\t\t\t\t\t\t\t\t\t\t\tmaxDepth++;\n\n\t\t\t\t\t\t\t\t\t\t\tthen.call(\n\t\t\t\t\t\t\t\t\t\t\t\treturned,\n\t\t\t\t\t\t\t\t\t\t\t\tresolve( maxDepth, deferred, Identity, special ),\n\t\t\t\t\t\t\t\t\t\t\t\tresolve( maxDepth, deferred, Thrower, special ),\n\t\t\t\t\t\t\t\t\t\t\t\tresolve( maxDepth, deferred, Identity,\n\t\t\t\t\t\t\t\t\t\t\t\t\tdeferred.notifyWith )\n\t\t\t\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t\t\t// Handle all other returned values\n\t\t\t\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\t\t\t\t// Only substitute handlers pass on context\n\t\t\t\t\t\t\t\t\t\t// and multiple values (non-spec behavior)\n\t\t\t\t\t\t\t\t\t\tif ( handler !== Identity ) {\n\t\t\t\t\t\t\t\t\t\t\tthat = undefined;\n\t\t\t\t\t\t\t\t\t\t\targs = [ returned ];\n\t\t\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t\t\t\t// Process the value(s)\n\t\t\t\t\t\t\t\t\t\t// Default process is resolve\n\t\t\t\t\t\t\t\t\t\t( special || deferred.resolveWith )( that, args );\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t},\n\n\t\t\t\t\t\t\t\t// Only normal processors (resolve) catch and reject exceptions\n\t\t\t\t\t\t\t\tprocess = special ?\n\t\t\t\t\t\t\t\t\tmightThrow :\n\t\t\t\t\t\t\t\t\tfunction() {\n\t\t\t\t\t\t\t\t\t\ttry {\n\t\t\t\t\t\t\t\t\t\t\tmightThrow();\n\t\t\t\t\t\t\t\t\t\t} catch ( e ) {\n\n\t\t\t\t\t\t\t\t\t\t\tif ( jQuery.Deferred.exceptionHook ) {\n\t\t\t\t\t\t\t\t\t\t\t\tjQuery.Deferred.exceptionHook( e,\n\t\t\t\t\t\t\t\t\t\t\t\t\tprocess.stackTrace );\n\t\t\t\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t\t\t\t\t// Support: Promises/A+ section 2.3.3.3.4.1\n\t\t\t\t\t\t\t\t\t\t\t// https://promisesaplus.com/#point-61\n\t\t\t\t\t\t\t\t\t\t\t// Ignore post-resolution exceptions\n\t\t\t\t\t\t\t\t\t\t\tif ( depth + 1 >= maxDepth ) {\n\n\t\t\t\t\t\t\t\t\t\t\t\t// Only substitute handlers pass on context\n\t\t\t\t\t\t\t\t\t\t\t\t// and multiple values (non-spec behavior)\n\t\t\t\t\t\t\t\t\t\t\t\tif ( handler !== Thrower ) {\n\t\t\t\t\t\t\t\t\t\t\t\t\tthat = undefined;\n\t\t\t\t\t\t\t\t\t\t\t\t\targs = [ e ];\n\t\t\t\t\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t\t\t\t\t\tdeferred.rejectWith( that, args );\n\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t};\n\n\t\t\t\t\t\t\t// Support: Promises/A+ section 2.3.3.3.1\n\t\t\t\t\t\t\t// https://promisesaplus.com/#point-57\n\t\t\t\t\t\t\t// Re-resolve promises immediately to dodge false rejection from\n\t\t\t\t\t\t\t// subsequent errors\n\t\t\t\t\t\t\tif ( depth ) {\n\t\t\t\t\t\t\t\tprocess();\n\t\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\t\t// Call an optional hook to record the stack, in case of exception\n\t\t\t\t\t\t\t\t// since it's otherwise lost when execution goes async\n\t\t\t\t\t\t\t\tif ( jQuery.Deferred.getStackHook ) {\n\t\t\t\t\t\t\t\t\tprocess.stackTrace = jQuery.Deferred.getStackHook();\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\twindow.setTimeout( process );\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t};\n\t\t\t\t\t}\n\n\t\t\t\t\treturn jQuery.Deferred( function( newDefer ) {\n\n\t\t\t\t\t\t// progress_handlers.add( ... )\n\t\t\t\t\t\ttuples[ 0 ][ 3 ].add(\n\t\t\t\t\t\t\tresolve(\n\t\t\t\t\t\t\t\t0,\n\t\t\t\t\t\t\t\tnewDefer,\n\t\t\t\t\t\t\t\tisFunction( onProgress ) ?\n\t\t\t\t\t\t\t\t\tonProgress :\n\t\t\t\t\t\t\t\t\tIdentity,\n\t\t\t\t\t\t\t\tnewDefer.notifyWith\n\t\t\t\t\t\t\t)\n\t\t\t\t\t\t);\n\n\t\t\t\t\t\t// fulfilled_handlers.add( ... )\n\t\t\t\t\t\ttuples[ 1 ][ 3 ].add(\n\t\t\t\t\t\t\tresolve(\n\t\t\t\t\t\t\t\t0,\n\t\t\t\t\t\t\t\tnewDefer,\n\t\t\t\t\t\t\t\tisFunction( onFulfilled ) ?\n\t\t\t\t\t\t\t\t\tonFulfilled :\n\t\t\t\t\t\t\t\t\tIdentity\n\t\t\t\t\t\t\t)\n\t\t\t\t\t\t);\n\n\t\t\t\t\t\t// rejected_handlers.add( ... )\n\t\t\t\t\t\ttuples[ 2 ][ 3 ].add(\n\t\t\t\t\t\t\tresolve(\n\t\t\t\t\t\t\t\t0,\n\t\t\t\t\t\t\t\tnewDefer,\n\t\t\t\t\t\t\t\tisFunction( onRejected ) ?\n\t\t\t\t\t\t\t\t\tonRejected :\n\t\t\t\t\t\t\t\t\tThrower\n\t\t\t\t\t\t\t)\n\t\t\t\t\t\t);\n\t\t\t\t\t} ).promise();\n\t\t\t\t},\n\n\t\t\t\t// Get a promise for this deferred\n\t\t\t\t// If obj is provided, the promise aspect is added to the object\n\t\t\t\tpromise: function( obj ) {\n\t\t\t\t\treturn obj != null ? jQuery.extend( obj, promise ) : promise;\n\t\t\t\t}\n\t\t\t},\n\t\t\tdeferred = {};\n\n\t\t// Add list-specific methods\n\t\tjQuery.each( tuples, function( i, tuple ) {\n\t\t\tvar list = tuple[ 2 ],\n\t\t\t\tstateString = tuple[ 5 ];\n\n\t\t\t// promise.progress = list.add\n\t\t\t// promise.done = list.add\n\t\t\t// promise.fail = list.add\n\t\t\tpromise[ tuple[ 1 ] ] = list.add;\n\n\t\t\t// Handle state\n\t\t\tif ( stateString ) {\n\t\t\t\tlist.add(\n\t\t\t\t\tfunction() {\n\n\t\t\t\t\t\t// state = \"resolved\" (i.e., fulfilled)\n\t\t\t\t\t\t// state = \"rejected\"\n\t\t\t\t\t\tstate = stateString;\n\t\t\t\t\t},\n\n\t\t\t\t\t// rejected_callbacks.disable\n\t\t\t\t\t// fulfilled_callbacks.disable\n\t\t\t\t\ttuples[ 3 - i ][ 2 ].disable,\n\n\t\t\t\t\t// rejected_handlers.disable\n\t\t\t\t\t// fulfilled_handlers.disable\n\t\t\t\t\ttuples[ 3 - i ][ 3 ].disable,\n\n\t\t\t\t\t// progress_callbacks.lock\n\t\t\t\t\ttuples[ 0 ][ 2 ].lock,\n\n\t\t\t\t\t// progress_handlers.lock\n\t\t\t\t\ttuples[ 0 ][ 3 ].lock\n\t\t\t\t);\n\t\t\t}\n\n\t\t\t// progress_handlers.fire\n\t\t\t// fulfilled_handlers.fire\n\t\t\t// rejected_handlers.fire\n\t\t\tlist.add( tuple[ 3 ].fire );\n\n\t\t\t// deferred.notify = function() { deferred.notifyWith(...) }\n\t\t\t// deferred.resolve = function() { deferred.resolveWith(...) }\n\t\t\t// deferred.reject = function() { deferred.rejectWith(...) }\n\t\t\tdeferred[ tuple[ 0 ] ] = function() {\n\t\t\t\tdeferred[ tuple[ 0 ] + \"With\" ]( this === deferred ? undefined : this, arguments );\n\t\t\t\treturn this;\n\t\t\t};\n\n\t\t\t// deferred.notifyWith = list.fireWith\n\t\t\t// deferred.resolveWith = list.fireWith\n\t\t\t// deferred.rejectWith = list.fireWith\n\t\t\tdeferred[ tuple[ 0 ] + \"With\" ] = list.fireWith;\n\t\t} );\n\n\t\t// Make the deferred a promise\n\t\tpromise.promise( deferred );\n\n\t\t// Call given func if any\n\t\tif ( func ) {\n\t\t\tfunc.call( deferred, deferred );\n\t\t}\n\n\t\t// All done!\n\t\treturn deferred;\n\t},\n\n\t// Deferred helper\n\twhen: function( singleValue ) {\n\t\tvar\n\n\t\t\t// count of uncompleted subordinates\n\t\t\tremaining = arguments.length,\n\n\t\t\t// count of unprocessed arguments\n\t\t\ti = remaining,\n\n\t\t\t// subordinate fulfillment data\n\t\t\tresolveContexts = Array( i ),\n\t\t\tresolveValues = slice.call( arguments ),\n\n\t\t\t// the master Deferred\n\t\t\tmaster = jQuery.Deferred(),\n\n\t\t\t// subordinate callback factory\n\t\t\tupdateFunc = function( i ) {\n\t\t\t\treturn function( value ) {\n\t\t\t\t\tresolveContexts[ i ] = this;\n\t\t\t\t\tresolveValues[ i ] = arguments.length > 1 ? slice.call( arguments ) : value;\n\t\t\t\t\tif ( !( --remaining ) ) {\n\t\t\t\t\t\tmaster.resolveWith( resolveContexts, resolveValues );\n\t\t\t\t\t}\n\t\t\t\t};\n\t\t\t};\n\n\t\t// Single- and empty arguments are adopted like Promise.resolve\n\t\tif ( remaining <= 1 ) {\n\t\t\tadoptValue( singleValue, master.done( updateFunc( i ) ).resolve, master.reject,\n\t\t\t\t!remaining );\n\n\t\t\t// Use .then() to unwrap secondary thenables (cf. gh-3000)\n\t\t\tif ( master.state() === \"pending\" ||\n\t\t\t\tisFunction( resolveValues[ i ] && resolveValues[ i ].then ) ) {\n\n\t\t\t\treturn master.then();\n\t\t\t}\n\t\t}\n\n\t\t// Multiple arguments are aggregated like Promise.all array elements\n\t\twhile ( i-- ) {\n\t\t\tadoptValue( resolveValues[ i ], updateFunc( i ), master.reject );\n\t\t}\n\n\t\treturn master.promise();\n\t}\n} );\n\n\n// These usually indicate a programmer mistake during development,\n// warn about them ASAP rather than swallowing them by default.\nvar rerrorNames = /^(Eval|Internal|Range|Reference|Syntax|Type|URI)Error$/;\n\njQuery.Deferred.exceptionHook = function( error, stack ) {\n\n\t// Support: IE 8 - 9 only\n\t// Console exists when dev tools are open, which can happen at any time\n\tif ( window.console && window.console.warn && error && rerrorNames.test( error.name ) ) {\n\t\twindow.console.warn( \"jQuery.Deferred exception: \" + error.message, error.stack, stack );\n\t}\n};\n\n\n\n\njQuery.readyException = function( error ) {\n\twindow.setTimeout( function() {\n\t\tthrow error;\n\t} );\n};\n\n\n\n\n// The deferred used on DOM ready\nvar readyList = jQuery.Deferred();\n\njQuery.fn.ready = function( fn ) {\n\n\treadyList\n\t\t.then( fn )\n\n\t\t// Wrap jQuery.readyException in a function so that the lookup\n\t\t// happens at the time of error handling instead of callback\n\t\t// registration.\n\t\t.catch( function( error ) {\n\t\t\tjQuery.readyException( error );\n\t\t} );\n\n\treturn this;\n};\n\njQuery.extend( {\n\n\t// Is the DOM ready to be used? Set to true once it occurs.\n\tisReady: false,\n\n\t// A counter to track how many items to wait for before\n\t// the ready event fires. See #6781\n\treadyWait: 1,\n\n\t// Handle when the DOM is ready\n\tready: function( wait ) {\n\n\t\t// Abort if there are pending holds or we're already ready\n\t\tif ( wait === true ? --jQuery.readyWait : jQuery.isReady ) {\n\t\t\treturn;\n\t\t}\n\n\t\t// Remember that the DOM is ready\n\t\tjQuery.isReady = true;\n\n\t\t// If a normal DOM Ready event fired, decrement, and wait if need be\n\t\tif ( wait !== true && --jQuery.readyWait > 0 ) {\n\t\t\treturn;\n\t\t}\n\n\t\t// If there are functions bound, to execute\n\t\treadyList.resolveWith( document, [ jQuery ] );\n\t}\n} );\n\njQuery.ready.then = readyList.then;\n\n// The ready event handler and self cleanup method\nfunction completed() {\n\tdocument.removeEventListener( \"DOMContentLoaded\", completed );\n\twindow.removeEventListener( \"load\", completed );\n\tjQuery.ready();\n}\n\n// Catch cases where $(document).ready() is called\n// after the browser event has already occurred.\n// Support: IE <=9 - 10 only\n// Older IE sometimes signals \"interactive\" too soon\nif ( document.readyState === \"complete\" ||\n\t( document.readyState !== \"loading\" && !document.documentElement.doScroll ) ) {\n\n\t// Handle it asynchronously to allow scripts the opportunity to delay ready\n\twindow.setTimeout( jQuery.ready );\n\n} else {\n\n\t// Use the handy event callback\n\tdocument.addEventListener( \"DOMContentLoaded\", completed );\n\n\t// A fallback to window.onload, that will always work\n\twindow.addEventListener( \"load\", completed );\n}\n\n\n\n\n// Multifunctional method to get and set values of a collection\n// The value/s can optionally be executed if it's a function\nvar access = function( elems, fn, key, value, chainable, emptyGet, raw ) {\n\tvar i = 0,\n\t\tlen = elems.length,\n\t\tbulk = key == null;\n\n\t// Sets many values\n\tif ( toType( key ) === \"object\" ) {\n\t\tchainable = true;\n\t\tfor ( i in key ) {\n\t\t\taccess( elems, fn, i, key[ i ], true, emptyGet, raw );\n\t\t}\n\n\t// Sets one value\n\t} else if ( value !== undefined ) {\n\t\tchainable = true;\n\n\t\tif ( !isFunction( value ) ) {\n\t\t\traw = true;\n\t\t}\n\n\t\tif ( bulk ) {\n\n\t\t\t// Bulk operations run against the entire set\n\t\t\tif ( raw ) {\n\t\t\t\tfn.call( elems, value );\n\t\t\t\tfn = null;\n\n\t\t\t// ...except when executing function values\n\t\t\t} else {\n\t\t\t\tbulk = fn;\n\t\t\t\tfn = function( elem, key, value ) {\n\t\t\t\t\treturn bulk.call( jQuery( elem ), value );\n\t\t\t\t};\n\t\t\t}\n\t\t}\n\n\t\tif ( fn ) {\n\t\t\tfor ( ; i < len; i++ ) {\n\t\t\t\tfn(\n\t\t\t\t\telems[ i ], key, raw ?\n\t\t\t\t\tvalue :\n\t\t\t\t\tvalue.call( elems[ i ], i, fn( elems[ i ], key ) )\n\t\t\t\t);\n\t\t\t}\n\t\t}\n\t}\n\n\tif ( chainable ) {\n\t\treturn elems;\n\t}\n\n\t// Gets\n\tif ( bulk ) {\n\t\treturn fn.call( elems );\n\t}\n\n\treturn len ? fn( elems[ 0 ], key ) : emptyGet;\n};\n\n\n// Matches dashed string for camelizing\nvar rmsPrefix = /^-ms-/,\n\trdashAlpha = /-([a-z])/g;\n\n// Used by camelCase as callback to replace()\nfunction fcamelCase( all, letter ) {\n\treturn letter.toUpperCase();\n}\n\n// Convert dashed to camelCase; used by the css and data modules\n// Support: IE <=9 - 11, Edge 12 - 15\n// Microsoft forgot to hump their vendor prefix (#9572)\nfunction camelCase( string ) {\n\treturn string.replace( rmsPrefix, \"ms-\" ).replace( rdashAlpha, fcamelCase );\n}\nvar acceptData = function( owner ) {\n\n\t// Accepts only:\n\t//  - Node\n\t//    - Node.ELEMENT_NODE\n\t//    - Node.DOCUMENT_NODE\n\t//  - Object\n\t//    - Any\n\treturn owner.nodeType === 1 || owner.nodeType === 9 || !( +owner.nodeType );\n};\n\n\n\n\nfunction Data() {\n\tthis.expando = jQuery.expando + Data.uid++;\n}\n\nData.uid = 1;\n\nData.prototype = {\n\n\tcache: function( owner ) {\n\n\t\t// Check if the owner object already has a cache\n\t\tvar value = owner[ this.expando ];\n\n\t\t// If not, create one\n\t\tif ( !value ) {\n\t\t\tvalue = {};\n\n\t\t\t// We can accept data for non-element nodes in modern browsers,\n\t\t\t// but we should not, see #8335.\n\t\t\t// Always return an empty object.\n\t\t\tif ( acceptData( owner ) ) {\n\n\t\t\t\t// If it is a node unlikely to be stringify-ed or looped over\n\t\t\t\t// use plain assignment\n\t\t\t\tif ( owner.nodeType ) {\n\t\t\t\t\towner[ this.expando ] = value;\n\n\t\t\t\t// Otherwise secure it in a non-enumerable property\n\t\t\t\t// configurable must be true to allow the property to be\n\t\t\t\t// deleted when data is removed\n\t\t\t\t} else {\n\t\t\t\t\tObject.defineProperty( owner, this.expando, {\n\t\t\t\t\t\tvalue: value,\n\t\t\t\t\t\tconfigurable: true\n\t\t\t\t\t} );\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\treturn value;\n\t},\n\tset: function( owner, data, value ) {\n\t\tvar prop,\n\t\t\tcache = this.cache( owner );\n\n\t\t// Handle: [ owner, key, value ] args\n\t\t// Always use camelCase key (gh-2257)\n\t\tif ( typeof data === \"string\" ) {\n\t\t\tcache[ camelCase( data ) ] = value;\n\n\t\t// Handle: [ owner, { properties } ] args\n\t\t} else {\n\n\t\t\t// Copy the properties one-by-one to the cache object\n\t\t\tfor ( prop in data ) {\n\t\t\t\tcache[ camelCase( prop ) ] = data[ prop ];\n\t\t\t}\n\t\t}\n\t\treturn cache;\n\t},\n\tget: function( owner, key ) {\n\t\treturn key === undefined ?\n\t\t\tthis.cache( owner ) :\n\n\t\t\t// Always use camelCase key (gh-2257)\n\t\t\towner[ this.expando ] && owner[ this.expando ][ camelCase( key ) ];\n\t},\n\taccess: function( owner, key, value ) {\n\n\t\t// In cases where either:\n\t\t//\n\t\t//   1. No key was specified\n\t\t//   2. A string key was specified, but no value provided\n\t\t//\n\t\t// Take the \"read\" path and allow the get method to determine\n\t\t// which value to return, respectively either:\n\t\t//\n\t\t//   1. The entire cache object\n\t\t//   2. The data stored at the key\n\t\t//\n\t\tif ( key === undefined ||\n\t\t\t\t( ( key && typeof key === \"string\" ) && value === undefined ) ) {\n\n\t\t\treturn this.get( owner, key );\n\t\t}\n\n\t\t// When the key is not a string, or both a key and value\n\t\t// are specified, set or extend (existing objects) with either:\n\t\t//\n\t\t//   1. An object of properties\n\t\t//   2. A key and value\n\t\t//\n\t\tthis.set( owner, key, value );\n\n\t\t// Since the \"set\" path can have two possible entry points\n\t\t// return the expected data based on which path was taken[*]\n\t\treturn value !== undefined ? value : key;\n\t},\n\tremove: function( owner, key ) {\n\t\tvar i,\n\t\t\tcache = owner[ this.expando ];\n\n\t\tif ( cache === undefined ) {\n\t\t\treturn;\n\t\t}\n\n\t\tif ( key !== undefined ) {\n\n\t\t\t// Support array or space separated string of keys\n\t\t\tif ( Array.isArray( key ) ) {\n\n\t\t\t\t// If key is an array of keys...\n\t\t\t\t// We always set camelCase keys, so remove that.\n\t\t\t\tkey = key.map( camelCase );\n\t\t\t} else {\n\t\t\t\tkey = camelCase( key );\n\n\t\t\t\t// If a key with the spaces exists, use it.\n\t\t\t\t// Otherwise, create an array by matching non-whitespace\n\t\t\t\tkey = key in cache ?\n\t\t\t\t\t[ key ] :\n\t\t\t\t\t( key.match( rnothtmlwhite ) || [] );\n\t\t\t}\n\n\t\t\ti = key.length;\n\n\t\t\twhile ( i-- ) {\n\t\t\t\tdelete cache[ key[ i ] ];\n\t\t\t}\n\t\t}\n\n\t\t// Remove the expando if there's no more data\n\t\tif ( key === undefined || jQuery.isEmptyObject( cache ) ) {\n\n\t\t\t// Support: Chrome <=35 - 45\n\t\t\t// Webkit & Blink performance suffers when deleting properties\n\t\t\t// from DOM nodes, so set to undefined instead\n\t\t\t// https://bugs.chromium.org/p/chromium/issues/detail?id=378607 (bug restricted)\n\t\t\tif ( owner.nodeType ) {\n\t\t\t\towner[ this.expando ] = undefined;\n\t\t\t} else {\n\t\t\t\tdelete owner[ this.expando ];\n\t\t\t}\n\t\t}\n\t},\n\thasData: function( owner ) {\n\t\tvar cache = owner[ this.expando ];\n\t\treturn cache !== undefined && !jQuery.isEmptyObject( cache );\n\t}\n};\nvar dataPriv = new Data();\n\nvar dataUser = new Data();\n\n\n\n//\tImplementation Summary\n//\n//\t1. Enforce API surface and semantic compatibility with 1.9.x branch\n//\t2. Improve the module's maintainability by reducing the storage\n//\t\tpaths to a single mechanism.\n//\t3. Use the same single mechanism to support \"private\" and \"user\" data.\n//\t4. _Never_ expose \"private\" data to user code (TODO: Drop _data, _removeData)\n//\t5. Avoid exposing implementation details on user objects (eg. expando properties)\n//\t6. Provide a clear path for implementation upgrade to WeakMap in 2014\n\nvar rbrace = /^(?:\\{[\\w\\W]*\\}|\\[[\\w\\W]*\\])$/,\n\trmultiDash = /[A-Z]/g;\n\nfunction getData( data ) {\n\tif ( data === \"true\" ) {\n\t\treturn true;\n\t}\n\n\tif ( data === \"false\" ) {\n\t\treturn false;\n\t}\n\n\tif ( data === \"null\" ) {\n\t\treturn null;\n\t}\n\n\t// Only convert to a number if it doesn't change the string\n\tif ( data === +data + \"\" ) {\n\t\treturn +data;\n\t}\n\n\tif ( rbrace.test( data ) ) {\n\t\treturn JSON.parse( data );\n\t}\n\n\treturn data;\n}\n\nfunction dataAttr( elem, key, data ) {\n\tvar name;\n\n\t// If nothing was found internally, try to fetch any\n\t// data from the HTML5 data-* attribute\n\tif ( data === undefined && elem.nodeType === 1 ) {\n\t\tname = \"data-\" + key.replace( rmultiDash, \"-$&\" ).toLowerCase();\n\t\tdata = elem.getAttribute( name );\n\n\t\tif ( typeof data === \"string\" ) {\n\t\t\ttry {\n\t\t\t\tdata = getData( data );\n\t\t\t} catch ( e ) {}\n\n\t\t\t// Make sure we set the data so it isn't changed later\n\t\t\tdataUser.set( elem, key, data );\n\t\t} else {\n\t\t\tdata = undefined;\n\t\t}\n\t}\n\treturn data;\n}\n\njQuery.extend( {\n\thasData: function( elem ) {\n\t\treturn dataUser.hasData( elem ) || dataPriv.hasData( elem );\n\t},\n\n\tdata: function( elem, name, data ) {\n\t\treturn dataUser.access( elem, name, data );\n\t},\n\n\tremoveData: function( elem, name ) {\n\t\tdataUser.remove( elem, name );\n\t},\n\n\t// TODO: Now that all calls to _data and _removeData have been replaced\n\t// with direct calls to dataPriv methods, these can be deprecated.\n\t_data: function( elem, name, data ) {\n\t\treturn dataPriv.access( elem, name, data );\n\t},\n\n\t_removeData: function( elem, name ) {\n\t\tdataPriv.remove( elem, name );\n\t}\n} );\n\njQuery.fn.extend( {\n\tdata: function( key, value ) {\n\t\tvar i, name, data,\n\t\t\telem = this[ 0 ],\n\t\t\tattrs = elem && elem.attributes;\n\n\t\t// Gets all values\n\t\tif ( key === undefined ) {\n\t\t\tif ( this.length ) {\n\t\t\t\tdata = dataUser.get( elem );\n\n\t\t\t\tif ( elem.nodeType === 1 && !dataPriv.get( elem, \"hasDataAttrs\" ) ) {\n\t\t\t\t\ti = attrs.length;\n\t\t\t\t\twhile ( i-- ) {\n\n\t\t\t\t\t\t// Support: IE 11 only\n\t\t\t\t\t\t// The attrs elements can be null (#14894)\n\t\t\t\t\t\tif ( attrs[ i ] ) {\n\t\t\t\t\t\t\tname = attrs[ i ].name;\n\t\t\t\t\t\t\tif ( name.indexOf( \"data-\" ) === 0 ) {\n\t\t\t\t\t\t\t\tname = camelCase( name.slice( 5 ) );\n\t\t\t\t\t\t\t\tdataAttr( elem, name, data[ name ] );\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tdataPriv.set( elem, \"hasDataAttrs\", true );\n\t\t\t\t}\n\t\t\t}\n\n\t\t\treturn data;\n\t\t}\n\n\t\t// Sets multiple values\n\t\tif ( typeof key === \"object\" ) {\n\t\t\treturn this.each( function() {\n\t\t\t\tdataUser.set( this, key );\n\t\t\t} );\n\t\t}\n\n\t\treturn access( this, function( value ) {\n\t\t\tvar data;\n\n\t\t\t// The calling jQuery object (element matches) is not empty\n\t\t\t// (and therefore has an element appears at this[ 0 ]) and the\n\t\t\t// `value` parameter was not undefined. An empty jQuery object\n\t\t\t// will result in `undefined` for elem = this[ 0 ] which will\n\t\t\t// throw an exception if an attempt to read a data cache is made.\n\t\t\tif ( elem && value === undefined ) {\n\n\t\t\t\t// Attempt to get data from the cache\n\t\t\t\t// The key will always be camelCased in Data\n\t\t\t\tdata = dataUser.get( elem, key );\n\t\t\t\tif ( data !== undefined ) {\n\t\t\t\t\treturn data;\n\t\t\t\t}\n\n\t\t\t\t// Attempt to \"discover\" the data in\n\t\t\t\t// HTML5 custom data-* attrs\n\t\t\t\tdata = dataAttr( elem, key );\n\t\t\t\tif ( data !== undefined ) {\n\t\t\t\t\treturn data;\n\t\t\t\t}\n\n\t\t\t\t// We tried really hard, but the data doesn't exist.\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\t// Set the data...\n\t\t\tthis.each( function() {\n\n\t\t\t\t// We always store the camelCased key\n\t\t\t\tdataUser.set( this, key, value );\n\t\t\t} );\n\t\t}, null, value, arguments.length > 1, null, true );\n\t},\n\n\tremoveData: function( key ) {\n\t\treturn this.each( function() {\n\t\t\tdataUser.remove( this, key );\n\t\t} );\n\t}\n} );\n\n\njQuery.extend( {\n\tqueue: function( elem, type, data ) {\n\t\tvar queue;\n\n\t\tif ( elem ) {\n\t\t\ttype = ( type || \"fx\" ) + \"queue\";\n\t\t\tqueue = dataPriv.get( elem, type );\n\n\t\t\t// Speed up dequeue by getting out quickly if this is just a lookup\n\t\t\tif ( data ) {\n\t\t\t\tif ( !queue || Array.isArray( data ) ) {\n\t\t\t\t\tqueue = dataPriv.access( elem, type, jQuery.makeArray( data ) );\n\t\t\t\t} else {\n\t\t\t\t\tqueue.push( data );\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn queue || [];\n\t\t}\n\t},\n\n\tdequeue: function( elem, type ) {\n\t\ttype = type || \"fx\";\n\n\t\tvar queue = jQuery.queue( elem, type ),\n\t\t\tstartLength = queue.length,\n\t\t\tfn = queue.shift(),\n\t\t\thooks = jQuery._queueHooks( elem, type ),\n\t\t\tnext = function() {\n\t\t\t\tjQuery.dequeue( elem, type );\n\t\t\t};\n\n\t\t// If the fx queue is dequeued, always remove the progress sentinel\n\t\tif ( fn === \"inprogress\" ) {\n\t\t\tfn = queue.shift();\n\t\t\tstartLength--;\n\t\t}\n\n\t\tif ( fn ) {\n\n\t\t\t// Add a progress sentinel to prevent the fx queue from being\n\t\t\t// automatically dequeued\n\t\t\tif ( type === \"fx\" ) {\n\t\t\t\tqueue.unshift( \"inprogress\" );\n\t\t\t}\n\n\t\t\t// Clear up the last queue stop function\n\t\t\tdelete hooks.stop;\n\t\t\tfn.call( elem, next, hooks );\n\t\t}\n\n\t\tif ( !startLength && hooks ) {\n\t\t\thooks.empty.fire();\n\t\t}\n\t},\n\n\t// Not public - generate a queueHooks object, or return the current one\n\t_queueHooks: function( elem, type ) {\n\t\tvar key = type + \"queueHooks\";\n\t\treturn dataPriv.get( elem, key ) || dataPriv.access( elem, key, {\n\t\t\tempty: jQuery.Callbacks( \"once memory\" ).add( function() {\n\t\t\t\tdataPriv.remove( elem, [ type + \"queue\", key ] );\n\t\t\t} )\n\t\t} );\n\t}\n} );\n\njQuery.fn.extend( {\n\tqueue: function( type, data ) {\n\t\tvar setter = 2;\n\n\t\tif ( typeof type !== \"string\" ) {\n\t\t\tdata = type;\n\t\t\ttype = \"fx\";\n\t\t\tsetter--;\n\t\t}\n\n\t\tif ( arguments.length < setter ) {\n\t\t\treturn jQuery.queue( this[ 0 ], type );\n\t\t}\n\n\t\treturn data === undefined ?\n\t\t\tthis :\n\t\t\tthis.each( function() {\n\t\t\t\tvar queue = jQuery.queue( this, type, data );\n\n\t\t\t\t// Ensure a hooks for this queue\n\t\t\t\tjQuery._queueHooks( this, type );\n\n\t\t\t\tif ( type === \"fx\" && queue[ 0 ] !== \"inprogress\" ) {\n\t\t\t\t\tjQuery.dequeue( this, type );\n\t\t\t\t}\n\t\t\t} );\n\t},\n\tdequeue: function( type ) {\n\t\treturn this.each( function() {\n\t\t\tjQuery.dequeue( this, type );\n\t\t} );\n\t},\n\tclearQueue: function( type ) {\n\t\treturn this.queue( type || \"fx\", [] );\n\t},\n\n\t// Get a promise resolved when queues of a certain type\n\t// are emptied (fx is the type by default)\n\tpromise: function( type, obj ) {\n\t\tvar tmp,\n\t\t\tcount = 1,\n\t\t\tdefer = jQuery.Deferred(),\n\t\t\telements = this,\n\t\t\ti = this.length,\n\t\t\tresolve = function() {\n\t\t\t\tif ( !( --count ) ) {\n\t\t\t\t\tdefer.resolveWith( elements, [ elements ] );\n\t\t\t\t}\n\t\t\t};\n\n\t\tif ( typeof type !== \"string\" ) {\n\t\t\tobj = type;\n\t\t\ttype = undefined;\n\t\t}\n\t\ttype = type || \"fx\";\n\n\t\twhile ( i-- ) {\n\t\t\ttmp = dataPriv.get( elements[ i ], type + \"queueHooks\" );\n\t\t\tif ( tmp && tmp.empty ) {\n\t\t\t\tcount++;\n\t\t\t\ttmp.empty.add( resolve );\n\t\t\t}\n\t\t}\n\t\tresolve();\n\t\treturn defer.promise( obj );\n\t}\n} );\nvar pnum = ( /[+-]?(?:\\d*\\.|)\\d+(?:[eE][+-]?\\d+|)/ ).source;\n\nvar rcssNum = new RegExp( \"^(?:([+-])=|)(\" + pnum + \")([a-z%]*)$\", \"i\" );\n\n\nvar cssExpand = [ \"Top\", \"Right\", \"Bottom\", \"Left\" ];\n\nvar isHiddenWithinTree = function( elem, el ) {\n\n\t\t// isHiddenWithinTree might be called from jQuery#filter function;\n\t\t// in that case, element will be second argument\n\t\telem = el || elem;\n\n\t\t// Inline style trumps all\n\t\treturn elem.style.display === \"none\" ||\n\t\t\telem.style.display === \"\" &&\n\n\t\t\t// Otherwise, check computed style\n\t\t\t// Support: Firefox <=43 - 45\n\t\t\t// Disconnected elements can have computed display: none, so first confirm that elem is\n\t\t\t// in the document.\n\t\t\tjQuery.contains( elem.ownerDocument, elem ) &&\n\n\t\t\tjQuery.css( elem, \"display\" ) === \"none\";\n\t};\n\nvar swap = function( elem, options, callback, args ) {\n\tvar ret, name,\n\t\told = {};\n\n\t// Remember the old values, and insert the new ones\n\tfor ( name in options ) {\n\t\told[ name ] = elem.style[ name ];\n\t\telem.style[ name ] = options[ name ];\n\t}\n\n\tret = callback.apply( elem, args || [] );\n\n\t// Revert the old values\n\tfor ( name in options ) {\n\t\telem.style[ name ] = old[ name ];\n\t}\n\n\treturn ret;\n};\n\n\n\n\nfunction adjustCSS( elem, prop, valueParts, tween ) {\n\tvar adjusted, scale,\n\t\tmaxIterations = 20,\n\t\tcurrentValue = tween ?\n\t\t\tfunction() {\n\t\t\t\treturn tween.cur();\n\t\t\t} :\n\t\t\tfunction() {\n\t\t\t\treturn jQuery.css( elem, prop, \"\" );\n\t\t\t},\n\t\tinitial = currentValue(),\n\t\tunit = valueParts && valueParts[ 3 ] || ( jQuery.cssNumber[ prop ] ? \"\" : \"px\" ),\n\n\t\t// Starting value computation is required for potential unit mismatches\n\t\tinitialInUnit = ( jQuery.cssNumber[ prop ] || unit !== \"px\" && +initial ) &&\n\t\t\trcssNum.exec( jQuery.css( elem, prop ) );\n\n\tif ( initialInUnit && initialInUnit[ 3 ] !== unit ) {\n\n\t\t// Support: Firefox <=54\n\t\t// Halve the iteration target value to prevent interference from CSS upper bounds (gh-2144)\n\t\tinitial = initial / 2;\n\n\t\t// Trust units reported by jQuery.css\n\t\tunit = unit || initialInUnit[ 3 ];\n\n\t\t// Iteratively approximate from a nonzero starting point\n\t\tinitialInUnit = +initial || 1;\n\n\t\twhile ( maxIterations-- ) {\n\n\t\t\t// Evaluate and update our best guess (doubling guesses that zero out).\n\t\t\t// Finish if the scale equals or crosses 1 (making the old*new product non-positive).\n\t\t\tjQuery.style( elem, prop, initialInUnit + unit );\n\t\t\tif ( ( 1 - scale ) * ( 1 - ( scale = currentValue() / initial || 0.5 ) ) <= 0 ) {\n\t\t\t\tmaxIterations = 0;\n\t\t\t}\n\t\t\tinitialInUnit = initialInUnit / scale;\n\n\t\t}\n\n\t\tinitialInUnit = initialInUnit * 2;\n\t\tjQuery.style( elem, prop, initialInUnit + unit );\n\n\t\t// Make sure we update the tween properties later on\n\t\tvalueParts = valueParts || [];\n\t}\n\n\tif ( valueParts ) {\n\t\tinitialInUnit = +initialInUnit || +initial || 0;\n\n\t\t// Apply relative offset (+=/-=) if specified\n\t\tadjusted = valueParts[ 1 ] ?\n\t\t\tinitialInUnit + ( valueParts[ 1 ] + 1 ) * valueParts[ 2 ] :\n\t\t\t+valueParts[ 2 ];\n\t\tif ( tween ) {\n\t\t\ttween.unit = unit;\n\t\t\ttween.start = initialInUnit;\n\t\t\ttween.end = adjusted;\n\t\t}\n\t}\n\treturn adjusted;\n}\n\n\nvar defaultDisplayMap = {};\n\nfunction getDefaultDisplay( elem ) {\n\tvar temp,\n\t\tdoc = elem.ownerDocument,\n\t\tnodeName = elem.nodeName,\n\t\tdisplay = defaultDisplayMap[ nodeName ];\n\n\tif ( display ) {\n\t\treturn display;\n\t}\n\n\ttemp = doc.body.appendChild( doc.createElement( nodeName ) );\n\tdisplay = jQuery.css( temp, \"display\" );\n\n\ttemp.parentNode.removeChild( temp );\n\n\tif ( display === \"none\" ) {\n\t\tdisplay = \"block\";\n\t}\n\tdefaultDisplayMap[ nodeName ] = display;\n\n\treturn display;\n}\n\nfunction showHide( elements, show ) {\n\tvar display, elem,\n\t\tvalues = [],\n\t\tindex = 0,\n\t\tlength = elements.length;\n\n\t// Determine new display value for elements that need to change\n\tfor ( ; index < length; index++ ) {\n\t\telem = elements[ index ];\n\t\tif ( !elem.style ) {\n\t\t\tcontinue;\n\t\t}\n\n\t\tdisplay = elem.style.display;\n\t\tif ( show ) {\n\n\t\t\t// Since we force visibility upon cascade-hidden elements, an immediate (and slow)\n\t\t\t// check is required in this first loop unless we have a nonempty display value (either\n\t\t\t// inline or about-to-be-restored)\n\t\t\tif ( display === \"none\" ) {\n\t\t\t\tvalues[ index ] = dataPriv.get( elem, \"display\" ) || null;\n\t\t\t\tif ( !values[ index ] ) {\n\t\t\t\t\telem.style.display = \"\";\n\t\t\t\t}\n\t\t\t}\n\t\t\tif ( elem.style.display === \"\" && isHiddenWithinTree( elem ) ) {\n\t\t\t\tvalues[ index ] = getDefaultDisplay( elem );\n\t\t\t}\n\t\t} else {\n\t\t\tif ( display !== \"none\" ) {\n\t\t\t\tvalues[ index ] = \"none\";\n\n\t\t\t\t// Remember what we're overwriting\n\t\t\t\tdataPriv.set( elem, \"display\", display );\n\t\t\t}\n\t\t}\n\t}\n\n\t// Set the display of the elements in a second loop to avoid constant reflow\n\tfor ( index = 0; index < length; index++ ) {\n\t\tif ( values[ index ] != null ) {\n\t\t\telements[ index ].style.display = values[ index ];\n\t\t}\n\t}\n\n\treturn elements;\n}\n\njQuery.fn.extend( {\n\tshow: function() {\n\t\treturn showHide( this, true );\n\t},\n\thide: function() {\n\t\treturn showHide( this );\n\t},\n\ttoggle: function( state ) {\n\t\tif ( typeof state === \"boolean\" ) {\n\t\t\treturn state ? this.show() : this.hide();\n\t\t}\n\n\t\treturn this.each( function() {\n\t\t\tif ( isHiddenWithinTree( this ) ) {\n\t\t\t\tjQuery( this ).show();\n\t\t\t} else {\n\t\t\t\tjQuery( this ).hide();\n\t\t\t}\n\t\t} );\n\t}\n} );\nvar rcheckableType = ( /^(?:checkbox|radio)$/i );\n\nvar rtagName = ( /<([a-z][^\\/\\0>\\x20\\t\\r\\n\\f]+)/i );\n\nvar rscriptType = ( /^$|^module$|\\/(?:java|ecma)script/i );\n\n\n\n// We have to close these tags to support XHTML (#13200)\nvar wrapMap = {\n\n\t// Support: IE <=9 only\n\toption: [ 1, \"<select multiple='multiple'>\", \"</select>\" ],\n\n\t// XHTML parsers do not magically insert elements in the\n\t// same way that tag soup parsers do. So we cannot shorten\n\t// this by omitting <tbody> or other required elements.\n\tthead: [ 1, \"<table>\", \"</table>\" ],\n\tcol: [ 2, \"<table><colgroup>\", \"</colgroup></table>\" ],\n\ttr: [ 2, \"<table><tbody>\", \"</tbody></table>\" ],\n\ttd: [ 3, \"<table><tbody><tr>\", \"</tr></tbody></table>\" ],\n\n\t_default: [ 0, \"\", \"\" ]\n};\n\n// Support: IE <=9 only\nwrapMap.optgroup = wrapMap.option;\n\nwrapMap.tbody = wrapMap.tfoot = wrapMap.colgroup = wrapMap.caption = wrapMap.thead;\nwrapMap.th = wrapMap.td;\n\n\nfunction getAll( context, tag ) {\n\n\t// Support: IE <=9 - 11 only\n\t// Use typeof to avoid zero-argument method invocation on host objects (#15151)\n\tvar ret;\n\n\tif ( typeof context.getElementsByTagName !== \"undefined\" ) {\n\t\tret = context.getElementsByTagName( tag || \"*\" );\n\n\t} else if ( typeof context.querySelectorAll !== \"undefined\" ) {\n\t\tret = context.querySelectorAll( tag || \"*\" );\n\n\t} else {\n\t\tret = [];\n\t}\n\n\tif ( tag === undefined || tag && nodeName( context, tag ) ) {\n\t\treturn jQuery.merge( [ context ], ret );\n\t}\n\n\treturn ret;\n}\n\n\n// Mark scripts as having already been evaluated\nfunction setGlobalEval( elems, refElements ) {\n\tvar i = 0,\n\t\tl = elems.length;\n\n\tfor ( ; i < l; i++ ) {\n\t\tdataPriv.set(\n\t\t\telems[ i ],\n\t\t\t\"globalEval\",\n\t\t\t!refElements || dataPriv.get( refElements[ i ], \"globalEval\" )\n\t\t);\n\t}\n}\n\n\nvar rhtml = /<|&#?\\w+;/;\n\nfunction buildFragment( elems, context, scripts, selection, ignored ) {\n\tvar elem, tmp, tag, wrap, contains, j,\n\t\tfragment = context.createDocumentFragment(),\n\t\tnodes = [],\n\t\ti = 0,\n\t\tl = elems.length;\n\n\tfor ( ; i < l; i++ ) {\n\t\telem = elems[ i ];\n\n\t\tif ( elem || elem === 0 ) {\n\n\t\t\t// Add nodes directly\n\t\t\tif ( toType( elem ) === \"object\" ) {\n\n\t\t\t\t// Support: Android <=4.0 only, PhantomJS 1 only\n\t\t\t\t// push.apply(_, arraylike) throws on ancient WebKit\n\t\t\t\tjQuery.merge( nodes, elem.nodeType ? [ elem ] : elem );\n\n\t\t\t// Convert non-html into a text node\n\t\t\t} else if ( !rhtml.test( elem ) ) {\n\t\t\t\tnodes.push( context.createTextNode( elem ) );\n\n\t\t\t// Convert html into DOM nodes\n\t\t\t} else {\n\t\t\t\ttmp = tmp || fragment.appendChild( context.createElement( \"div\" ) );\n\n\t\t\t\t// Deserialize a standard representation\n\t\t\t\ttag = ( rtagName.exec( elem ) || [ \"\", \"\" ] )[ 1 ].toLowerCase();\n\t\t\t\twrap = wrapMap[ tag ] || wrapMap._default;\n\t\t\t\ttmp.innerHTML = wrap[ 1 ] + jQuery.htmlPrefilter( elem ) + wrap[ 2 ];\n\n\t\t\t\t// Descend through wrappers to the right content\n\t\t\t\tj = wrap[ 0 ];\n\t\t\t\twhile ( j-- ) {\n\t\t\t\t\ttmp = tmp.lastChild;\n\t\t\t\t}\n\n\t\t\t\t// Support: Android <=4.0 only, PhantomJS 1 only\n\t\t\t\t// push.apply(_, arraylike) throws on ancient WebKit\n\t\t\t\tjQuery.merge( nodes, tmp.childNodes );\n\n\t\t\t\t// Remember the top-level container\n\t\t\t\ttmp = fragment.firstChild;\n\n\t\t\t\t// Ensure the created nodes are orphaned (#12392)\n\t\t\t\ttmp.textContent = \"\";\n\t\t\t}\n\t\t}\n\t}\n\n\t// Remove wrapper from fragment\n\tfragment.textContent = \"\";\n\n\ti = 0;\n\twhile ( ( elem = nodes[ i++ ] ) ) {\n\n\t\t// Skip elements already in the context collection (trac-4087)\n\t\tif ( selection && jQuery.inArray( elem, selection ) > -1 ) {\n\t\t\tif ( ignored ) {\n\t\t\t\tignored.push( elem );\n\t\t\t}\n\t\t\tcontinue;\n\t\t}\n\n\t\tcontains = jQuery.contains( elem.ownerDocument, elem );\n\n\t\t// Append to fragment\n\t\ttmp = getAll( fragment.appendChild( elem ), \"script\" );\n\n\t\t// Preserve script evaluation history\n\t\tif ( contains ) {\n\t\t\tsetGlobalEval( tmp );\n\t\t}\n\n\t\t// Capture executables\n\t\tif ( scripts ) {\n\t\t\tj = 0;\n\t\t\twhile ( ( elem = tmp[ j++ ] ) ) {\n\t\t\t\tif ( rscriptType.test( elem.type || \"\" ) ) {\n\t\t\t\t\tscripts.push( elem );\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\treturn fragment;\n}\n\n\n( function() {\n\tvar fragment = document.createDocumentFragment(),\n\t\tdiv = fragment.appendChild( document.createElement( \"div\" ) ),\n\t\tinput = document.createElement( \"input\" );\n\n\t// Support: Android 4.0 - 4.3 only\n\t// Check state lost if the name is set (#11217)\n\t// Support: Windows Web Apps (WWA)\n\t// `name` and `type` must use .setAttribute for WWA (#14901)\n\tinput.setAttribute( \"type\", \"radio\" );\n\tinput.setAttribute( \"checked\", \"checked\" );\n\tinput.setAttribute( \"name\", \"t\" );\n\n\tdiv.appendChild( input );\n\n\t// Support: Android <=4.1 only\n\t// Older WebKit doesn't clone checked state correctly in fragments\n\tsupport.checkClone = div.cloneNode( true ).cloneNode( true ).lastChild.checked;\n\n\t// Support: IE <=11 only\n\t// Make sure textarea (and checkbox) defaultValue is properly cloned\n\tdiv.innerHTML = \"<textarea>x</textarea>\";\n\tsupport.noCloneChecked = !!div.cloneNode( true ).lastChild.defaultValue;\n} )();\nvar documentElement = document.documentElement;\n\n\n\nvar\n\trkeyEvent = /^key/,\n\trmouseEvent = /^(?:mouse|pointer|contextmenu|drag|drop)|click/,\n\trtypenamespace = /^([^.]*)(?:\\.(.+)|)/;\n\nfunction returnTrue() {\n\treturn true;\n}\n\nfunction returnFalse() {\n\treturn false;\n}\n\n// Support: IE <=9 only\n// See #13393 for more info\nfunction safeActiveElement() {\n\ttry {\n\t\treturn document.activeElement;\n\t} catch ( err ) { }\n}\n\nfunction on( elem, types, selector, data, fn, one ) {\n\tvar origFn, type;\n\n\t// Types can be a map of types/handlers\n\tif ( typeof types === \"object\" ) {\n\n\t\t// ( types-Object, selector, data )\n\t\tif ( typeof selector !== \"string\" ) {\n\n\t\t\t// ( types-Object, data )\n\t\t\tdata = data || selector;\n\t\t\tselector = undefined;\n\t\t}\n\t\tfor ( type in types ) {\n\t\t\ton( elem, type, selector, data, types[ type ], one );\n\t\t}\n\t\treturn elem;\n\t}\n\n\tif ( data == null && fn == null ) {\n\n\t\t// ( types, fn )\n\t\tfn = selector;\n\t\tdata = selector = undefined;\n\t} else if ( fn == null ) {\n\t\tif ( typeof selector === \"string\" ) {\n\n\t\t\t// ( types, selector, fn )\n\t\t\tfn = data;\n\t\t\tdata = undefined;\n\t\t} else {\n\n\t\t\t// ( types, data, fn )\n\t\t\tfn = data;\n\t\t\tdata = selector;\n\t\t\tselector = undefined;\n\t\t}\n\t}\n\tif ( fn === false ) {\n\t\tfn = returnFalse;\n\t} else if ( !fn ) {\n\t\treturn elem;\n\t}\n\n\tif ( one === 1 ) {\n\t\torigFn = fn;\n\t\tfn = function( event ) {\n\n\t\t\t// Can use an empty set, since event contains the info\n\t\t\tjQuery().off( event );\n\t\t\treturn origFn.apply( this, arguments );\n\t\t};\n\n\t\t// Use same guid so caller can remove using origFn\n\t\tfn.guid = origFn.guid || ( origFn.guid = jQuery.guid++ );\n\t}\n\treturn elem.each( function() {\n\t\tjQuery.event.add( this, types, fn, data, selector );\n\t} );\n}\n\n/*\n * Helper functions for managing events -- not part of the public interface.\n * Props to Dean Edwards' addEvent library for many of the ideas.\n */\njQuery.event = {\n\n\tglobal: {},\n\n\tadd: function( elem, types, handler, data, selector ) {\n\n\t\tvar handleObjIn, eventHandle, tmp,\n\t\t\tevents, t, handleObj,\n\t\t\tspecial, handlers, type, namespaces, origType,\n\t\t\telemData = dataPriv.get( elem );\n\n\t\t// Don't attach events to noData or text/comment nodes (but allow plain objects)\n\t\tif ( !elemData ) {\n\t\t\treturn;\n\t\t}\n\n\t\t// Caller can pass in an object of custom data in lieu of the handler\n\t\tif ( handler.handler ) {\n\t\t\thandleObjIn = handler;\n\t\t\thandler = handleObjIn.handler;\n\t\t\tselector = handleObjIn.selector;\n\t\t}\n\n\t\t// Ensure that invalid selectors throw exceptions at attach time\n\t\t// Evaluate against documentElement in case elem is a non-element node (e.g., document)\n\t\tif ( selector ) {\n\t\t\tjQuery.find.matchesSelector( documentElement, selector );\n\t\t}\n\n\t\t// Make sure that the handler has a unique ID, used to find/remove it later\n\t\tif ( !handler.guid ) {\n\t\t\thandler.guid = jQuery.guid++;\n\t\t}\n\n\t\t// Init the element's event structure and main handler, if this is the first\n\t\tif ( !( events = elemData.events ) ) {\n\t\t\tevents = elemData.events = {};\n\t\t}\n\t\tif ( !( eventHandle = elemData.handle ) ) {\n\t\t\teventHandle = elemData.handle = function( e ) {\n\n\t\t\t\t// Discard the second event of a jQuery.event.trigger() and\n\t\t\t\t// when an event is called after a page has unloaded\n\t\t\t\treturn typeof jQuery !== \"undefined\" && jQuery.event.triggered !== e.type ?\n\t\t\t\t\tjQuery.event.dispatch.apply( elem, arguments ) : undefined;\n\t\t\t};\n\t\t}\n\n\t\t// Handle multiple events separated by a space\n\t\ttypes = ( types || \"\" ).match( rnothtmlwhite ) || [ \"\" ];\n\t\tt = types.length;\n\t\twhile ( t-- ) {\n\t\t\ttmp = rtypenamespace.exec( types[ t ] ) || [];\n\t\t\ttype = origType = tmp[ 1 ];\n\t\t\tnamespaces = ( tmp[ 2 ] || \"\" ).split( \".\" ).sort();\n\n\t\t\t// There *must* be a type, no attaching namespace-only handlers\n\t\t\tif ( !type ) {\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\t// If event changes its type, use the special event handlers for the changed type\n\t\t\tspecial = jQuery.event.special[ type ] || {};\n\n\t\t\t// If selector defined, determine special event api type, otherwise given type\n\t\t\ttype = ( selector ? special.delegateType : special.bindType ) || type;\n\n\t\t\t// Update special based on newly reset type\n\t\t\tspecial = jQuery.event.special[ type ] || {};\n\n\t\t\t// handleObj is passed to all event handlers\n\t\t\thandleObj = jQuery.extend( {\n\t\t\t\ttype: type,\n\t\t\t\torigType: origType,\n\t\t\t\tdata: data,\n\t\t\t\thandler: handler,\n\t\t\t\tguid: handler.guid,\n\t\t\t\tselector: selector,\n\t\t\t\tneedsContext: selector && jQuery.expr.match.needsContext.test( selector ),\n\t\t\t\tnamespace: namespaces.join( \".\" )\n\t\t\t}, handleObjIn );\n\n\t\t\t// Init the event handler queue if we're the first\n\t\t\tif ( !( handlers = events[ type ] ) ) {\n\t\t\t\thandlers = events[ type ] = [];\n\t\t\t\thandlers.delegateCount = 0;\n\n\t\t\t\t// Only use addEventListener if the special events handler returns false\n\t\t\t\tif ( !special.setup ||\n\t\t\t\t\tspecial.setup.call( elem, data, namespaces, eventHandle ) === false ) {\n\n\t\t\t\t\tif ( elem.addEventListener ) {\n\t\t\t\t\t\telem.addEventListener( type, eventHandle );\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif ( special.add ) {\n\t\t\t\tspecial.add.call( elem, handleObj );\n\n\t\t\t\tif ( !handleObj.handler.guid ) {\n\t\t\t\t\thandleObj.handler.guid = handler.guid;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// Add to the element's handler list, delegates in front\n\t\t\tif ( selector ) {\n\t\t\t\thandlers.splice( handlers.delegateCount++, 0, handleObj );\n\t\t\t} else {\n\t\t\t\thandlers.push( handleObj );\n\t\t\t}\n\n\t\t\t// Keep track of which events have ever been used, for event optimization\n\t\t\tjQuery.event.global[ type ] = true;\n\t\t}\n\n\t},\n\n\t// Detach an event or set of events from an element\n\tremove: function( elem, types, handler, selector, mappedTypes ) {\n\n\t\tvar j, origCount, tmp,\n\t\t\tevents, t, handleObj,\n\t\t\tspecial, handlers, type, namespaces, origType,\n\t\t\telemData = dataPriv.hasData( elem ) && dataPriv.get( elem );\n\n\t\tif ( !elemData || !( events = elemData.events ) ) {\n\t\t\treturn;\n\t\t}\n\n\t\t// Once for each type.namespace in types; type may be omitted\n\t\ttypes = ( types || \"\" ).match( rnothtmlwhite ) || [ \"\" ];\n\t\tt = types.length;\n\t\twhile ( t-- ) {\n\t\t\ttmp = rtypenamespace.exec( types[ t ] ) || [];\n\t\t\ttype = origType = tmp[ 1 ];\n\t\t\tnamespaces = ( tmp[ 2 ] || \"\" ).split( \".\" ).sort();\n\n\t\t\t// Unbind all events (on this namespace, if provided) for the element\n\t\t\tif ( !type ) {\n\t\t\t\tfor ( type in events ) {\n\t\t\t\t\tjQuery.event.remove( elem, type + types[ t ], handler, selector, true );\n\t\t\t\t}\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\tspecial = jQuery.event.special[ type ] || {};\n\t\t\ttype = ( selector ? special.delegateType : special.bindType ) || type;\n\t\t\thandlers = events[ type ] || [];\n\t\t\ttmp = tmp[ 2 ] &&\n\t\t\t\tnew RegExp( \"(^|\\\\.)\" + namespaces.join( \"\\\\.(?:.*\\\\.|)\" ) + \"(\\\\.|$)\" );\n\n\t\t\t// Remove matching events\n\t\t\torigCount = j = handlers.length;\n\t\t\twhile ( j-- ) {\n\t\t\t\thandleObj = handlers[ j ];\n\n\t\t\t\tif ( ( mappedTypes || origType === handleObj.origType ) &&\n\t\t\t\t\t( !handler || handler.guid === handleObj.guid ) &&\n\t\t\t\t\t( !tmp || tmp.test( handleObj.namespace ) ) &&\n\t\t\t\t\t( !selector || selector === handleObj.selector ||\n\t\t\t\t\t\tselector === \"**\" && handleObj.selector ) ) {\n\t\t\t\t\thandlers.splice( j, 1 );\n\n\t\t\t\t\tif ( handleObj.selector ) {\n\t\t\t\t\t\thandlers.delegateCount--;\n\t\t\t\t\t}\n\t\t\t\t\tif ( special.remove ) {\n\t\t\t\t\t\tspecial.remove.call( elem, handleObj );\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// Remove generic event handler if we removed something and no more handlers exist\n\t\t\t// (avoids potential for endless recursion during removal of special event handlers)\n\t\t\tif ( origCount && !handlers.length ) {\n\t\t\t\tif ( !special.teardown ||\n\t\t\t\t\tspecial.teardown.call( elem, namespaces, elemData.handle ) === false ) {\n\n\t\t\t\t\tjQuery.removeEvent( elem, type, elemData.handle );\n\t\t\t\t}\n\n\t\t\t\tdelete events[ type ];\n\t\t\t}\n\t\t}\n\n\t\t// Remove data and the expando if it's no longer used\n\t\tif ( jQuery.isEmptyObject( events ) ) {\n\t\t\tdataPriv.remove( elem, \"handle events\" );\n\t\t}\n\t},\n\n\tdispatch: function( nativeEvent ) {\n\n\t\t// Make a writable jQuery.Event from the native event object\n\t\tvar event = jQuery.event.fix( nativeEvent );\n\n\t\tvar i, j, ret, matched, handleObj, handlerQueue,\n\t\t\targs = new Array( arguments.length ),\n\t\t\thandlers = ( dataPriv.get( this, \"events\" ) || {} )[ event.type ] || [],\n\t\t\tspecial = jQuery.event.special[ event.type ] || {};\n\n\t\t// Use the fix-ed jQuery.Event rather than the (read-only) native event\n\t\targs[ 0 ] = event;\n\n\t\tfor ( i = 1; i < arguments.length; i++ ) {\n\t\t\targs[ i ] = arguments[ i ];\n\t\t}\n\n\t\tevent.delegateTarget = this;\n\n\t\t// Call the preDispatch hook for the mapped type, and let it bail if desired\n\t\tif ( special.preDispatch && special.preDispatch.call( this, event ) === false ) {\n\t\t\treturn;\n\t\t}\n\n\t\t// Determine handlers\n\t\thandlerQueue = jQuery.event.handlers.call( this, event, handlers );\n\n\t\t// Run delegates first; they may want to stop propagation beneath us\n\t\ti = 0;\n\t\twhile ( ( matched = handlerQueue[ i++ ] ) && !event.isPropagationStopped() ) {\n\t\t\tevent.currentTarget = matched.elem;\n\n\t\t\tj = 0;\n\t\t\twhile ( ( handleObj = matched.handlers[ j++ ] ) &&\n\t\t\t\t!event.isImmediatePropagationStopped() ) {\n\n\t\t\t\t// Triggered event must either 1) have no namespace, or 2) have namespace(s)\n\t\t\t\t// a subset or equal to those in the bound event (both can have no namespace).\n\t\t\t\tif ( !event.rnamespace || event.rnamespace.test( handleObj.namespace ) ) {\n\n\t\t\t\t\tevent.handleObj = handleObj;\n\t\t\t\t\tevent.data = handleObj.data;\n\n\t\t\t\t\tret = ( ( jQuery.event.special[ handleObj.origType ] || {} ).handle ||\n\t\t\t\t\t\thandleObj.handler ).apply( matched.elem, args );\n\n\t\t\t\t\tif ( ret !== undefined ) {\n\t\t\t\t\t\tif ( ( event.result = ret ) === false ) {\n\t\t\t\t\t\t\tevent.preventDefault();\n\t\t\t\t\t\t\tevent.stopPropagation();\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\t// Call the postDispatch hook for the mapped type\n\t\tif ( special.postDispatch ) {\n\t\t\tspecial.postDispatch.call( this, event );\n\t\t}\n\n\t\treturn event.result;\n\t},\n\n\thandlers: function( event, handlers ) {\n\t\tvar i, handleObj, sel, matchedHandlers, matchedSelectors,\n\t\t\thandlerQueue = [],\n\t\t\tdelegateCount = handlers.delegateCount,\n\t\t\tcur = event.target;\n\n\t\t// Find delegate handlers\n\t\tif ( delegateCount &&\n\n\t\t\t// Support: IE <=9\n\t\t\t// Black-hole SVG <use> instance trees (trac-13180)\n\t\t\tcur.nodeType &&\n\n\t\t\t// Support: Firefox <=42\n\t\t\t// Suppress spec-violating clicks indicating a non-primary pointer button (trac-3861)\n\t\t\t// https://www.w3.org/TR/DOM-Level-3-Events/#event-type-click\n\t\t\t// Support: IE 11 only\n\t\t\t// ...but not arrow key \"clicks\" of radio inputs, which can have `button` -1 (gh-2343)\n\t\t\t!( event.type === \"click\" && event.button >= 1 ) ) {\n\n\t\t\tfor ( ; cur !== this; cur = cur.parentNode || this ) {\n\n\t\t\t\t// Don't check non-elements (#13208)\n\t\t\t\t// Don't process clicks on disabled elements (#6911, #8165, #11382, #11764)\n\t\t\t\tif ( cur.nodeType === 1 && !( event.type === \"click\" && cur.disabled === true ) ) {\n\t\t\t\t\tmatchedHandlers = [];\n\t\t\t\t\tmatchedSelectors = {};\n\t\t\t\t\tfor ( i = 0; i < delegateCount; i++ ) {\n\t\t\t\t\t\thandleObj = handlers[ i ];\n\n\t\t\t\t\t\t// Don't conflict with Object.prototype properties (#13203)\n\t\t\t\t\t\tsel = handleObj.selector + \" \";\n\n\t\t\t\t\t\tif ( matchedSelectors[ sel ] === undefined ) {\n\t\t\t\t\t\t\tmatchedSelectors[ sel ] = handleObj.needsContext ?\n\t\t\t\t\t\t\t\tjQuery( sel, this ).index( cur ) > -1 :\n\t\t\t\t\t\t\t\tjQuery.find( sel, this, null, [ cur ] ).length;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif ( matchedSelectors[ sel ] ) {\n\t\t\t\t\t\t\tmatchedHandlers.push( handleObj );\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tif ( matchedHandlers.length ) {\n\t\t\t\t\t\thandlerQueue.push( { elem: cur, handlers: matchedHandlers } );\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\t// Add the remaining (directly-bound) handlers\n\t\tcur = this;\n\t\tif ( delegateCount < handlers.length ) {\n\t\t\thandlerQueue.push( { elem: cur, handlers: handlers.slice( delegateCount ) } );\n\t\t}\n\n\t\treturn handlerQueue;\n\t},\n\n\taddProp: function( name, hook ) {\n\t\tObject.defineProperty( jQuery.Event.prototype, name, {\n\t\t\tenumerable: true,\n\t\t\tconfigurable: true,\n\n\t\t\tget: isFunction( hook ) ?\n\t\t\t\tfunction() {\n\t\t\t\t\tif ( this.originalEvent ) {\n\t\t\t\t\t\t\treturn hook( this.originalEvent );\n\t\t\t\t\t}\n\t\t\t\t} :\n\t\t\t\tfunction() {\n\t\t\t\t\tif ( this.originalEvent ) {\n\t\t\t\t\t\t\treturn this.originalEvent[ name ];\n\t\t\t\t\t}\n\t\t\t\t},\n\n\t\t\tset: function( value ) {\n\t\t\t\tObject.defineProperty( this, name, {\n\t\t\t\t\tenumerable: true,\n\t\t\t\t\tconfigurable: true,\n\t\t\t\t\twritable: true,\n\t\t\t\t\tvalue: value\n\t\t\t\t} );\n\t\t\t}\n\t\t} );\n\t},\n\n\tfix: function( originalEvent ) {\n\t\treturn originalEvent[ jQuery.expando ] ?\n\t\t\toriginalEvent :\n\t\t\tnew jQuery.Event( originalEvent );\n\t},\n\n\tspecial: {\n\t\tload: {\n\n\t\t\t// Prevent triggered image.load events from bubbling to window.load\n\t\t\tnoBubble: true\n\t\t},\n\t\tfocus: {\n\n\t\t\t// Fire native event if possible so blur/focus sequence is correct\n\t\t\ttrigger: function() {\n\t\t\t\tif ( this !== safeActiveElement() && this.focus ) {\n\t\t\t\t\tthis.focus();\n\t\t\t\t\treturn false;\n\t\t\t\t}\n\t\t\t},\n\t\t\tdelegateType: \"focusin\"\n\t\t},\n\t\tblur: {\n\t\t\ttrigger: function() {\n\t\t\t\tif ( this === safeActiveElement() && this.blur ) {\n\t\t\t\t\tthis.blur();\n\t\t\t\t\treturn false;\n\t\t\t\t}\n\t\t\t},\n\t\t\tdelegateType: \"focusout\"\n\t\t},\n\t\tclick: {\n\n\t\t\t// For checkbox, fire native event so checked state will be right\n\t\t\ttrigger: function() {\n\t\t\t\tif ( this.type === \"checkbox\" && this.click && nodeName( this, \"input\" ) ) {\n\t\t\t\t\tthis.click();\n\t\t\t\t\treturn false;\n\t\t\t\t}\n\t\t\t},\n\n\t\t\t// For cross-browser consistency, don't fire native .click() on links\n\t\t\t_default: function( event ) {\n\t\t\t\treturn nodeName( event.target, \"a\" );\n\t\t\t}\n\t\t},\n\n\t\tbeforeunload: {\n\t\t\tpostDispatch: function( event ) {\n\n\t\t\t\t// Support: Firefox 20+\n\t\t\t\t// Firefox doesn't alert if the returnValue field is not set.\n\t\t\t\tif ( event.result !== undefined && event.originalEvent ) {\n\t\t\t\t\tevent.originalEvent.returnValue = event.result;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n};\n\njQuery.removeEvent = function( elem, type, handle ) {\n\n\t// This \"if\" is needed for plain objects\n\tif ( elem.removeEventListener ) {\n\t\telem.removeEventListener( type, handle );\n\t}\n};\n\njQuery.Event = function( src, props ) {\n\n\t// Allow instantiation without the 'new' keyword\n\tif ( !( this instanceof jQuery.Event ) ) {\n\t\treturn new jQuery.Event( src, props );\n\t}\n\n\t// Event object\n\tif ( src && src.type ) {\n\t\tthis.originalEvent = src;\n\t\tthis.type = src.type;\n\n\t\t// Events bubbling up the document may have been marked as prevented\n\t\t// by a handler lower down the tree; reflect the correct value.\n\t\tthis.isDefaultPrevented = src.defaultPrevented ||\n\t\t\t\tsrc.defaultPrevented === undefined &&\n\n\t\t\t\t// Support: Android <=2.3 only\n\t\t\t\tsrc.returnValue === false ?\n\t\t\treturnTrue :\n\t\t\treturnFalse;\n\n\t\t// Create target properties\n\t\t// Support: Safari <=6 - 7 only\n\t\t// Target should not be a text node (#504, #13143)\n\t\tthis.target = ( src.target && src.target.nodeType === 3 ) ?\n\t\t\tsrc.target.parentNode :\n\t\t\tsrc.target;\n\n\t\tthis.currentTarget = src.currentTarget;\n\t\tthis.relatedTarget = src.relatedTarget;\n\n\t// Event type\n\t} else {\n\t\tthis.type = src;\n\t}\n\n\t// Put explicitly provided properties onto the event object\n\tif ( props ) {\n\t\tjQuery.extend( this, props );\n\t}\n\n\t// Create a timestamp if incoming event doesn't have one\n\tthis.timeStamp = src && src.timeStamp || Date.now();\n\n\t// Mark it as fixed\n\tthis[ jQuery.expando ] = true;\n};\n\n// jQuery.Event is based on DOM3 Events as specified by the ECMAScript Language Binding\n// https://www.w3.org/TR/2003/WD-DOM-Level-3-Events-20030331/ecma-script-binding.html\njQuery.Event.prototype = {\n\tconstructor: jQuery.Event,\n\tisDefaultPrevented: returnFalse,\n\tisPropagationStopped: returnFalse,\n\tisImmediatePropagationStopped: returnFalse,\n\tisSimulated: false,\n\n\tpreventDefault: function() {\n\t\tvar e = this.originalEvent;\n\n\t\tthis.isDefaultPrevented = returnTrue;\n\n\t\tif ( e && !this.isSimulated ) {\n\t\t\te.preventDefault();\n\t\t}\n\t},\n\tstopPropagation: function() {\n\t\tvar e = this.originalEvent;\n\n\t\tthis.isPropagationStopped = returnTrue;\n\n\t\tif ( e && !this.isSimulated ) {\n\t\t\te.stopPropagation();\n\t\t}\n\t},\n\tstopImmediatePropagation: function() {\n\t\tvar e = this.originalEvent;\n\n\t\tthis.isImmediatePropagationStopped = returnTrue;\n\n\t\tif ( e && !this.isSimulated ) {\n\t\t\te.stopImmediatePropagation();\n\t\t}\n\n\t\tthis.stopPropagation();\n\t}\n};\n\n// Includes all common event props including KeyEvent and MouseEvent specific props\njQuery.each( {\n\taltKey: true,\n\tbubbles: true,\n\tcancelable: true,\n\tchangedTouches: true,\n\tctrlKey: true,\n\tdetail: true,\n\teventPhase: true,\n\tmetaKey: true,\n\tpageX: true,\n\tpageY: true,\n\tshiftKey: true,\n\tview: true,\n\t\"char\": true,\n\tcharCode: true,\n\tkey: true,\n\tkeyCode: true,\n\tbutton: true,\n\tbuttons: true,\n\tclientX: true,\n\tclientY: true,\n\toffsetX: true,\n\toffsetY: true,\n\tpointerId: true,\n\tpointerType: true,\n\tscreenX: true,\n\tscreenY: true,\n\ttargetTouches: true,\n\ttoElement: true,\n\ttouches: true,\n\n\twhich: function( event ) {\n\t\tvar button = event.button;\n\n\t\t// Add which for key events\n\t\tif ( event.which == null && rkeyEvent.test( event.type ) ) {\n\t\t\treturn event.charCode != null ? event.charCode : event.keyCode;\n\t\t}\n\n\t\t// Add which for click: 1 === left; 2 === middle; 3 === right\n\t\tif ( !event.which && button !== undefined && rmouseEvent.test( event.type ) ) {\n\t\t\tif ( button & 1 ) {\n\t\t\t\treturn 1;\n\t\t\t}\n\n\t\t\tif ( button & 2 ) {\n\t\t\t\treturn 3;\n\t\t\t}\n\n\t\t\tif ( button & 4 ) {\n\t\t\t\treturn 2;\n\t\t\t}\n\n\t\t\treturn 0;\n\t\t}\n\n\t\treturn event.which;\n\t}\n}, jQuery.event.addProp );\n\n// Create mouseenter/leave events using mouseover/out and event-time checks\n// so that event delegation works in jQuery.\n// Do the same for pointerenter/pointerleave and pointerover/pointerout\n//\n// Support: Safari 7 only\n// Safari sends mouseenter too often; see:\n// https://bugs.chromium.org/p/chromium/issues/detail?id=470258\n// for the description of the bug (it existed in older Chrome versions as well).\njQuery.each( {\n\tmouseenter: \"mouseover\",\n\tmouseleave: \"mouseout\",\n\tpointerenter: \"pointerover\",\n\tpointerleave: \"pointerout\"\n}, function( orig, fix ) {\n\tjQuery.event.special[ orig ] = {\n\t\tdelegateType: fix,\n\t\tbindType: fix,\n\n\t\thandle: function( event ) {\n\t\t\tvar ret,\n\t\t\t\ttarget = this,\n\t\t\t\trelated = event.relatedTarget,\n\t\t\t\thandleObj = event.handleObj;\n\n\t\t\t// For mouseenter/leave call the handler if related is outside the target.\n\t\t\t// NB: No relatedTarget if the mouse left/entered the browser window\n\t\t\tif ( !related || ( related !== target && !jQuery.contains( target, related ) ) ) {\n\t\t\t\tevent.type = handleObj.origType;\n\t\t\t\tret = handleObj.handler.apply( this, arguments );\n\t\t\t\tevent.type = fix;\n\t\t\t}\n\t\t\treturn ret;\n\t\t}\n\t};\n} );\n\njQuery.fn.extend( {\n\n\ton: function( types, selector, data, fn ) {\n\t\treturn on( this, types, selector, data, fn );\n\t},\n\tone: function( types, selector, data, fn ) {\n\t\treturn on( this, types, selector, data, fn, 1 );\n\t},\n\toff: function( types, selector, fn ) {\n\t\tvar handleObj, type;\n\t\tif ( types && types.preventDefault && types.handleObj ) {\n\n\t\t\t// ( event )  dispatched jQuery.Event\n\t\t\thandleObj = types.handleObj;\n\t\t\tjQuery( types.delegateTarget ).off(\n\t\t\t\thandleObj.namespace ?\n\t\t\t\t\thandleObj.origType + \".\" + handleObj.namespace :\n\t\t\t\t\thandleObj.origType,\n\t\t\t\thandleObj.selector,\n\t\t\t\thandleObj.handler\n\t\t\t);\n\t\t\treturn this;\n\t\t}\n\t\tif ( typeof types === \"object\" ) {\n\n\t\t\t// ( types-object [, selector] )\n\t\t\tfor ( type in types ) {\n\t\t\t\tthis.off( type, selector, types[ type ] );\n\t\t\t}\n\t\t\treturn this;\n\t\t}\n\t\tif ( selector === false || typeof selector === \"function\" ) {\n\n\t\t\t// ( types [, fn] )\n\t\t\tfn = selector;\n\t\t\tselector = undefined;\n\t\t}\n\t\tif ( fn === false ) {\n\t\t\tfn = returnFalse;\n\t\t}\n\t\treturn this.each( function() {\n\t\t\tjQuery.event.remove( this, types, fn, selector );\n\t\t} );\n\t}\n} );\n\n\nvar\n\n\t/* eslint-disable max-len */\n\n\t// See https://github.com/eslint/eslint/issues/3229\n\trxhtmlTag = /<(?!area|br|col|embed|hr|img|input|link|meta|param)(([a-z][^\\/\\0>\\x20\\t\\r\\n\\f]*)[^>]*)\\/>/gi,\n\n\t/* eslint-enable */\n\n\t// Support: IE <=10 - 11, Edge 12 - 13 only\n\t// In IE/Edge using regex groups here causes severe slowdowns.\n\t// See https://connect.microsoft.com/IE/feedback/details/1736512/\n\trnoInnerhtml = /<script|<style|<link/i,\n\n\t// checked=\"checked\" or checked\n\trchecked = /checked\\s*(?:[^=]|=\\s*.checked.)/i,\n\trcleanScript = /^\\s*<!(?:\\[CDATA\\[|--)|(?:\\]\\]|--)>\\s*$/g;\n\n// Prefer a tbody over its parent table for containing new rows\nfunction manipulationTarget( elem, content ) {\n\tif ( nodeName( elem, \"table\" ) &&\n\t\tnodeName( content.nodeType !== 11 ? content : content.firstChild, \"tr\" ) ) {\n\n\t\treturn jQuery( elem ).children( \"tbody\" )[ 0 ] || elem;\n\t}\n\n\treturn elem;\n}\n\n// Replace/restore the type attribute of script elements for safe DOM manipulation\nfunction disableScript( elem ) {\n\telem.type = ( elem.getAttribute( \"type\" ) !== null ) + \"/\" + elem.type;\n\treturn elem;\n}\nfunction restoreScript( elem ) {\n\tif ( ( elem.type || \"\" ).slice( 0, 5 ) === \"true/\" ) {\n\t\telem.type = elem.type.slice( 5 );\n\t} else {\n\t\telem.removeAttribute( \"type\" );\n\t}\n\n\treturn elem;\n}\n\nfunction cloneCopyEvent( src, dest ) {\n\tvar i, l, type, pdataOld, pdataCur, udataOld, udataCur, events;\n\n\tif ( dest.nodeType !== 1 ) {\n\t\treturn;\n\t}\n\n\t// 1. Copy private data: events, handlers, etc.\n\tif ( dataPriv.hasData( src ) ) {\n\t\tpdataOld = dataPriv.access( src );\n\t\tpdataCur = dataPriv.set( dest, pdataOld );\n\t\tevents = pdataOld.events;\n\n\t\tif ( events ) {\n\t\t\tdelete pdataCur.handle;\n\t\t\tpdataCur.events = {};\n\n\t\t\tfor ( type in events ) {\n\t\t\t\tfor ( i = 0, l = events[ type ].length; i < l; i++ ) {\n\t\t\t\t\tjQuery.event.add( dest, type, events[ type ][ i ] );\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\t// 2. Copy user data\n\tif ( dataUser.hasData( src ) ) {\n\t\tudataOld = dataUser.access( src );\n\t\tudataCur = jQuery.extend( {}, udataOld );\n\n\t\tdataUser.set( dest, udataCur );\n\t}\n}\n\n// Fix IE bugs, see support tests\nfunction fixInput( src, dest ) {\n\tvar nodeName = dest.nodeName.toLowerCase();\n\n\t// Fails to persist the checked state of a cloned checkbox or radio button.\n\tif ( nodeName === \"input\" && rcheckableType.test( src.type ) ) {\n\t\tdest.checked = src.checked;\n\n\t// Fails to return the selected option to the default selected state when cloning options\n\t} else if ( nodeName === \"input\" || nodeName === \"textarea\" ) {\n\t\tdest.defaultValue = src.defaultValue;\n\t}\n}\n\nfunction domManip( collection, args, callback, ignored ) {\n\n\t// Flatten any nested arrays\n\targs = concat.apply( [], args );\n\n\tvar fragment, first, scripts, hasScripts, node, doc,\n\t\ti = 0,\n\t\tl = collection.length,\n\t\tiNoClone = l - 1,\n\t\tvalue = args[ 0 ],\n\t\tvalueIsFunction = isFunction( value );\n\n\t// We can't cloneNode fragments that contain checked, in WebKit\n\tif ( valueIsFunction ||\n\t\t\t( l > 1 && typeof value === \"string\" &&\n\t\t\t\t!support.checkClone && rchecked.test( value ) ) ) {\n\t\treturn collection.each( function( index ) {\n\t\t\tvar self = collection.eq( index );\n\t\t\tif ( valueIsFunction ) {\n\t\t\t\targs[ 0 ] = value.call( this, index, self.html() );\n\t\t\t}\n\t\t\tdomManip( self, args, callback, ignored );\n\t\t} );\n\t}\n\n\tif ( l ) {\n\t\tfragment = buildFragment( args, collection[ 0 ].ownerDocument, false, collection, ignored );\n\t\tfirst = fragment.firstChild;\n\n\t\tif ( fragment.childNodes.length === 1 ) {\n\t\t\tfragment = first;\n\t\t}\n\n\t\t// Require either new content or an interest in ignored elements to invoke the callback\n\t\tif ( first || ignored ) {\n\t\t\tscripts = jQuery.map( getAll( fragment, \"script\" ), disableScript );\n\t\t\thasScripts = scripts.length;\n\n\t\t\t// Use the original fragment for the last item\n\t\t\t// instead of the first because it can end up\n\t\t\t// being emptied incorrectly in certain situations (#8070).\n\t\t\tfor ( ; i < l; i++ ) {\n\t\t\t\tnode = fragment;\n\n\t\t\t\tif ( i !== iNoClone ) {\n\t\t\t\t\tnode = jQuery.clone( node, true, true );\n\n\t\t\t\t\t// Keep references to cloned scripts for later restoration\n\t\t\t\t\tif ( hasScripts ) {\n\n\t\t\t\t\t\t// Support: Android <=4.0 only, PhantomJS 1 only\n\t\t\t\t\t\t// push.apply(_, arraylike) throws on ancient WebKit\n\t\t\t\t\t\tjQuery.merge( scripts, getAll( node, \"script\" ) );\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tcallback.call( collection[ i ], node, i );\n\t\t\t}\n\n\t\t\tif ( hasScripts ) {\n\t\t\t\tdoc = scripts[ scripts.length - 1 ].ownerDocument;\n\n\t\t\t\t// Reenable scripts\n\t\t\t\tjQuery.map( scripts, restoreScript );\n\n\t\t\t\t// Evaluate executable scripts on first document insertion\n\t\t\t\tfor ( i = 0; i < hasScripts; i++ ) {\n\t\t\t\t\tnode = scripts[ i ];\n\t\t\t\t\tif ( rscriptType.test( node.type || \"\" ) &&\n\t\t\t\t\t\t!dataPriv.access( node, \"globalEval\" ) &&\n\t\t\t\t\t\tjQuery.contains( doc, node ) ) {\n\n\t\t\t\t\t\tif ( node.src && ( node.type || \"\" ).toLowerCase()  !== \"module\" ) {\n\n\t\t\t\t\t\t\t// Optional AJAX dependency, but won't run scripts if not present\n\t\t\t\t\t\t\tif ( jQuery._evalUrl ) {\n\t\t\t\t\t\t\t\tjQuery._evalUrl( node.src );\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tDOMEval( node.textContent.replace( rcleanScript, \"\" ), doc, node );\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\treturn collection;\n}\n\nfunction remove( elem, selector, keepData ) {\n\tvar node,\n\t\tnodes = selector ? jQuery.filter( selector, elem ) : elem,\n\t\ti = 0;\n\n\tfor ( ; ( node = nodes[ i ] ) != null; i++ ) {\n\t\tif ( !keepData && node.nodeType === 1 ) {\n\t\t\tjQuery.cleanData( getAll( node ) );\n\t\t}\n\n\t\tif ( node.parentNode ) {\n\t\t\tif ( keepData && jQuery.contains( node.ownerDocument, node ) ) {\n\t\t\t\tsetGlobalEval( getAll( node, \"script\" ) );\n\t\t\t}\n\t\t\tnode.parentNode.removeChild( node );\n\t\t}\n\t}\n\n\treturn elem;\n}\n\njQuery.extend( {\n\thtmlPrefilter: function( html ) {\n\t\treturn html.replace( rxhtmlTag, \"<$1></$2>\" );\n\t},\n\n\tclone: function( elem, dataAndEvents, deepDataAndEvents ) {\n\t\tvar i, l, srcElements, destElements,\n\t\t\tclone = elem.cloneNode( true ),\n\t\t\tinPage = jQuery.contains( elem.ownerDocument, elem );\n\n\t\t// Fix IE cloning issues\n\t\tif ( !support.noCloneChecked && ( elem.nodeType === 1 || elem.nodeType === 11 ) &&\n\t\t\t\t!jQuery.isXMLDoc( elem ) ) {\n\n\t\t\t// We eschew Sizzle here for performance reasons: https://jsperf.com/getall-vs-sizzle/2\n\t\t\tdestElements = getAll( clone );\n\t\t\tsrcElements = getAll( elem );\n\n\t\t\tfor ( i = 0, l = srcElements.length; i < l; i++ ) {\n\t\t\t\tfixInput( srcElements[ i ], destElements[ i ] );\n\t\t\t}\n\t\t}\n\n\t\t// Copy the events from the original to the clone\n\t\tif ( dataAndEvents ) {\n\t\t\tif ( deepDataAndEvents ) {\n\t\t\t\tsrcElements = srcElements || getAll( elem );\n\t\t\t\tdestElements = destElements || getAll( clone );\n\n\t\t\t\tfor ( i = 0, l = srcElements.length; i < l; i++ ) {\n\t\t\t\t\tcloneCopyEvent( srcElements[ i ], destElements[ i ] );\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tcloneCopyEvent( elem, clone );\n\t\t\t}\n\t\t}\n\n\t\t// Preserve script evaluation history\n\t\tdestElements = getAll( clone, \"script\" );\n\t\tif ( destElements.length > 0 ) {\n\t\t\tsetGlobalEval( destElements, !inPage && getAll( elem, \"script\" ) );\n\t\t}\n\n\t\t// Return the cloned set\n\t\treturn clone;\n\t},\n\n\tcleanData: function( elems ) {\n\t\tvar data, elem, type,\n\t\t\tspecial = jQuery.event.special,\n\t\t\ti = 0;\n\n\t\tfor ( ; ( elem = elems[ i ] ) !== undefined; i++ ) {\n\t\t\tif ( acceptData( elem ) ) {\n\t\t\t\tif ( ( data = elem[ dataPriv.expando ] ) ) {\n\t\t\t\t\tif ( data.events ) {\n\t\t\t\t\t\tfor ( type in data.events ) {\n\t\t\t\t\t\t\tif ( special[ type ] ) {\n\t\t\t\t\t\t\t\tjQuery.event.remove( elem, type );\n\n\t\t\t\t\t\t\t// This is a shortcut to avoid jQuery.event.remove's overhead\n\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\tjQuery.removeEvent( elem, type, data.handle );\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\t// Support: Chrome <=35 - 45+\n\t\t\t\t\t// Assign undefined instead of using delete, see Data#remove\n\t\t\t\t\telem[ dataPriv.expando ] = undefined;\n\t\t\t\t}\n\t\t\t\tif ( elem[ dataUser.expando ] ) {\n\n\t\t\t\t\t// Support: Chrome <=35 - 45+\n\t\t\t\t\t// Assign undefined instead of using delete, see Data#remove\n\t\t\t\t\telem[ dataUser.expando ] = undefined;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n} );\n\njQuery.fn.extend( {\n\tdetach: function( selector ) {\n\t\treturn remove( this, selector, true );\n\t},\n\n\tremove: function( selector ) {\n\t\treturn remove( this, selector );\n\t},\n\n\ttext: function( value ) {\n\t\treturn access( this, function( value ) {\n\t\t\treturn value === undefined ?\n\t\t\t\tjQuery.text( this ) :\n\t\t\t\tthis.empty().each( function() {\n\t\t\t\t\tif ( this.nodeType === 1 || this.nodeType === 11 || this.nodeType === 9 ) {\n\t\t\t\t\t\tthis.textContent = value;\n\t\t\t\t\t}\n\t\t\t\t} );\n\t\t}, null, value, arguments.length );\n\t},\n\n\tappend: function() {\n\t\treturn domManip( this, arguments, function( elem ) {\n\t\t\tif ( this.nodeType === 1 || this.nodeType === 11 || this.nodeType === 9 ) {\n\t\t\t\tvar target = manipulationTarget( this, elem );\n\t\t\t\ttarget.appendChild( elem );\n\t\t\t}\n\t\t} );\n\t},\n\n\tprepend: function() {\n\t\treturn domManip( this, arguments, function( elem ) {\n\t\t\tif ( this.nodeType === 1 || this.nodeType === 11 || this.nodeType === 9 ) {\n\t\t\t\tvar target = manipulationTarget( this, elem );\n\t\t\t\ttarget.insertBefore( elem, target.firstChild );\n\t\t\t}\n\t\t} );\n\t},\n\n\tbefore: function() {\n\t\treturn domManip( this, arguments, function( elem ) {\n\t\t\tif ( this.parentNode ) {\n\t\t\t\tthis.parentNode.insertBefore( elem, this );\n\t\t\t}\n\t\t} );\n\t},\n\n\tafter: function() {\n\t\treturn domManip( this, arguments, function( elem ) {\n\t\t\tif ( this.parentNode ) {\n\t\t\t\tthis.parentNode.insertBefore( elem, this.nextSibling );\n\t\t\t}\n\t\t} );\n\t},\n\n\tempty: function() {\n\t\tvar elem,\n\t\t\ti = 0;\n\n\t\tfor ( ; ( elem = this[ i ] ) != null; i++ ) {\n\t\t\tif ( elem.nodeType === 1 ) {\n\n\t\t\t\t// Prevent memory leaks\n\t\t\t\tjQuery.cleanData( getAll( elem, false ) );\n\n\t\t\t\t// Remove any remaining nodes\n\t\t\t\telem.textContent = \"\";\n\t\t\t}\n\t\t}\n\n\t\treturn this;\n\t},\n\n\tclone: function( dataAndEvents, deepDataAndEvents ) {\n\t\tdataAndEvents = dataAndEvents == null ? false : dataAndEvents;\n\t\tdeepDataAndEvents = deepDataAndEvents == null ? dataAndEvents : deepDataAndEvents;\n\n\t\treturn this.map( function() {\n\t\t\treturn jQuery.clone( this, dataAndEvents, deepDataAndEvents );\n\t\t} );\n\t},\n\n\thtml: function( value ) {\n\t\treturn access( this, function( value ) {\n\t\t\tvar elem = this[ 0 ] || {},\n\t\t\t\ti = 0,\n\t\t\t\tl = this.length;\n\n\t\t\tif ( value === undefined && elem.nodeType === 1 ) {\n\t\t\t\treturn elem.innerHTML;\n\t\t\t}\n\n\t\t\t// See if we can take a shortcut and just use innerHTML\n\t\t\tif ( typeof value === \"string\" && !rnoInnerhtml.test( value ) &&\n\t\t\t\t!wrapMap[ ( rtagName.exec( value ) || [ \"\", \"\" ] )[ 1 ].toLowerCase() ] ) {\n\n\t\t\t\tvalue = jQuery.htmlPrefilter( value );\n\n\t\t\t\ttry {\n\t\t\t\t\tfor ( ; i < l; i++ ) {\n\t\t\t\t\t\telem = this[ i ] || {};\n\n\t\t\t\t\t\t// Remove element nodes and prevent memory leaks\n\t\t\t\t\t\tif ( elem.nodeType === 1 ) {\n\t\t\t\t\t\t\tjQuery.cleanData( getAll( elem, false ) );\n\t\t\t\t\t\t\telem.innerHTML = value;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\telem = 0;\n\n\t\t\t\t// If using innerHTML throws an exception, use the fallback method\n\t\t\t\t} catch ( e ) {}\n\t\t\t}\n\n\t\t\tif ( elem ) {\n\t\t\t\tthis.empty().append( value );\n\t\t\t}\n\t\t}, null, value, arguments.length );\n\t},\n\n\treplaceWith: function() {\n\t\tvar ignored = [];\n\n\t\t// Make the changes, replacing each non-ignored context element with the new content\n\t\treturn domManip( this, arguments, function( elem ) {\n\t\t\tvar parent = this.parentNode;\n\n\t\t\tif ( jQuery.inArray( this, ignored ) < 0 ) {\n\t\t\t\tjQuery.cleanData( getAll( this ) );\n\t\t\t\tif ( parent ) {\n\t\t\t\t\tparent.replaceChild( elem, this );\n\t\t\t\t}\n\t\t\t}\n\n\t\t// Force callback invocation\n\t\t}, ignored );\n\t}\n} );\n\njQuery.each( {\n\tappendTo: \"append\",\n\tprependTo: \"prepend\",\n\tinsertBefore: \"before\",\n\tinsertAfter: \"after\",\n\treplaceAll: \"replaceWith\"\n}, function( name, original ) {\n\tjQuery.fn[ name ] = function( selector ) {\n\t\tvar elems,\n\t\t\tret = [],\n\t\t\tinsert = jQuery( selector ),\n\t\t\tlast = insert.length - 1,\n\t\t\ti = 0;\n\n\t\tfor ( ; i <= last; i++ ) {\n\t\t\telems = i === last ? this : this.clone( true );\n\t\t\tjQuery( insert[ i ] )[ original ]( elems );\n\n\t\t\t// Support: Android <=4.0 only, PhantomJS 1 only\n\t\t\t// .get() because push.apply(_, arraylike) throws on ancient WebKit\n\t\t\tpush.apply( ret, elems.get() );\n\t\t}\n\n\t\treturn this.pushStack( ret );\n\t};\n} );\nvar rnumnonpx = new RegExp( \"^(\" + pnum + \")(?!px)[a-z%]+$\", \"i\" );\n\nvar getStyles = function( elem ) {\n\n\t\t// Support: IE <=11 only, Firefox <=30 (#15098, #14150)\n\t\t// IE throws on elements created in popups\n\t\t// FF meanwhile throws on frame elements through \"defaultView.getComputedStyle\"\n\t\tvar view = elem.ownerDocument.defaultView;\n\n\t\tif ( !view || !view.opener ) {\n\t\t\tview = window;\n\t\t}\n\n\t\treturn view.getComputedStyle( elem );\n\t};\n\nvar rboxStyle = new RegExp( cssExpand.join( \"|\" ), \"i\" );\n\n\n\n( function() {\n\n\t// Executing both pixelPosition & boxSizingReliable tests require only one layout\n\t// so they're executed at the same time to save the second computation.\n\tfunction computeStyleTests() {\n\n\t\t// This is a singleton, we need to execute it only once\n\t\tif ( !div ) {\n\t\t\treturn;\n\t\t}\n\n\t\tcontainer.style.cssText = \"position:absolute;left:-11111px;width:60px;\" +\n\t\t\t\"margin-top:1px;padding:0;border:0\";\n\t\tdiv.style.cssText =\n\t\t\t\"position:relative;display:block;box-sizing:border-box;overflow:scroll;\" +\n\t\t\t\"margin:auto;border:1px;padding:1px;\" +\n\t\t\t\"width:60%;top:1%\";\n\t\tdocumentElement.appendChild( container ).appendChild( div );\n\n\t\tvar divStyle = window.getComputedStyle( div );\n\t\tpixelPositionVal = divStyle.top !== \"1%\";\n\n\t\t// Support: Android 4.0 - 4.3 only, Firefox <=3 - 44\n\t\treliableMarginLeftVal = roundPixelMeasures( divStyle.marginLeft ) === 12;\n\n\t\t// Support: Android 4.0 - 4.3 only, Safari <=9.1 - 10.1, iOS <=7.0 - 9.3\n\t\t// Some styles come back with percentage values, even though they shouldn't\n\t\tdiv.style.right = \"60%\";\n\t\tpixelBoxStylesVal = roundPixelMeasures( divStyle.right ) === 36;\n\n\t\t// Support: IE 9 - 11 only\n\t\t// Detect misreporting of content dimensions for box-sizing:border-box elements\n\t\tboxSizingReliableVal = roundPixelMeasures( divStyle.width ) === 36;\n\n\t\t// Support: IE 9 only\n\t\t// Detect overflow:scroll screwiness (gh-3699)\n\t\tdiv.style.position = \"absolute\";\n\t\tscrollboxSizeVal = div.offsetWidth === 36 || \"absolute\";\n\n\t\tdocumentElement.removeChild( container );\n\n\t\t// Nullify the div so it wouldn't be stored in the memory and\n\t\t// it will also be a sign that checks already performed\n\t\tdiv = null;\n\t}\n\n\tfunction roundPixelMeasures( measure ) {\n\t\treturn Math.round( parseFloat( measure ) );\n\t}\n\n\tvar pixelPositionVal, boxSizingReliableVal, scrollboxSizeVal, pixelBoxStylesVal,\n\t\treliableMarginLeftVal,\n\t\tcontainer = document.createElement( \"div\" ),\n\t\tdiv = document.createElement( \"div\" );\n\n\t// Finish early in limited (non-browser) environments\n\tif ( !div.style ) {\n\t\treturn;\n\t}\n\n\t// Support: IE <=9 - 11 only\n\t// Style of cloned element affects source element cloned (#8908)\n\tdiv.style.backgroundClip = \"content-box\";\n\tdiv.cloneNode( true ).style.backgroundClip = \"\";\n\tsupport.clearCloneStyle = div.style.backgroundClip === \"content-box\";\n\n\tjQuery.extend( support, {\n\t\tboxSizingReliable: function() {\n\t\t\tcomputeStyleTests();\n\t\t\treturn boxSizingReliableVal;\n\t\t},\n\t\tpixelBoxStyles: function() {\n\t\t\tcomputeStyleTests();\n\t\t\treturn pixelBoxStylesVal;\n\t\t},\n\t\tpixelPosition: function() {\n\t\t\tcomputeStyleTests();\n\t\t\treturn pixelPositionVal;\n\t\t},\n\t\treliableMarginLeft: function() {\n\t\t\tcomputeStyleTests();\n\t\t\treturn reliableMarginLeftVal;\n\t\t},\n\t\tscrollboxSize: function() {\n\t\t\tcomputeStyleTests();\n\t\t\treturn scrollboxSizeVal;\n\t\t}\n\t} );\n} )();\n\n\nfunction curCSS( elem, name, computed ) {\n\tvar width, minWidth, maxWidth, ret,\n\n\t\t// Support: Firefox 51+\n\t\t// Retrieving style before computed somehow\n\t\t// fixes an issue with getting wrong values\n\t\t// on detached elements\n\t\tstyle = elem.style;\n\n\tcomputed = computed || getStyles( elem );\n\n\t// getPropertyValue is needed for:\n\t//   .css('filter') (IE 9 only, #12537)\n\t//   .css('--customProperty) (#3144)\n\tif ( computed ) {\n\t\tret = computed.getPropertyValue( name ) || computed[ name ];\n\n\t\tif ( ret === \"\" && !jQuery.contains( elem.ownerDocument, elem ) ) {\n\t\t\tret = jQuery.style( elem, name );\n\t\t}\n\n\t\t// A tribute to the \"awesome hack by Dean Edwards\"\n\t\t// Android Browser returns percentage for some values,\n\t\t// but width seems to be reliably pixels.\n\t\t// This is against the CSSOM draft spec:\n\t\t// https://drafts.csswg.org/cssom/#resolved-values\n\t\tif ( !support.pixelBoxStyles() && rnumnonpx.test( ret ) && rboxStyle.test( name ) ) {\n\n\t\t\t// Remember the original values\n\t\t\twidth = style.width;\n\t\t\tminWidth = style.minWidth;\n\t\t\tmaxWidth = style.maxWidth;\n\n\t\t\t// Put in the new values to get a computed value out\n\t\t\tstyle.minWidth = style.maxWidth = style.width = ret;\n\t\t\tret = computed.width;\n\n\t\t\t// Revert the changed values\n\t\t\tstyle.width = width;\n\t\t\tstyle.minWidth = minWidth;\n\t\t\tstyle.maxWidth = maxWidth;\n\t\t}\n\t}\n\n\treturn ret !== undefined ?\n\n\t\t// Support: IE <=9 - 11 only\n\t\t// IE returns zIndex value as an integer.\n\t\tret + \"\" :\n\t\tret;\n}\n\n\nfunction addGetHookIf( conditionFn, hookFn ) {\n\n\t// Define the hook, we'll check on the first run if it's really needed.\n\treturn {\n\t\tget: function() {\n\t\t\tif ( conditionFn() ) {\n\n\t\t\t\t// Hook not needed (or it's not possible to use it due\n\t\t\t\t// to missing dependency), remove it.\n\t\t\t\tdelete this.get;\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\t// Hook needed; redefine it so that the support test is not executed again.\n\t\t\treturn ( this.get = hookFn ).apply( this, arguments );\n\t\t}\n\t};\n}\n\n\nvar\n\n\t// Swappable if display is none or starts with table\n\t// except \"table\", \"table-cell\", or \"table-caption\"\n\t// See here for display values: https://developer.mozilla.org/en-US/docs/CSS/display\n\trdisplayswap = /^(none|table(?!-c[ea]).+)/,\n\trcustomProp = /^--/,\n\tcssShow = { position: \"absolute\", visibility: \"hidden\", display: \"block\" },\n\tcssNormalTransform = {\n\t\tletterSpacing: \"0\",\n\t\tfontWeight: \"400\"\n\t},\n\n\tcssPrefixes = [ \"Webkit\", \"Moz\", \"ms\" ],\n\temptyStyle = document.createElement( \"div\" ).style;\n\n// Return a css property mapped to a potentially vendor prefixed property\nfunction vendorPropName( name ) {\n\n\t// Shortcut for names that are not vendor prefixed\n\tif ( name in emptyStyle ) {\n\t\treturn name;\n\t}\n\n\t// Check for vendor prefixed names\n\tvar capName = name[ 0 ].toUpperCase() + name.slice( 1 ),\n\t\ti = cssPrefixes.length;\n\n\twhile ( i-- ) {\n\t\tname = cssPrefixes[ i ] + capName;\n\t\tif ( name in emptyStyle ) {\n\t\t\treturn name;\n\t\t}\n\t}\n}\n\n// Return a property mapped along what jQuery.cssProps suggests or to\n// a vendor prefixed property.\nfunction finalPropName( name ) {\n\tvar ret = jQuery.cssProps[ name ];\n\tif ( !ret ) {\n\t\tret = jQuery.cssProps[ name ] = vendorPropName( name ) || name;\n\t}\n\treturn ret;\n}\n\nfunction setPositiveNumber( elem, value, subtract ) {\n\n\t// Any relative (+/-) values have already been\n\t// normalized at this point\n\tvar matches = rcssNum.exec( value );\n\treturn matches ?\n\n\t\t// Guard against undefined \"subtract\", e.g., when used as in cssHooks\n\t\tMath.max( 0, matches[ 2 ] - ( subtract || 0 ) ) + ( matches[ 3 ] || \"px\" ) :\n\t\tvalue;\n}\n\nfunction boxModelAdjustment( elem, dimension, box, isBorderBox, styles, computedVal ) {\n\tvar i = dimension === \"width\" ? 1 : 0,\n\t\textra = 0,\n\t\tdelta = 0;\n\n\t// Adjustment may not be necessary\n\tif ( box === ( isBorderBox ? \"border\" : \"content\" ) ) {\n\t\treturn 0;\n\t}\n\n\tfor ( ; i < 4; i += 2 ) {\n\n\t\t// Both box models exclude margin\n\t\tif ( box === \"margin\" ) {\n\t\t\tdelta += jQuery.css( elem, box + cssExpand[ i ], true, styles );\n\t\t}\n\n\t\t// If we get here with a content-box, we're seeking \"padding\" or \"border\" or \"margin\"\n\t\tif ( !isBorderBox ) {\n\n\t\t\t// Add padding\n\t\t\tdelta += jQuery.css( elem, \"padding\" + cssExpand[ i ], true, styles );\n\n\t\t\t// For \"border\" or \"margin\", add border\n\t\t\tif ( box !== \"padding\" ) {\n\t\t\t\tdelta += jQuery.css( elem, \"border\" + cssExpand[ i ] + \"Width\", true, styles );\n\n\t\t\t// But still keep track of it otherwise\n\t\t\t} else {\n\t\t\t\textra += jQuery.css( elem, \"border\" + cssExpand[ i ] + \"Width\", true, styles );\n\t\t\t}\n\n\t\t// If we get here with a border-box (content + padding + border), we're seeking \"content\" or\n\t\t// \"padding\" or \"margin\"\n\t\t} else {\n\n\t\t\t// For \"content\", subtract padding\n\t\t\tif ( box === \"content\" ) {\n\t\t\t\tdelta -= jQuery.css( elem, \"padding\" + cssExpand[ i ], true, styles );\n\t\t\t}\n\n\t\t\t// For \"content\" or \"padding\", subtract border\n\t\t\tif ( box !== \"margin\" ) {\n\t\t\t\tdelta -= jQuery.css( elem, \"border\" + cssExpand[ i ] + \"Width\", true, styles );\n\t\t\t}\n\t\t}\n\t}\n\n\t// Account for positive content-box scroll gutter when requested by providing computedVal\n\tif ( !isBorderBox && computedVal >= 0 ) {\n\n\t\t// offsetWidth/offsetHeight is a rounded sum of content, padding, scroll gutter, and border\n\t\t// Assuming integer scroll gutter, subtract the rest and round down\n\t\tdelta += Math.max( 0, Math.ceil(\n\t\t\telem[ \"offset\" + dimension[ 0 ].toUpperCase() + dimension.slice( 1 ) ] -\n\t\t\tcomputedVal -\n\t\t\tdelta -\n\t\t\textra -\n\t\t\t0.5\n\t\t) );\n\t}\n\n\treturn delta;\n}\n\nfunction getWidthOrHeight( elem, dimension, extra ) {\n\n\t// Start with computed style\n\tvar styles = getStyles( elem ),\n\t\tval = curCSS( elem, dimension, styles ),\n\t\tisBorderBox = jQuery.css( elem, \"boxSizing\", false, styles ) === \"border-box\",\n\t\tvalueIsBorderBox = isBorderBox;\n\n\t// Support: Firefox <=54\n\t// Return a confounding non-pixel value or feign ignorance, as appropriate.\n\tif ( rnumnonpx.test( val ) ) {\n\t\tif ( !extra ) {\n\t\t\treturn val;\n\t\t}\n\t\tval = \"auto\";\n\t}\n\n\t// Check for style in case a browser which returns unreliable values\n\t// for getComputedStyle silently falls back to the reliable elem.style\n\tvalueIsBorderBox = valueIsBorderBox &&\n\t\t( support.boxSizingReliable() || val === elem.style[ dimension ] );\n\n\t// Fall back to offsetWidth/offsetHeight when value is \"auto\"\n\t// This happens for inline elements with no explicit setting (gh-3571)\n\t// Support: Android <=4.1 - 4.3 only\n\t// Also use offsetWidth/offsetHeight for misreported inline dimensions (gh-3602)\n\tif ( val === \"auto\" ||\n\t\t!parseFloat( val ) && jQuery.css( elem, \"display\", false, styles ) === \"inline\" ) {\n\n\t\tval = elem[ \"offset\" + dimension[ 0 ].toUpperCase() + dimension.slice( 1 ) ];\n\n\t\t// offsetWidth/offsetHeight provide border-box values\n\t\tvalueIsBorderBox = true;\n\t}\n\n\t// Normalize \"\" and auto\n\tval = parseFloat( val ) || 0;\n\n\t// Adjust for the element's box model\n\treturn ( val +\n\t\tboxModelAdjustment(\n\t\t\telem,\n\t\t\tdimension,\n\t\t\textra || ( isBorderBox ? \"border\" : \"content\" ),\n\t\t\tvalueIsBorderBox,\n\t\t\tstyles,\n\n\t\t\t// Provide the current computed size to request scroll gutter calculation (gh-3589)\n\t\t\tval\n\t\t)\n\t) + \"px\";\n}\n\njQuery.extend( {\n\n\t// Add in style property hooks for overriding the default\n\t// behavior of getting and setting a style property\n\tcssHooks: {\n\t\topacity: {\n\t\t\tget: function( elem, computed ) {\n\t\t\t\tif ( computed ) {\n\n\t\t\t\t\t// We should always get a number back from opacity\n\t\t\t\t\tvar ret = curCSS( elem, \"opacity\" );\n\t\t\t\t\treturn ret === \"\" ? \"1\" : ret;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t},\n\n\t// Don't automatically add \"px\" to these possibly-unitless properties\n\tcssNumber: {\n\t\t\"animationIterationCount\": true,\n\t\t\"columnCount\": true,\n\t\t\"fillOpacity\": true,\n\t\t\"flexGrow\": true,\n\t\t\"flexShrink\": true,\n\t\t\"fontWeight\": true,\n\t\t\"lineHeight\": true,\n\t\t\"opacity\": true,\n\t\t\"order\": true,\n\t\t\"orphans\": true,\n\t\t\"widows\": true,\n\t\t\"zIndex\": true,\n\t\t\"zoom\": true\n\t},\n\n\t// Add in properties whose names you wish to fix before\n\t// setting or getting the value\n\tcssProps: {},\n\n\t// Get and set the style property on a DOM Node\n\tstyle: function( elem, name, value, extra ) {\n\n\t\t// Don't set styles on text and comment nodes\n\t\tif ( !elem || elem.nodeType === 3 || elem.nodeType === 8 || !elem.style ) {\n\t\t\treturn;\n\t\t}\n\n\t\t// Make sure that we're working with the right name\n\t\tvar ret, type, hooks,\n\t\t\torigName = camelCase( name ),\n\t\t\tisCustomProp = rcustomProp.test( name ),\n\t\t\tstyle = elem.style;\n\n\t\t// Make sure that we're working with the right name. We don't\n\t\t// want to query the value if it is a CSS custom property\n\t\t// since they are user-defined.\n\t\tif ( !isCustomProp ) {\n\t\t\tname = finalPropName( origName );\n\t\t}\n\n\t\t// Gets hook for the prefixed version, then unprefixed version\n\t\thooks = jQuery.cssHooks[ name ] || jQuery.cssHooks[ origName ];\n\n\t\t// Check if we're setting a value\n\t\tif ( value !== undefined ) {\n\t\t\ttype = typeof value;\n\n\t\t\t// Convert \"+=\" or \"-=\" to relative numbers (#7345)\n\t\t\tif ( type === \"string\" && ( ret = rcssNum.exec( value ) ) && ret[ 1 ] ) {\n\t\t\t\tvalue = adjustCSS( elem, name, ret );\n\n\t\t\t\t// Fixes bug #9237\n\t\t\t\ttype = \"number\";\n\t\t\t}\n\n\t\t\t// Make sure that null and NaN values aren't set (#7116)\n\t\t\tif ( value == null || value !== value ) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\t// If a number was passed in, add the unit (except for certain CSS properties)\n\t\t\tif ( type === \"number\" ) {\n\t\t\t\tvalue += ret && ret[ 3 ] || ( jQuery.cssNumber[ origName ] ? \"\" : \"px\" );\n\t\t\t}\n\n\t\t\t// background-* props affect original clone's values\n\t\t\tif ( !support.clearCloneStyle && value === \"\" && name.indexOf( \"background\" ) === 0 ) {\n\t\t\t\tstyle[ name ] = \"inherit\";\n\t\t\t}\n\n\t\t\t// If a hook was provided, use that value, otherwise just set the specified value\n\t\t\tif ( !hooks || !( \"set\" in hooks ) ||\n\t\t\t\t( value = hooks.set( elem, value, extra ) ) !== undefined ) {\n\n\t\t\t\tif ( isCustomProp ) {\n\t\t\t\t\tstyle.setProperty( name, value );\n\t\t\t\t} else {\n\t\t\t\t\tstyle[ name ] = value;\n\t\t\t\t}\n\t\t\t}\n\n\t\t} else {\n\n\t\t\t// If a hook was provided get the non-computed value from there\n\t\t\tif ( hooks && \"get\" in hooks &&\n\t\t\t\t( ret = hooks.get( elem, false, extra ) ) !== undefined ) {\n\n\t\t\t\treturn ret;\n\t\t\t}\n\n\t\t\t// Otherwise just get the value from the style object\n\t\t\treturn style[ name ];\n\t\t}\n\t},\n\n\tcss: function( elem, name, extra, styles ) {\n\t\tvar val, num, hooks,\n\t\t\torigName = camelCase( name ),\n\t\t\tisCustomProp = rcustomProp.test( name );\n\n\t\t// Make sure that we're working with the right name. We don't\n\t\t// want to modify the value if it is a CSS custom property\n\t\t// since they are user-defined.\n\t\tif ( !isCustomProp ) {\n\t\t\tname = finalPropName( origName );\n\t\t}\n\n\t\t// Try prefixed name followed by the unprefixed name\n\t\thooks = jQuery.cssHooks[ name ] || jQuery.cssHooks[ origName ];\n\n\t\t// If a hook was provided get the computed value from there\n\t\tif ( hooks && \"get\" in hooks ) {\n\t\t\tval = hooks.get( elem, true, extra );\n\t\t}\n\n\t\t// Otherwise, if a way to get the computed value exists, use that\n\t\tif ( val === undefined ) {\n\t\t\tval = curCSS( elem, name, styles );\n\t\t}\n\n\t\t// Convert \"normal\" to computed value\n\t\tif ( val === \"normal\" && name in cssNormalTransform ) {\n\t\t\tval = cssNormalTransform[ name ];\n\t\t}\n\n\t\t// Make numeric if forced or a qualifier was provided and val looks numeric\n\t\tif ( extra === \"\" || extra ) {\n\t\t\tnum = parseFloat( val );\n\t\t\treturn extra === true || isFinite( num ) ? num || 0 : val;\n\t\t}\n\n\t\treturn val;\n\t}\n} );\n\njQuery.each( [ \"height\", \"width\" ], function( i, dimension ) {\n\tjQuery.cssHooks[ dimension ] = {\n\t\tget: function( elem, computed, extra ) {\n\t\t\tif ( computed ) {\n\n\t\t\t\t// Certain elements can have dimension info if we invisibly show them\n\t\t\t\t// but it must have a current display style that would benefit\n\t\t\t\treturn rdisplayswap.test( jQuery.css( elem, \"display\" ) ) &&\n\n\t\t\t\t\t// Support: Safari 8+\n\t\t\t\t\t// Table columns in Safari have non-zero offsetWidth & zero\n\t\t\t\t\t// getBoundingClientRect().width unless display is changed.\n\t\t\t\t\t// Support: IE <=11 only\n\t\t\t\t\t// Running getBoundingClientRect on a disconnected node\n\t\t\t\t\t// in IE throws an error.\n\t\t\t\t\t( !elem.getClientRects().length || !elem.getBoundingClientRect().width ) ?\n\t\t\t\t\t\tswap( elem, cssShow, function() {\n\t\t\t\t\t\t\treturn getWidthOrHeight( elem, dimension, extra );\n\t\t\t\t\t\t} ) :\n\t\t\t\t\t\tgetWidthOrHeight( elem, dimension, extra );\n\t\t\t}\n\t\t},\n\n\t\tset: function( elem, value, extra ) {\n\t\t\tvar matches,\n\t\t\t\tstyles = getStyles( elem ),\n\t\t\t\tisBorderBox = jQuery.css( elem, \"boxSizing\", false, styles ) === \"border-box\",\n\t\t\t\tsubtract = extra && boxModelAdjustment(\n\t\t\t\t\telem,\n\t\t\t\t\tdimension,\n\t\t\t\t\textra,\n\t\t\t\t\tisBorderBox,\n\t\t\t\t\tstyles\n\t\t\t\t);\n\n\t\t\t// Account for unreliable border-box dimensions by comparing offset* to computed and\n\t\t\t// faking a content-box to get border and padding (gh-3699)\n\t\t\tif ( isBorderBox && support.scrollboxSize() === styles.position ) {\n\t\t\t\tsubtract -= Math.ceil(\n\t\t\t\t\telem[ \"offset\" + dimension[ 0 ].toUpperCase() + dimension.slice( 1 ) ] -\n\t\t\t\t\tparseFloat( styles[ dimension ] ) -\n\t\t\t\t\tboxModelAdjustment( elem, dimension, \"border\", false, styles ) -\n\t\t\t\t\t0.5\n\t\t\t\t);\n\t\t\t}\n\n\t\t\t// Convert to pixels if value adjustment is needed\n\t\t\tif ( subtract && ( matches = rcssNum.exec( value ) ) &&\n\t\t\t\t( matches[ 3 ] || \"px\" ) !== \"px\" ) {\n\n\t\t\t\telem.style[ dimension ] = value;\n\t\t\t\tvalue = jQuery.css( elem, dimension );\n\t\t\t}\n\n\t\t\treturn setPositiveNumber( elem, value, subtract );\n\t\t}\n\t};\n} );\n\njQuery.cssHooks.marginLeft = addGetHookIf( support.reliableMarginLeft,\n\tfunction( elem, computed ) {\n\t\tif ( computed ) {\n\t\t\treturn ( parseFloat( curCSS( elem, \"marginLeft\" ) ) ||\n\t\t\t\telem.getBoundingClientRect().left -\n\t\t\t\t\tswap( elem, { marginLeft: 0 }, function() {\n\t\t\t\t\t\treturn elem.getBoundingClientRect().left;\n\t\t\t\t\t} )\n\t\t\t\t) + \"px\";\n\t\t}\n\t}\n);\n\n// These hooks are used by animate to expand properties\njQuery.each( {\n\tmargin: \"\",\n\tpadding: \"\",\n\tborder: \"Width\"\n}, function( prefix, suffix ) {\n\tjQuery.cssHooks[ prefix + suffix ] = {\n\t\texpand: function( value ) {\n\t\t\tvar i = 0,\n\t\t\t\texpanded = {},\n\n\t\t\t\t// Assumes a single number if not a string\n\t\t\t\tparts = typeof value === \"string\" ? value.split( \" \" ) : [ value ];\n\n\t\t\tfor ( ; i < 4; i++ ) {\n\t\t\t\texpanded[ prefix + cssExpand[ i ] + suffix ] =\n\t\t\t\t\tparts[ i ] || parts[ i - 2 ] || parts[ 0 ];\n\t\t\t}\n\n\t\t\treturn expanded;\n\t\t}\n\t};\n\n\tif ( prefix !== \"margin\" ) {\n\t\tjQuery.cssHooks[ prefix + suffix ].set = setPositiveNumber;\n\t}\n} );\n\njQuery.fn.extend( {\n\tcss: function( name, value ) {\n\t\treturn access( this, function( elem, name, value ) {\n\t\t\tvar styles, len,\n\t\t\t\tmap = {},\n\t\t\t\ti = 0;\n\n\t\t\tif ( Array.isArray( name ) ) {\n\t\t\t\tstyles = getStyles( elem );\n\t\t\t\tlen = name.length;\n\n\t\t\t\tfor ( ; i < len; i++ ) {\n\t\t\t\t\tmap[ name[ i ] ] = jQuery.css( elem, name[ i ], false, styles );\n\t\t\t\t}\n\n\t\t\t\treturn map;\n\t\t\t}\n\n\t\t\treturn value !== undefined ?\n\t\t\t\tjQuery.style( elem, name, value ) :\n\t\t\t\tjQuery.css( elem, name );\n\t\t}, name, value, arguments.length > 1 );\n\t}\n} );\n\n\nfunction Tween( elem, options, prop, end, easing ) {\n\treturn new Tween.prototype.init( elem, options, prop, end, easing );\n}\njQuery.Tween = Tween;\n\nTween.prototype = {\n\tconstructor: Tween,\n\tinit: function( elem, options, prop, end, easing, unit ) {\n\t\tthis.elem = elem;\n\t\tthis.prop = prop;\n\t\tthis.easing = easing || jQuery.easing._default;\n\t\tthis.options = options;\n\t\tthis.start = this.now = this.cur();\n\t\tthis.end = end;\n\t\tthis.unit = unit || ( jQuery.cssNumber[ prop ] ? \"\" : \"px\" );\n\t},\n\tcur: function() {\n\t\tvar hooks = Tween.propHooks[ this.prop ];\n\n\t\treturn hooks && hooks.get ?\n\t\t\thooks.get( this ) :\n\t\t\tTween.propHooks._default.get( this );\n\t},\n\trun: function( percent ) {\n\t\tvar eased,\n\t\t\thooks = Tween.propHooks[ this.prop ];\n\n\t\tif ( this.options.duration ) {\n\t\t\tthis.pos = eased = jQuery.easing[ this.easing ](\n\t\t\t\tpercent, this.options.duration * percent, 0, 1, this.options.duration\n\t\t\t);\n\t\t} else {\n\t\t\tthis.pos = eased = percent;\n\t\t}\n\t\tthis.now = ( this.end - this.start ) * eased + this.start;\n\n\t\tif ( this.options.step ) {\n\t\t\tthis.options.step.call( this.elem, this.now, this );\n\t\t}\n\n\t\tif ( hooks && hooks.set ) {\n\t\t\thooks.set( this );\n\t\t} else {\n\t\t\tTween.propHooks._default.set( this );\n\t\t}\n\t\treturn this;\n\t}\n};\n\nTween.prototype.init.prototype = Tween.prototype;\n\nTween.propHooks = {\n\t_default: {\n\t\tget: function( tween ) {\n\t\t\tvar result;\n\n\t\t\t// Use a property on the element directly when it is not a DOM element,\n\t\t\t// or when there is no matching style property that exists.\n\t\t\tif ( tween.elem.nodeType !== 1 ||\n\t\t\t\ttween.elem[ tween.prop ] != null && tween.elem.style[ tween.prop ] == null ) {\n\t\t\t\treturn tween.elem[ tween.prop ];\n\t\t\t}\n\n\t\t\t// Passing an empty string as a 3rd parameter to .css will automatically\n\t\t\t// attempt a parseFloat and fallback to a string if the parse fails.\n\t\t\t// Simple values such as \"10px\" are parsed to Float;\n\t\t\t// complex values such as \"rotate(1rad)\" are returned as-is.\n\t\t\tresult = jQuery.css( tween.elem, tween.prop, \"\" );\n\n\t\t\t// Empty strings, null, undefined and \"auto\" are converted to 0.\n\t\t\treturn !result || result === \"auto\" ? 0 : result;\n\t\t},\n\t\tset: function( tween ) {\n\n\t\t\t// Use step hook for back compat.\n\t\t\t// Use cssHook if its there.\n\t\t\t// Use .style if available and use plain properties where available.\n\t\t\tif ( jQuery.fx.step[ tween.prop ] ) {\n\t\t\t\tjQuery.fx.step[ tween.prop ]( tween );\n\t\t\t} else if ( tween.elem.nodeType === 1 &&\n\t\t\t\t( tween.elem.style[ jQuery.cssProps[ tween.prop ] ] != null ||\n\t\t\t\t\tjQuery.cssHooks[ tween.prop ] ) ) {\n\t\t\t\tjQuery.style( tween.elem, tween.prop, tween.now + tween.unit );\n\t\t\t} else {\n\t\t\t\ttween.elem[ tween.prop ] = tween.now;\n\t\t\t}\n\t\t}\n\t}\n};\n\n// Support: IE <=9 only\n// Panic based approach to setting things on disconnected nodes\nTween.propHooks.scrollTop = Tween.propHooks.scrollLeft = {\n\tset: function( tween ) {\n\t\tif ( tween.elem.nodeType && tween.elem.parentNode ) {\n\t\t\ttween.elem[ tween.prop ] = tween.now;\n\t\t}\n\t}\n};\n\njQuery.easing = {\n\tlinear: function( p ) {\n\t\treturn p;\n\t},\n\tswing: function( p ) {\n\t\treturn 0.5 - Math.cos( p * Math.PI ) / 2;\n\t},\n\t_default: \"swing\"\n};\n\njQuery.fx = Tween.prototype.init;\n\n// Back compat <1.8 extension point\njQuery.fx.step = {};\n\n\n\n\nvar\n\tfxNow, inProgress,\n\trfxtypes = /^(?:toggle|show|hide)$/,\n\trrun = /queueHooks$/;\n\nfunction schedule() {\n\tif ( inProgress ) {\n\t\tif ( document.hidden === false && window.requestAnimationFrame ) {\n\t\t\twindow.requestAnimationFrame( schedule );\n\t\t} else {\n\t\t\twindow.setTimeout( schedule, jQuery.fx.interval );\n\t\t}\n\n\t\tjQuery.fx.tick();\n\t}\n}\n\n// Animations created synchronously will run synchronously\nfunction createFxNow() {\n\twindow.setTimeout( function() {\n\t\tfxNow = undefined;\n\t} );\n\treturn ( fxNow = Date.now() );\n}\n\n// Generate parameters to create a standard animation\nfunction genFx( type, includeWidth ) {\n\tvar which,\n\t\ti = 0,\n\t\tattrs = { height: type };\n\n\t// If we include width, step value is 1 to do all cssExpand values,\n\t// otherwise step value is 2 to skip over Left and Right\n\tincludeWidth = includeWidth ? 1 : 0;\n\tfor ( ; i < 4; i += 2 - includeWidth ) {\n\t\twhich = cssExpand[ i ];\n\t\tattrs[ \"margin\" + which ] = attrs[ \"padding\" + which ] = type;\n\t}\n\n\tif ( includeWidth ) {\n\t\tattrs.opacity = attrs.width = type;\n\t}\n\n\treturn attrs;\n}\n\nfunction createTween( value, prop, animation ) {\n\tvar tween,\n\t\tcollection = ( Animation.tweeners[ prop ] || [] ).concat( Animation.tweeners[ \"*\" ] ),\n\t\tindex = 0,\n\t\tlength = collection.length;\n\tfor ( ; index < length; index++ ) {\n\t\tif ( ( tween = collection[ index ].call( animation, prop, value ) ) ) {\n\n\t\t\t// We're done with this property\n\t\t\treturn tween;\n\t\t}\n\t}\n}\n\nfunction defaultPrefilter( elem, props, opts ) {\n\tvar prop, value, toggle, hooks, oldfire, propTween, restoreDisplay, display,\n\t\tisBox = \"width\" in props || \"height\" in props,\n\t\tanim = this,\n\t\torig = {},\n\t\tstyle = elem.style,\n\t\thidden = elem.nodeType && isHiddenWithinTree( elem ),\n\t\tdataShow = dataPriv.get( elem, \"fxshow\" );\n\n\t// Queue-skipping animations hijack the fx hooks\n\tif ( !opts.queue ) {\n\t\thooks = jQuery._queueHooks( elem, \"fx\" );\n\t\tif ( hooks.unqueued == null ) {\n\t\t\thooks.unqueued = 0;\n\t\t\toldfire = hooks.empty.fire;\n\t\t\thooks.empty.fire = function() {\n\t\t\t\tif ( !hooks.unqueued ) {\n\t\t\t\t\toldfire();\n\t\t\t\t}\n\t\t\t};\n\t\t}\n\t\thooks.unqueued++;\n\n\t\tanim.always( function() {\n\n\t\t\t// Ensure the complete handler is called before this completes\n\t\t\tanim.always( function() {\n\t\t\t\thooks.unqueued--;\n\t\t\t\tif ( !jQuery.queue( elem, \"fx\" ).length ) {\n\t\t\t\t\thooks.empty.fire();\n\t\t\t\t}\n\t\t\t} );\n\t\t} );\n\t}\n\n\t// Detect show/hide animations\n\tfor ( prop in props ) {\n\t\tvalue = props[ prop ];\n\t\tif ( rfxtypes.test( value ) ) {\n\t\t\tdelete props[ prop ];\n\t\t\ttoggle = toggle || value === \"toggle\";\n\t\t\tif ( value === ( hidden ? \"hide\" : \"show\" ) ) {\n\n\t\t\t\t// Pretend to be hidden if this is a \"show\" and\n\t\t\t\t// there is still data from a stopped show/hide\n\t\t\t\tif ( value === \"show\" && dataShow && dataShow[ prop ] !== undefined ) {\n\t\t\t\t\thidden = true;\n\n\t\t\t\t// Ignore all other no-op show/hide data\n\t\t\t\t} else {\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\t\t\t}\n\t\t\torig[ prop ] = dataShow && dataShow[ prop ] || jQuery.style( elem, prop );\n\t\t}\n\t}\n\n\t// Bail out if this is a no-op like .hide().hide()\n\tpropTween = !jQuery.isEmptyObject( props );\n\tif ( !propTween && jQuery.isEmptyObject( orig ) ) {\n\t\treturn;\n\t}\n\n\t// Restrict \"overflow\" and \"display\" styles during box animations\n\tif ( isBox && elem.nodeType === 1 ) {\n\n\t\t// Support: IE <=9 - 11, Edge 12 - 15\n\t\t// Record all 3 overflow attributes because IE does not infer the shorthand\n\t\t// from identically-valued overflowX and overflowY and Edge just mirrors\n\t\t// the overflowX value there.\n\t\topts.overflow = [ style.overflow, style.overflowX, style.overflowY ];\n\n\t\t// Identify a display type, preferring old show/hide data over the CSS cascade\n\t\trestoreDisplay = dataShow && dataShow.display;\n\t\tif ( restoreDisplay == null ) {\n\t\t\trestoreDisplay = dataPriv.get( elem, \"display\" );\n\t\t}\n\t\tdisplay = jQuery.css( elem, \"display\" );\n\t\tif ( display === \"none\" ) {\n\t\t\tif ( restoreDisplay ) {\n\t\t\t\tdisplay = restoreDisplay;\n\t\t\t} else {\n\n\t\t\t\t// Get nonempty value(s) by temporarily forcing visibility\n\t\t\t\tshowHide( [ elem ], true );\n\t\t\t\trestoreDisplay = elem.style.display || restoreDisplay;\n\t\t\t\tdisplay = jQuery.css( elem, \"display\" );\n\t\t\t\tshowHide( [ elem ] );\n\t\t\t}\n\t\t}\n\n\t\t// Animate inline elements as inline-block\n\t\tif ( display === \"inline\" || display === \"inline-block\" && restoreDisplay != null ) {\n\t\t\tif ( jQuery.css( elem, \"float\" ) === \"none\" ) {\n\n\t\t\t\t// Restore the original display value at the end of pure show/hide animations\n\t\t\t\tif ( !propTween ) {\n\t\t\t\t\tanim.done( function() {\n\t\t\t\t\t\tstyle.display = restoreDisplay;\n\t\t\t\t\t} );\n\t\t\t\t\tif ( restoreDisplay == null ) {\n\t\t\t\t\t\tdisplay = style.display;\n\t\t\t\t\t\trestoreDisplay = display === \"none\" ? \"\" : display;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tstyle.display = \"inline-block\";\n\t\t\t}\n\t\t}\n\t}\n\n\tif ( opts.overflow ) {\n\t\tstyle.overflow = \"hidden\";\n\t\tanim.always( function() {\n\t\t\tstyle.overflow = opts.overflow[ 0 ];\n\t\t\tstyle.overflowX = opts.overflow[ 1 ];\n\t\t\tstyle.overflowY = opts.overflow[ 2 ];\n\t\t} );\n\t}\n\n\t// Implement show/hide animations\n\tpropTween = false;\n\tfor ( prop in orig ) {\n\n\t\t// General show/hide setup for this element animation\n\t\tif ( !propTween ) {\n\t\t\tif ( dataShow ) {\n\t\t\t\tif ( \"hidden\" in dataShow ) {\n\t\t\t\t\thidden = dataShow.hidden;\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tdataShow = dataPriv.access( elem, \"fxshow\", { display: restoreDisplay } );\n\t\t\t}\n\n\t\t\t// Store hidden/visible for toggle so `.stop().toggle()` \"reverses\"\n\t\t\tif ( toggle ) {\n\t\t\t\tdataShow.hidden = !hidden;\n\t\t\t}\n\n\t\t\t// Show elements before animating them\n\t\t\tif ( hidden ) {\n\t\t\t\tshowHide( [ elem ], true );\n\t\t\t}\n\n\t\t\t/* eslint-disable no-loop-func */\n\n\t\t\tanim.done( function() {\n\n\t\t\t/* eslint-enable no-loop-func */\n\n\t\t\t\t// The final step of a \"hide\" animation is actually hiding the element\n\t\t\t\tif ( !hidden ) {\n\t\t\t\t\tshowHide( [ elem ] );\n\t\t\t\t}\n\t\t\t\tdataPriv.remove( elem, \"fxshow\" );\n\t\t\t\tfor ( prop in orig ) {\n\t\t\t\t\tjQuery.style( elem, prop, orig[ prop ] );\n\t\t\t\t}\n\t\t\t} );\n\t\t}\n\n\t\t// Per-property setup\n\t\tpropTween = createTween( hidden ? dataShow[ prop ] : 0, prop, anim );\n\t\tif ( !( prop in dataShow ) ) {\n\t\t\tdataShow[ prop ] = propTween.start;\n\t\t\tif ( hidden ) {\n\t\t\t\tpropTween.end = propTween.start;\n\t\t\t\tpropTween.start = 0;\n\t\t\t}\n\t\t}\n\t}\n}\n\nfunction propFilter( props, specialEasing ) {\n\tvar index, name, easing, value, hooks;\n\n\t// camelCase, specialEasing and expand cssHook pass\n\tfor ( index in props ) {\n\t\tname = camelCase( index );\n\t\teasing = specialEasing[ name ];\n\t\tvalue = props[ index ];\n\t\tif ( Array.isArray( value ) ) {\n\t\t\teasing = value[ 1 ];\n\t\t\tvalue = props[ index ] = value[ 0 ];\n\t\t}\n\n\t\tif ( index !== name ) {\n\t\t\tprops[ name ] = value;\n\t\t\tdelete props[ index ];\n\t\t}\n\n\t\thooks = jQuery.cssHooks[ name ];\n\t\tif ( hooks && \"expand\" in hooks ) {\n\t\t\tvalue = hooks.expand( value );\n\t\t\tdelete props[ name ];\n\n\t\t\t// Not quite $.extend, this won't overwrite existing keys.\n\t\t\t// Reusing 'index' because we have the correct \"name\"\n\t\t\tfor ( index in value ) {\n\t\t\t\tif ( !( index in props ) ) {\n\t\t\t\t\tprops[ index ] = value[ index ];\n\t\t\t\t\tspecialEasing[ index ] = easing;\n\t\t\t\t}\n\t\t\t}\n\t\t} else {\n\t\t\tspecialEasing[ name ] = easing;\n\t\t}\n\t}\n}\n\nfunction Animation( elem, properties, options ) {\n\tvar result,\n\t\tstopped,\n\t\tindex = 0,\n\t\tlength = Animation.prefilters.length,\n\t\tdeferred = jQuery.Deferred().always( function() {\n\n\t\t\t// Don't match elem in the :animated selector\n\t\t\tdelete tick.elem;\n\t\t} ),\n\t\ttick = function() {\n\t\t\tif ( stopped ) {\n\t\t\t\treturn false;\n\t\t\t}\n\t\t\tvar currentTime = fxNow || createFxNow(),\n\t\t\t\tremaining = Math.max( 0, animation.startTime + animation.duration - currentTime ),\n\n\t\t\t\t// Support: Android 2.3 only\n\t\t\t\t// Archaic crash bug won't allow us to use `1 - ( 0.5 || 0 )` (#12497)\n\t\t\t\ttemp = remaining / animation.duration || 0,\n\t\t\t\tpercent = 1 - temp,\n\t\t\t\tindex = 0,\n\t\t\t\tlength = animation.tweens.length;\n\n\t\t\tfor ( ; index < length; index++ ) {\n\t\t\t\tanimation.tweens[ index ].run( percent );\n\t\t\t}\n\n\t\t\tdeferred.notifyWith( elem, [ animation, percent, remaining ] );\n\n\t\t\t// If there's more to do, yield\n\t\t\tif ( percent < 1 && length ) {\n\t\t\t\treturn remaining;\n\t\t\t}\n\n\t\t\t// If this was an empty animation, synthesize a final progress notification\n\t\t\tif ( !length ) {\n\t\t\t\tdeferred.notifyWith( elem, [ animation, 1, 0 ] );\n\t\t\t}\n\n\t\t\t// Resolve the animation and report its conclusion\n\t\t\tdeferred.resolveWith( elem, [ animation ] );\n\t\t\treturn false;\n\t\t},\n\t\tanimation = deferred.promise( {\n\t\t\telem: elem,\n\t\t\tprops: jQuery.extend( {}, properties ),\n\t\t\topts: jQuery.extend( true, {\n\t\t\t\tspecialEasing: {},\n\t\t\t\teasing: jQuery.easing._default\n\t\t\t}, options ),\n\t\t\toriginalProperties: properties,\n\t\t\toriginalOptions: options,\n\t\t\tstartTime: fxNow || createFxNow(),\n\t\t\tduration: options.duration,\n\t\t\ttweens: [],\n\t\t\tcreateTween: function( prop, end ) {\n\t\t\t\tvar tween = jQuery.Tween( elem, animation.opts, prop, end,\n\t\t\t\t\t\tanimation.opts.specialEasing[ prop ] || animation.opts.easing );\n\t\t\t\tanimation.tweens.push( tween );\n\t\t\t\treturn tween;\n\t\t\t},\n\t\t\tstop: function( gotoEnd ) {\n\t\t\t\tvar index = 0,\n\n\t\t\t\t\t// If we are going to the end, we want to run all the tweens\n\t\t\t\t\t// otherwise we skip this part\n\t\t\t\t\tlength = gotoEnd ? animation.tweens.length : 0;\n\t\t\t\tif ( stopped ) {\n\t\t\t\t\treturn this;\n\t\t\t\t}\n\t\t\t\tstopped = true;\n\t\t\t\tfor ( ; index < length; index++ ) {\n\t\t\t\t\tanimation.tweens[ index ].run( 1 );\n\t\t\t\t}\n\n\t\t\t\t// Resolve when we played the last frame; otherwise, reject\n\t\t\t\tif ( gotoEnd ) {\n\t\t\t\t\tdeferred.notifyWith( elem, [ animation, 1, 0 ] );\n\t\t\t\t\tdeferred.resolveWith( elem, [ animation, gotoEnd ] );\n\t\t\t\t} else {\n\t\t\t\t\tdeferred.rejectWith( elem, [ animation, gotoEnd ] );\n\t\t\t\t}\n\t\t\t\treturn this;\n\t\t\t}\n\t\t} ),\n\t\tprops = animation.props;\n\n\tpropFilter( props, animation.opts.specialEasing );\n\n\tfor ( ; index < length; index++ ) {\n\t\tresult = Animation.prefilters[ index ].call( animation, elem, props, animation.opts );\n\t\tif ( result ) {\n\t\t\tif ( isFunction( result.stop ) ) {\n\t\t\t\tjQuery._queueHooks( animation.elem, animation.opts.queue ).stop =\n\t\t\t\t\tresult.stop.bind( result );\n\t\t\t}\n\t\t\treturn result;\n\t\t}\n\t}\n\n\tjQuery.map( props, createTween, animation );\n\n\tif ( isFunction( animation.opts.start ) ) {\n\t\tanimation.opts.start.call( elem, animation );\n\t}\n\n\t// Attach callbacks from options\n\tanimation\n\t\t.progress( animation.opts.progress )\n\t\t.done( animation.opts.done, animation.opts.complete )\n\t\t.fail( animation.opts.fail )\n\t\t.always( animation.opts.always );\n\n\tjQuery.fx.timer(\n\t\tjQuery.extend( tick, {\n\t\t\telem: elem,\n\t\t\tanim: animation,\n\t\t\tqueue: animation.opts.queue\n\t\t} )\n\t);\n\n\treturn animation;\n}\n\njQuery.Animation = jQuery.extend( Animation, {\n\n\ttweeners: {\n\t\t\"*\": [ function( prop, value ) {\n\t\t\tvar tween = this.createTween( prop, value );\n\t\t\tadjustCSS( tween.elem, prop, rcssNum.exec( value ), tween );\n\t\t\treturn tween;\n\t\t} ]\n\t},\n\n\ttweener: function( props, callback ) {\n\t\tif ( isFunction( props ) ) {\n\t\t\tcallback = props;\n\t\t\tprops = [ \"*\" ];\n\t\t} else {\n\t\t\tprops = props.match( rnothtmlwhite );\n\t\t}\n\n\t\tvar prop,\n\t\t\tindex = 0,\n\t\t\tlength = props.length;\n\n\t\tfor ( ; index < length; index++ ) {\n\t\t\tprop = props[ index ];\n\t\t\tAnimation.tweeners[ prop ] = Animation.tweeners[ prop ] || [];\n\t\t\tAnimation.tweeners[ prop ].unshift( callback );\n\t\t}\n\t},\n\n\tprefilters: [ defaultPrefilter ],\n\n\tprefilter: function( callback, prepend ) {\n\t\tif ( prepend ) {\n\t\t\tAnimation.prefilters.unshift( callback );\n\t\t} else {\n\t\t\tAnimation.prefilters.push( callback );\n\t\t}\n\t}\n} );\n\njQuery.speed = function( speed, easing, fn ) {\n\tvar opt = speed && typeof speed === \"object\" ? jQuery.extend( {}, speed ) : {\n\t\tcomplete: fn || !fn && easing ||\n\t\t\tisFunction( speed ) && speed,\n\t\tduration: speed,\n\t\teasing: fn && easing || easing && !isFunction( easing ) && easing\n\t};\n\n\t// Go to the end state if fx are off\n\tif ( jQuery.fx.off ) {\n\t\topt.duration = 0;\n\n\t} else {\n\t\tif ( typeof opt.duration !== \"number\" ) {\n\t\t\tif ( opt.duration in jQuery.fx.speeds ) {\n\t\t\t\topt.duration = jQuery.fx.speeds[ opt.duration ];\n\n\t\t\t} else {\n\t\t\t\topt.duration = jQuery.fx.speeds._default;\n\t\t\t}\n\t\t}\n\t}\n\n\t// Normalize opt.queue - true/undefined/null -> \"fx\"\n\tif ( opt.queue == null || opt.queue === true ) {\n\t\topt.queue = \"fx\";\n\t}\n\n\t// Queueing\n\topt.old = opt.complete;\n\n\topt.complete = function() {\n\t\tif ( isFunction( opt.old ) ) {\n\t\t\topt.old.call( this );\n\t\t}\n\n\t\tif ( opt.queue ) {\n\t\t\tjQuery.dequeue( this, opt.queue );\n\t\t}\n\t};\n\n\treturn opt;\n};\n\njQuery.fn.extend( {\n\tfadeTo: function( speed, to, easing, callback ) {\n\n\t\t// Show any hidden elements after setting opacity to 0\n\t\treturn this.filter( isHiddenWithinTree ).css( \"opacity\", 0 ).show()\n\n\t\t\t// Animate to the value specified\n\t\t\t.end().animate( { opacity: to }, speed, easing, callback );\n\t},\n\tanimate: function( prop, speed, easing, callback ) {\n\t\tvar empty = jQuery.isEmptyObject( prop ),\n\t\t\toptall = jQuery.speed( speed, easing, callback ),\n\t\t\tdoAnimation = function() {\n\n\t\t\t\t// Operate on a copy of prop so per-property easing won't be lost\n\t\t\t\tvar anim = Animation( this, jQuery.extend( {}, prop ), optall );\n\n\t\t\t\t// Empty animations, or finishing resolves immediately\n\t\t\t\tif ( empty || dataPriv.get( this, \"finish\" ) ) {\n\t\t\t\t\tanim.stop( true );\n\t\t\t\t}\n\t\t\t};\n\t\t\tdoAnimation.finish = doAnimation;\n\n\t\treturn empty || optall.queue === false ?\n\t\t\tthis.each( doAnimation ) :\n\t\t\tthis.queue( optall.queue, doAnimation );\n\t},\n\tstop: function( type, clearQueue, gotoEnd ) {\n\t\tvar stopQueue = function( hooks ) {\n\t\t\tvar stop = hooks.stop;\n\t\t\tdelete hooks.stop;\n\t\t\tstop( gotoEnd );\n\t\t};\n\n\t\tif ( typeof type !== \"string\" ) {\n\t\t\tgotoEnd = clearQueue;\n\t\t\tclearQueue = type;\n\t\t\ttype = undefined;\n\t\t}\n\t\tif ( clearQueue && type !== false ) {\n\t\t\tthis.queue( type || \"fx\", [] );\n\t\t}\n\n\t\treturn this.each( function() {\n\t\t\tvar dequeue = true,\n\t\t\t\tindex = type != null && type + \"queueHooks\",\n\t\t\t\ttimers = jQuery.timers,\n\t\t\t\tdata = dataPriv.get( this );\n\n\t\t\tif ( index ) {\n\t\t\t\tif ( data[ index ] && data[ index ].stop ) {\n\t\t\t\t\tstopQueue( data[ index ] );\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tfor ( index in data ) {\n\t\t\t\t\tif ( data[ index ] && data[ index ].stop && rrun.test( index ) ) {\n\t\t\t\t\t\tstopQueue( data[ index ] );\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tfor ( index = timers.length; index--; ) {\n\t\t\t\tif ( timers[ index ].elem === this &&\n\t\t\t\t\t( type == null || timers[ index ].queue === type ) ) {\n\n\t\t\t\t\ttimers[ index ].anim.stop( gotoEnd );\n\t\t\t\t\tdequeue = false;\n\t\t\t\t\ttimers.splice( index, 1 );\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// Start the next in the queue if the last step wasn't forced.\n\t\t\t// Timers currently will call their complete callbacks, which\n\t\t\t// will dequeue but only if they were gotoEnd.\n\t\t\tif ( dequeue || !gotoEnd ) {\n\t\t\t\tjQuery.dequeue( this, type );\n\t\t\t}\n\t\t} );\n\t},\n\tfinish: function( type ) {\n\t\tif ( type !== false ) {\n\t\t\ttype = type || \"fx\";\n\t\t}\n\t\treturn this.each( function() {\n\t\t\tvar index,\n\t\t\t\tdata = dataPriv.get( this ),\n\t\t\t\tqueue = data[ type + \"queue\" ],\n\t\t\t\thooks = data[ type + \"queueHooks\" ],\n\t\t\t\ttimers = jQuery.timers,\n\t\t\t\tlength = queue ? queue.length : 0;\n\n\t\t\t// Enable finishing flag on private data\n\t\t\tdata.finish = true;\n\n\t\t\t// Empty the queue first\n\t\t\tjQuery.queue( this, type, [] );\n\n\t\t\tif ( hooks && hooks.stop ) {\n\t\t\t\thooks.stop.call( this, true );\n\t\t\t}\n\n\t\t\t// Look for any active animations, and finish them\n\t\t\tfor ( index = timers.length; index--; ) {\n\t\t\t\tif ( timers[ index ].elem === this && timers[ index ].queue === type ) {\n\t\t\t\t\ttimers[ index ].anim.stop( true );\n\t\t\t\t\ttimers.splice( index, 1 );\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// Look for any animations in the old queue and finish them\n\t\t\tfor ( index = 0; index < length; index++ ) {\n\t\t\t\tif ( queue[ index ] && queue[ index ].finish ) {\n\t\t\t\t\tqueue[ index ].finish.call( this );\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// Turn off finishing flag\n\t\t\tdelete data.finish;\n\t\t} );\n\t}\n} );\n\njQuery.each( [ \"toggle\", \"show\", \"hide\" ], function( i, name ) {\n\tvar cssFn = jQuery.fn[ name ];\n\tjQuery.fn[ name ] = function( speed, easing, callback ) {\n\t\treturn speed == null || typeof speed === \"boolean\" ?\n\t\t\tcssFn.apply( this, arguments ) :\n\t\t\tthis.animate( genFx( name, true ), speed, easing, callback );\n\t};\n} );\n\n// Generate shortcuts for custom animations\njQuery.each( {\n\tslideDown: genFx( \"show\" ),\n\tslideUp: genFx( \"hide\" ),\n\tslideToggle: genFx( \"toggle\" ),\n\tfadeIn: { opacity: \"show\" },\n\tfadeOut: { opacity: \"hide\" },\n\tfadeToggle: { opacity: \"toggle\" }\n}, function( name, props ) {\n\tjQuery.fn[ name ] = function( speed, easing, callback ) {\n\t\treturn this.animate( props, speed, easing, callback );\n\t};\n} );\n\njQuery.timers = [];\njQuery.fx.tick = function() {\n\tvar timer,\n\t\ti = 0,\n\t\ttimers = jQuery.timers;\n\n\tfxNow = Date.now();\n\n\tfor ( ; i < timers.length; i++ ) {\n\t\ttimer = timers[ i ];\n\n\t\t// Run the timer and safely remove it when done (allowing for external removal)\n\t\tif ( !timer() && timers[ i ] === timer ) {\n\t\t\ttimers.splice( i--, 1 );\n\t\t}\n\t}\n\n\tif ( !timers.length ) {\n\t\tjQuery.fx.stop();\n\t}\n\tfxNow = undefined;\n};\n\njQuery.fx.timer = function( timer ) {\n\tjQuery.timers.push( timer );\n\tjQuery.fx.start();\n};\n\njQuery.fx.interval = 13;\njQuery.fx.start = function() {\n\tif ( inProgress ) {\n\t\treturn;\n\t}\n\n\tinProgress = true;\n\tschedule();\n};\n\njQuery.fx.stop = function() {\n\tinProgress = null;\n};\n\njQuery.fx.speeds = {\n\tslow: 600,\n\tfast: 200,\n\n\t// Default speed\n\t_default: 400\n};\n\n\n// Based off of the plugin by Clint Helfers, with permission.\n// https://web.archive.org/web/20100324014747/http://blindsignals.com/index.php/2009/07/jquery-delay/\njQuery.fn.delay = function( time, type ) {\n\ttime = jQuery.fx ? jQuery.fx.speeds[ time ] || time : time;\n\ttype = type || \"fx\";\n\n\treturn this.queue( type, function( next, hooks ) {\n\t\tvar timeout = window.setTimeout( next, time );\n\t\thooks.stop = function() {\n\t\t\twindow.clearTimeout( timeout );\n\t\t};\n\t} );\n};\n\n\n( function() {\n\tvar input = document.createElement( \"input\" ),\n\t\tselect = document.createElement( \"select\" ),\n\t\topt = select.appendChild( document.createElement( \"option\" ) );\n\n\tinput.type = \"checkbox\";\n\n\t// Support: Android <=4.3 only\n\t// Default value for a checkbox should be \"on\"\n\tsupport.checkOn = input.value !== \"\";\n\n\t// Support: IE <=11 only\n\t// Must access selectedIndex to make default options select\n\tsupport.optSelected = opt.selected;\n\n\t// Support: IE <=11 only\n\t// An input loses its value after becoming a radio\n\tinput = document.createElement( \"input\" );\n\tinput.value = \"t\";\n\tinput.type = \"radio\";\n\tsupport.radioValue = input.value === \"t\";\n} )();\n\n\nvar boolHook,\n\tattrHandle = jQuery.expr.attrHandle;\n\njQuery.fn.extend( {\n\tattr: function( name, value ) {\n\t\treturn access( this, jQuery.attr, name, value, arguments.length > 1 );\n\t},\n\n\tremoveAttr: function( name ) {\n\t\treturn this.each( function() {\n\t\t\tjQuery.removeAttr( this, name );\n\t\t} );\n\t}\n} );\n\njQuery.extend( {\n\tattr: function( elem, name, value ) {\n\t\tvar ret, hooks,\n\t\t\tnType = elem.nodeType;\n\n\t\t// Don't get/set attributes on text, comment and attribute nodes\n\t\tif ( nType === 3 || nType === 8 || nType === 2 ) {\n\t\t\treturn;\n\t\t}\n\n\t\t// Fallback to prop when attributes are not supported\n\t\tif ( typeof elem.getAttribute === \"undefined\" ) {\n\t\t\treturn jQuery.prop( elem, name, value );\n\t\t}\n\n\t\t// Attribute hooks are determined by the lowercase version\n\t\t// Grab necessary hook if one is defined\n\t\tif ( nType !== 1 || !jQuery.isXMLDoc( elem ) ) {\n\t\t\thooks = jQuery.attrHooks[ name.toLowerCase() ] ||\n\t\t\t\t( jQuery.expr.match.bool.test( name ) ? boolHook : undefined );\n\t\t}\n\n\t\tif ( value !== undefined ) {\n\t\t\tif ( value === null ) {\n\t\t\t\tjQuery.removeAttr( elem, name );\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tif ( hooks && \"set\" in hooks &&\n\t\t\t\t( ret = hooks.set( elem, value, name ) ) !== undefined ) {\n\t\t\t\treturn ret;\n\t\t\t}\n\n\t\t\telem.setAttribute( name, value + \"\" );\n\t\t\treturn value;\n\t\t}\n\n\t\tif ( hooks && \"get\" in hooks && ( ret = hooks.get( elem, name ) ) !== null ) {\n\t\t\treturn ret;\n\t\t}\n\n\t\tret = jQuery.find.attr( elem, name );\n\n\t\t// Non-existent attributes return null, we normalize to undefined\n\t\treturn ret == null ? undefined : ret;\n\t},\n\n\tattrHooks: {\n\t\ttype: {\n\t\t\tset: function( elem, value ) {\n\t\t\t\tif ( !support.radioValue && value === \"radio\" &&\n\t\t\t\t\tnodeName( elem, \"input\" ) ) {\n\t\t\t\t\tvar val = elem.value;\n\t\t\t\t\telem.setAttribute( \"type\", value );\n\t\t\t\t\tif ( val ) {\n\t\t\t\t\t\telem.value = val;\n\t\t\t\t\t}\n\t\t\t\t\treturn value;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t},\n\n\tremoveAttr: function( elem, value ) {\n\t\tvar name,\n\t\t\ti = 0,\n\n\t\t\t// Attribute names can contain non-HTML whitespace characters\n\t\t\t// https://html.spec.whatwg.org/multipage/syntax.html#attributes-2\n\t\t\tattrNames = value && value.match( rnothtmlwhite );\n\n\t\tif ( attrNames && elem.nodeType === 1 ) {\n\t\t\twhile ( ( name = attrNames[ i++ ] ) ) {\n\t\t\t\telem.removeAttribute( name );\n\t\t\t}\n\t\t}\n\t}\n} );\n\n// Hooks for boolean attributes\nboolHook = {\n\tset: function( elem, value, name ) {\n\t\tif ( value === false ) {\n\n\t\t\t// Remove boolean attributes when set to false\n\t\t\tjQuery.removeAttr( elem, name );\n\t\t} else {\n\t\t\telem.setAttribute( name, name );\n\t\t}\n\t\treturn name;\n\t}\n};\n\njQuery.each( jQuery.expr.match.bool.source.match( /\\w+/g ), function( i, name ) {\n\tvar getter = attrHandle[ name ] || jQuery.find.attr;\n\n\tattrHandle[ name ] = function( elem, name, isXML ) {\n\t\tvar ret, handle,\n\t\t\tlowercaseName = name.toLowerCase();\n\n\t\tif ( !isXML ) {\n\n\t\t\t// Avoid an infinite loop by temporarily removing this function from the getter\n\t\t\thandle = attrHandle[ lowercaseName ];\n\t\t\tattrHandle[ lowercaseName ] = ret;\n\t\t\tret = getter( elem, name, isXML ) != null ?\n\t\t\t\tlowercaseName :\n\t\t\t\tnull;\n\t\t\tattrHandle[ lowercaseName ] = handle;\n\t\t}\n\t\treturn ret;\n\t};\n} );\n\n\n\n\nvar rfocusable = /^(?:input|select|textarea|button)$/i,\n\trclickable = /^(?:a|area)$/i;\n\njQuery.fn.extend( {\n\tprop: function( name, value ) {\n\t\treturn access( this, jQuery.prop, name, value, arguments.length > 1 );\n\t},\n\n\tremoveProp: function( name ) {\n\t\treturn this.each( function() {\n\t\t\tdelete this[ jQuery.propFix[ name ] || name ];\n\t\t} );\n\t}\n} );\n\njQuery.extend( {\n\tprop: function( elem, name, value ) {\n\t\tvar ret, hooks,\n\t\t\tnType = elem.nodeType;\n\n\t\t// Don't get/set properties on text, comment and attribute nodes\n\t\tif ( nType === 3 || nType === 8 || nType === 2 ) {\n\t\t\treturn;\n\t\t}\n\n\t\tif ( nType !== 1 || !jQuery.isXMLDoc( elem ) ) {\n\n\t\t\t// Fix name and attach hooks\n\t\t\tname = jQuery.propFix[ name ] || name;\n\t\t\thooks = jQuery.propHooks[ name ];\n\t\t}\n\n\t\tif ( value !== undefined ) {\n\t\t\tif ( hooks && \"set\" in hooks &&\n\t\t\t\t( ret = hooks.set( elem, value, name ) ) !== undefined ) {\n\t\t\t\treturn ret;\n\t\t\t}\n\n\t\t\treturn ( elem[ name ] = value );\n\t\t}\n\n\t\tif ( hooks && \"get\" in hooks && ( ret = hooks.get( elem, name ) ) !== null ) {\n\t\t\treturn ret;\n\t\t}\n\n\t\treturn elem[ name ];\n\t},\n\n\tpropHooks: {\n\t\ttabIndex: {\n\t\t\tget: function( elem ) {\n\n\t\t\t\t// Support: IE <=9 - 11 only\n\t\t\t\t// elem.tabIndex doesn't always return the\n\t\t\t\t// correct value when it hasn't been explicitly set\n\t\t\t\t// https://web.archive.org/web/20141116233347/http://fluidproject.org/blog/2008/01/09/getting-setting-and-removing-tabindex-values-with-javascript/\n\t\t\t\t// Use proper attribute retrieval(#12072)\n\t\t\t\tvar tabindex = jQuery.find.attr( elem, \"tabindex\" );\n\n\t\t\t\tif ( tabindex ) {\n\t\t\t\t\treturn parseInt( tabindex, 10 );\n\t\t\t\t}\n\n\t\t\t\tif (\n\t\t\t\t\trfocusable.test( elem.nodeName ) ||\n\t\t\t\t\trclickable.test( elem.nodeName ) &&\n\t\t\t\t\telem.href\n\t\t\t\t) {\n\t\t\t\t\treturn 0;\n\t\t\t\t}\n\n\t\t\t\treturn -1;\n\t\t\t}\n\t\t}\n\t},\n\n\tpropFix: {\n\t\t\"for\": \"htmlFor\",\n\t\t\"class\": \"className\"\n\t}\n} );\n\n// Support: IE <=11 only\n// Accessing the selectedIndex property\n// forces the browser to respect setting selected\n// on the option\n// The getter ensures a default option is selected\n// when in an optgroup\n// eslint rule \"no-unused-expressions\" is disabled for this code\n// since it considers such accessions noop\nif ( !support.optSelected ) {\n\tjQuery.propHooks.selected = {\n\t\tget: function( elem ) {\n\n\t\t\t/* eslint no-unused-expressions: \"off\" */\n\n\t\t\tvar parent = elem.parentNode;\n\t\t\tif ( parent && parent.parentNode ) {\n\t\t\t\tparent.parentNode.selectedIndex;\n\t\t\t}\n\t\t\treturn null;\n\t\t},\n\t\tset: function( elem ) {\n\n\t\t\t/* eslint no-unused-expressions: \"off\" */\n\n\t\t\tvar parent = elem.parentNode;\n\t\t\tif ( parent ) {\n\t\t\t\tparent.selectedIndex;\n\n\t\t\t\tif ( parent.parentNode ) {\n\t\t\t\t\tparent.parentNode.selectedIndex;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t};\n}\n\njQuery.each( [\n\t\"tabIndex\",\n\t\"readOnly\",\n\t\"maxLength\",\n\t\"cellSpacing\",\n\t\"cellPadding\",\n\t\"rowSpan\",\n\t\"colSpan\",\n\t\"useMap\",\n\t\"frameBorder\",\n\t\"contentEditable\"\n], function() {\n\tjQuery.propFix[ this.toLowerCase() ] = this;\n} );\n\n\n\n\n\t// Strip and collapse whitespace according to HTML spec\n\t// https://infra.spec.whatwg.org/#strip-and-collapse-ascii-whitespace\n\tfunction stripAndCollapse( value ) {\n\t\tvar tokens = value.match( rnothtmlwhite ) || [];\n\t\treturn tokens.join( \" \" );\n\t}\n\n\nfunction getClass( elem ) {\n\treturn elem.getAttribute && elem.getAttribute( \"class\" ) || \"\";\n}\n\nfunction classesToArray( value ) {\n\tif ( Array.isArray( value ) ) {\n\t\treturn value;\n\t}\n\tif ( typeof value === \"string\" ) {\n\t\treturn value.match( rnothtmlwhite ) || [];\n\t}\n\treturn [];\n}\n\njQuery.fn.extend( {\n\taddClass: function( value ) {\n\t\tvar classes, elem, cur, curValue, clazz, j, finalValue,\n\t\t\ti = 0;\n\n\t\tif ( isFunction( value ) ) {\n\t\t\treturn this.each( function( j ) {\n\t\t\t\tjQuery( this ).addClass( value.call( this, j, getClass( this ) ) );\n\t\t\t} );\n\t\t}\n\n\t\tclasses = classesToArray( value );\n\n\t\tif ( classes.length ) {\n\t\t\twhile ( ( elem = this[ i++ ] ) ) {\n\t\t\t\tcurValue = getClass( elem );\n\t\t\t\tcur = elem.nodeType === 1 && ( \" \" + stripAndCollapse( curValue ) + \" \" );\n\n\t\t\t\tif ( cur ) {\n\t\t\t\t\tj = 0;\n\t\t\t\t\twhile ( ( clazz = classes[ j++ ] ) ) {\n\t\t\t\t\t\tif ( cur.indexOf( \" \" + clazz + \" \" ) < 0 ) {\n\t\t\t\t\t\t\tcur += clazz + \" \";\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\t// Only assign if different to avoid unneeded rendering.\n\t\t\t\t\tfinalValue = stripAndCollapse( cur );\n\t\t\t\t\tif ( curValue !== finalValue ) {\n\t\t\t\t\t\telem.setAttribute( \"class\", finalValue );\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\treturn this;\n\t},\n\n\tremoveClass: function( value ) {\n\t\tvar classes, elem, cur, curValue, clazz, j, finalValue,\n\t\t\ti = 0;\n\n\t\tif ( isFunction( value ) ) {\n\t\t\treturn this.each( function( j ) {\n\t\t\t\tjQuery( this ).removeClass( value.call( this, j, getClass( this ) ) );\n\t\t\t} );\n\t\t}\n\n\t\tif ( !arguments.length ) {\n\t\t\treturn this.attr( \"class\", \"\" );\n\t\t}\n\n\t\tclasses = classesToArray( value );\n\n\t\tif ( classes.length ) {\n\t\t\twhile ( ( elem = this[ i++ ] ) ) {\n\t\t\t\tcurValue = getClass( elem );\n\n\t\t\t\t// This expression is here for better compressibility (see addClass)\n\t\t\t\tcur = elem.nodeType === 1 && ( \" \" + stripAndCollapse( curValue ) + \" \" );\n\n\t\t\t\tif ( cur ) {\n\t\t\t\t\tj = 0;\n\t\t\t\t\twhile ( ( clazz = classes[ j++ ] ) ) {\n\n\t\t\t\t\t\t// Remove *all* instances\n\t\t\t\t\t\twhile ( cur.indexOf( \" \" + clazz + \" \" ) > -1 ) {\n\t\t\t\t\t\t\tcur = cur.replace( \" \" + clazz + \" \", \" \" );\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\t// Only assign if different to avoid unneeded rendering.\n\t\t\t\t\tfinalValue = stripAndCollapse( cur );\n\t\t\t\t\tif ( curValue !== finalValue ) {\n\t\t\t\t\t\telem.setAttribute( \"class\", finalValue );\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\treturn this;\n\t},\n\n\ttoggleClass: function( value, stateVal ) {\n\t\tvar type = typeof value,\n\t\t\tisValidValue = type === \"string\" || Array.isArray( value );\n\n\t\tif ( typeof stateVal === \"boolean\" && isValidValue ) {\n\t\t\treturn stateVal ? this.addClass( value ) : this.removeClass( value );\n\t\t}\n\n\t\tif ( isFunction( value ) ) {\n\t\t\treturn this.each( function( i ) {\n\t\t\t\tjQuery( this ).toggleClass(\n\t\t\t\t\tvalue.call( this, i, getClass( this ), stateVal ),\n\t\t\t\t\tstateVal\n\t\t\t\t);\n\t\t\t} );\n\t\t}\n\n\t\treturn this.each( function() {\n\t\t\tvar className, i, self, classNames;\n\n\t\t\tif ( isValidValue ) {\n\n\t\t\t\t// Toggle individual class names\n\t\t\t\ti = 0;\n\t\t\t\tself = jQuery( this );\n\t\t\t\tclassNames = classesToArray( value );\n\n\t\t\t\twhile ( ( className = classNames[ i++ ] ) ) {\n\n\t\t\t\t\t// Check each className given, space separated list\n\t\t\t\t\tif ( self.hasClass( className ) ) {\n\t\t\t\t\t\tself.removeClass( className );\n\t\t\t\t\t} else {\n\t\t\t\t\t\tself.addClass( className );\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t// Toggle whole class name\n\t\t\t} else if ( value === undefined || type === \"boolean\" ) {\n\t\t\t\tclassName = getClass( this );\n\t\t\t\tif ( className ) {\n\n\t\t\t\t\t// Store className if set\n\t\t\t\t\tdataPriv.set( this, \"__className__\", className );\n\t\t\t\t}\n\n\t\t\t\t// If the element has a class name or if we're passed `false`,\n\t\t\t\t// then remove the whole classname (if there was one, the above saved it).\n\t\t\t\t// Otherwise bring back whatever was previously saved (if anything),\n\t\t\t\t// falling back to the empty string if nothing was stored.\n\t\t\t\tif ( this.setAttribute ) {\n\t\t\t\t\tthis.setAttribute( \"class\",\n\t\t\t\t\t\tclassName || value === false ?\n\t\t\t\t\t\t\"\" :\n\t\t\t\t\t\tdataPriv.get( this, \"__className__\" ) || \"\"\n\t\t\t\t\t);\n\t\t\t\t}\n\t\t\t}\n\t\t} );\n\t},\n\n\thasClass: function( selector ) {\n\t\tvar className, elem,\n\t\t\ti = 0;\n\n\t\tclassName = \" \" + selector + \" \";\n\t\twhile ( ( elem = this[ i++ ] ) ) {\n\t\t\tif ( elem.nodeType === 1 &&\n\t\t\t\t( \" \" + stripAndCollapse( getClass( elem ) ) + \" \" ).indexOf( className ) > -1 ) {\n\t\t\t\t\treturn true;\n\t\t\t}\n\t\t}\n\n\t\treturn false;\n\t}\n} );\n\n\n\n\nvar rreturn = /\\r/g;\n\njQuery.fn.extend( {\n\tval: function( value ) {\n\t\tvar hooks, ret, valueIsFunction,\n\t\t\telem = this[ 0 ];\n\n\t\tif ( !arguments.length ) {\n\t\t\tif ( elem ) {\n\t\t\t\thooks = jQuery.valHooks[ elem.type ] ||\n\t\t\t\t\tjQuery.valHooks[ elem.nodeName.toLowerCase() ];\n\n\t\t\t\tif ( hooks &&\n\t\t\t\t\t\"get\" in hooks &&\n\t\t\t\t\t( ret = hooks.get( elem, \"value\" ) ) !== undefined\n\t\t\t\t) {\n\t\t\t\t\treturn ret;\n\t\t\t\t}\n\n\t\t\t\tret = elem.value;\n\n\t\t\t\t// Handle most common string cases\n\t\t\t\tif ( typeof ret === \"string\" ) {\n\t\t\t\t\treturn ret.replace( rreturn, \"\" );\n\t\t\t\t}\n\n\t\t\t\t// Handle cases where value is null/undef or number\n\t\t\t\treturn ret == null ? \"\" : ret;\n\t\t\t}\n\n\t\t\treturn;\n\t\t}\n\n\t\tvalueIsFunction = isFunction( value );\n\n\t\treturn this.each( function( i ) {\n\t\t\tvar val;\n\n\t\t\tif ( this.nodeType !== 1 ) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tif ( valueIsFunction ) {\n\t\t\t\tval = value.call( this, i, jQuery( this ).val() );\n\t\t\t} else {\n\t\t\t\tval = value;\n\t\t\t}\n\n\t\t\t// Treat null/undefined as \"\"; convert numbers to string\n\t\t\tif ( val == null ) {\n\t\t\t\tval = \"\";\n\n\t\t\t} else if ( typeof val === \"number\" ) {\n\t\t\t\tval += \"\";\n\n\t\t\t} else if ( Array.isArray( val ) ) {\n\t\t\t\tval = jQuery.map( val, function( value ) {\n\t\t\t\t\treturn value == null ? \"\" : value + \"\";\n\t\t\t\t} );\n\t\t\t}\n\n\t\t\thooks = jQuery.valHooks[ this.type ] || jQuery.valHooks[ this.nodeName.toLowerCase() ];\n\n\t\t\t// If set returns undefined, fall back to normal setting\n\t\t\tif ( !hooks || !( \"set\" in hooks ) || hooks.set( this, val, \"value\" ) === undefined ) {\n\t\t\t\tthis.value = val;\n\t\t\t}\n\t\t} );\n\t}\n} );\n\njQuery.extend( {\n\tvalHooks: {\n\t\toption: {\n\t\t\tget: function( elem ) {\n\n\t\t\t\tvar val = jQuery.find.attr( elem, \"value\" );\n\t\t\t\treturn val != null ?\n\t\t\t\t\tval :\n\n\t\t\t\t\t// Support: IE <=10 - 11 only\n\t\t\t\t\t// option.text throws exceptions (#14686, #14858)\n\t\t\t\t\t// Strip and collapse whitespace\n\t\t\t\t\t// https://html.spec.whatwg.org/#strip-and-collapse-whitespace\n\t\t\t\t\tstripAndCollapse( jQuery.text( elem ) );\n\t\t\t}\n\t\t},\n\t\tselect: {\n\t\t\tget: function( elem ) {\n\t\t\t\tvar value, option, i,\n\t\t\t\t\toptions = elem.options,\n\t\t\t\t\tindex = elem.selectedIndex,\n\t\t\t\t\tone = elem.type === \"select-one\",\n\t\t\t\t\tvalues = one ? null : [],\n\t\t\t\t\tmax = one ? index + 1 : options.length;\n\n\t\t\t\tif ( index < 0 ) {\n\t\t\t\t\ti = max;\n\n\t\t\t\t} else {\n\t\t\t\t\ti = one ? index : 0;\n\t\t\t\t}\n\n\t\t\t\t// Loop through all the selected options\n\t\t\t\tfor ( ; i < max; i++ ) {\n\t\t\t\t\toption = options[ i ];\n\n\t\t\t\t\t// Support: IE <=9 only\n\t\t\t\t\t// IE8-9 doesn't update selected after form reset (#2551)\n\t\t\t\t\tif ( ( option.selected || i === index ) &&\n\n\t\t\t\t\t\t\t// Don't return options that are disabled or in a disabled optgroup\n\t\t\t\t\t\t\t!option.disabled &&\n\t\t\t\t\t\t\t( !option.parentNode.disabled ||\n\t\t\t\t\t\t\t\t!nodeName( option.parentNode, \"optgroup\" ) ) ) {\n\n\t\t\t\t\t\t// Get the specific value for the option\n\t\t\t\t\t\tvalue = jQuery( option ).val();\n\n\t\t\t\t\t\t// We don't need an array for one selects\n\t\t\t\t\t\tif ( one ) {\n\t\t\t\t\t\t\treturn value;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\t// Multi-Selects return an array\n\t\t\t\t\t\tvalues.push( value );\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\treturn values;\n\t\t\t},\n\n\t\t\tset: function( elem, value ) {\n\t\t\t\tvar optionSet, option,\n\t\t\t\t\toptions = elem.options,\n\t\t\t\t\tvalues = jQuery.makeArray( value ),\n\t\t\t\t\ti = options.length;\n\n\t\t\t\twhile ( i-- ) {\n\t\t\t\t\toption = options[ i ];\n\n\t\t\t\t\t/* eslint-disable no-cond-assign */\n\n\t\t\t\t\tif ( option.selected =\n\t\t\t\t\t\tjQuery.inArray( jQuery.valHooks.option.get( option ), values ) > -1\n\t\t\t\t\t) {\n\t\t\t\t\t\toptionSet = true;\n\t\t\t\t\t}\n\n\t\t\t\t\t/* eslint-enable no-cond-assign */\n\t\t\t\t}\n\n\t\t\t\t// Force browsers to behave consistently when non-matching value is set\n\t\t\t\tif ( !optionSet ) {\n\t\t\t\t\telem.selectedIndex = -1;\n\t\t\t\t}\n\t\t\t\treturn values;\n\t\t\t}\n\t\t}\n\t}\n} );\n\n// Radios and checkboxes getter/setter\njQuery.each( [ \"radio\", \"checkbox\" ], function() {\n\tjQuery.valHooks[ this ] = {\n\t\tset: function( elem, value ) {\n\t\t\tif ( Array.isArray( value ) ) {\n\t\t\t\treturn ( elem.checked = jQuery.inArray( jQuery( elem ).val(), value ) > -1 );\n\t\t\t}\n\t\t}\n\t};\n\tif ( !support.checkOn ) {\n\t\tjQuery.valHooks[ this ].get = function( elem ) {\n\t\t\treturn elem.getAttribute( \"value\" ) === null ? \"on\" : elem.value;\n\t\t};\n\t}\n} );\n\n\n\n\n// Return jQuery for attributes-only inclusion\n\n\nsupport.focusin = \"onfocusin\" in window;\n\n\nvar rfocusMorph = /^(?:focusinfocus|focusoutblur)$/,\n\tstopPropagationCallback = function( e ) {\n\t\te.stopPropagation();\n\t};\n\njQuery.extend( jQuery.event, {\n\n\ttrigger: function( event, data, elem, onlyHandlers ) {\n\n\t\tvar i, cur, tmp, bubbleType, ontype, handle, special, lastElement,\n\t\t\teventPath = [ elem || document ],\n\t\t\ttype = hasOwn.call( event, \"type\" ) ? event.type : event,\n\t\t\tnamespaces = hasOwn.call( event, \"namespace\" ) ? event.namespace.split( \".\" ) : [];\n\n\t\tcur = lastElement = tmp = elem = elem || document;\n\n\t\t// Don't do events on text and comment nodes\n\t\tif ( elem.nodeType === 3 || elem.nodeType === 8 ) {\n\t\t\treturn;\n\t\t}\n\n\t\t// focus/blur morphs to focusin/out; ensure we're not firing them right now\n\t\tif ( rfocusMorph.test( type + jQuery.event.triggered ) ) {\n\t\t\treturn;\n\t\t}\n\n\t\tif ( type.indexOf( \".\" ) > -1 ) {\n\n\t\t\t// Namespaced trigger; create a regexp to match event type in handle()\n\t\t\tnamespaces = type.split( \".\" );\n\t\t\ttype = namespaces.shift();\n\t\t\tnamespaces.sort();\n\t\t}\n\t\tontype = type.indexOf( \":\" ) < 0 && \"on\" + type;\n\n\t\t// Caller can pass in a jQuery.Event object, Object, or just an event type string\n\t\tevent = event[ jQuery.expando ] ?\n\t\t\tevent :\n\t\t\tnew jQuery.Event( type, typeof event === \"object\" && event );\n\n\t\t// Trigger bitmask: & 1 for native handlers; & 2 for jQuery (always true)\n\t\tevent.isTrigger = onlyHandlers ? 2 : 3;\n\t\tevent.namespace = namespaces.join( \".\" );\n\t\tevent.rnamespace = event.namespace ?\n\t\t\tnew RegExp( \"(^|\\\\.)\" + namespaces.join( \"\\\\.(?:.*\\\\.|)\" ) + \"(\\\\.|$)\" ) :\n\t\t\tnull;\n\n\t\t// Clean up the event in case it is being reused\n\t\tevent.result = undefined;\n\t\tif ( !event.target ) {\n\t\t\tevent.target = elem;\n\t\t}\n\n\t\t// Clone any incoming data and prepend the event, creating the handler arg list\n\t\tdata = data == null ?\n\t\t\t[ event ] :\n\t\t\tjQuery.makeArray( data, [ event ] );\n\n\t\t// Allow special events to draw outside the lines\n\t\tspecial = jQuery.event.special[ type ] || {};\n\t\tif ( !onlyHandlers && special.trigger && special.trigger.apply( elem, data ) === false ) {\n\t\t\treturn;\n\t\t}\n\n\t\t// Determine event propagation path in advance, per W3C events spec (#9951)\n\t\t// Bubble up to document, then to window; watch for a global ownerDocument var (#9724)\n\t\tif ( !onlyHandlers && !special.noBubble && !isWindow( elem ) ) {\n\n\t\t\tbubbleType = special.delegateType || type;\n\t\t\tif ( !rfocusMorph.test( bubbleType + type ) ) {\n\t\t\t\tcur = cur.parentNode;\n\t\t\t}\n\t\t\tfor ( ; cur; cur = cur.parentNode ) {\n\t\t\t\teventPath.push( cur );\n\t\t\t\ttmp = cur;\n\t\t\t}\n\n\t\t\t// Only add window if we got to document (e.g., not plain obj or detached DOM)\n\t\t\tif ( tmp === ( elem.ownerDocument || document ) ) {\n\t\t\t\teventPath.push( tmp.defaultView || tmp.parentWindow || window );\n\t\t\t}\n\t\t}\n\n\t\t// Fire handlers on the event path\n\t\ti = 0;\n\t\twhile ( ( cur = eventPath[ i++ ] ) && !event.isPropagationStopped() ) {\n\t\t\tlastElement = cur;\n\t\t\tevent.type = i > 1 ?\n\t\t\t\tbubbleType :\n\t\t\t\tspecial.bindType || type;\n\n\t\t\t// jQuery handler\n\t\t\thandle = ( dataPriv.get( cur, \"events\" ) || {} )[ event.type ] &&\n\t\t\t\tdataPriv.get( cur, \"handle\" );\n\t\t\tif ( handle ) {\n\t\t\t\thandle.apply( cur, data );\n\t\t\t}\n\n\t\t\t// Native handler\n\t\t\thandle = ontype && cur[ ontype ];\n\t\t\tif ( handle && handle.apply && acceptData( cur ) ) {\n\t\t\t\tevent.result = handle.apply( cur, data );\n\t\t\t\tif ( event.result === false ) {\n\t\t\t\t\tevent.preventDefault();\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\tevent.type = type;\n\n\t\t// If nobody prevented the default action, do it now\n\t\tif ( !onlyHandlers && !event.isDefaultPrevented() ) {\n\n\t\t\tif ( ( !special._default ||\n\t\t\t\tspecial._default.apply( eventPath.pop(), data ) === false ) &&\n\t\t\t\tacceptData( elem ) ) {\n\n\t\t\t\t// Call a native DOM method on the target with the same name as the event.\n\t\t\t\t// Don't do default actions on window, that's where global variables be (#6170)\n\t\t\t\tif ( ontype && isFunction( elem[ type ] ) && !isWindow( elem ) ) {\n\n\t\t\t\t\t// Don't re-trigger an onFOO event when we call its FOO() method\n\t\t\t\t\ttmp = elem[ ontype ];\n\n\t\t\t\t\tif ( tmp ) {\n\t\t\t\t\t\telem[ ontype ] = null;\n\t\t\t\t\t}\n\n\t\t\t\t\t// Prevent re-triggering of the same event, since we already bubbled it above\n\t\t\t\t\tjQuery.event.triggered = type;\n\n\t\t\t\t\tif ( event.isPropagationStopped() ) {\n\t\t\t\t\t\tlastElement.addEventListener( type, stopPropagationCallback );\n\t\t\t\t\t}\n\n\t\t\t\t\telem[ type ]();\n\n\t\t\t\t\tif ( event.isPropagationStopped() ) {\n\t\t\t\t\t\tlastElement.removeEventListener( type, stopPropagationCallback );\n\t\t\t\t\t}\n\n\t\t\t\t\tjQuery.event.triggered = undefined;\n\n\t\t\t\t\tif ( tmp ) {\n\t\t\t\t\t\telem[ ontype ] = tmp;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\treturn event.result;\n\t},\n\n\t// Piggyback on a donor event to simulate a different one\n\t// Used only for `focus(in | out)` events\n\tsimulate: function( type, elem, event ) {\n\t\tvar e = jQuery.extend(\n\t\t\tnew jQuery.Event(),\n\t\t\tevent,\n\t\t\t{\n\t\t\t\ttype: type,\n\t\t\t\tisSimulated: true\n\t\t\t}\n\t\t);\n\n\t\tjQuery.event.trigger( e, null, elem );\n\t}\n\n} );\n\njQuery.fn.extend( {\n\n\ttrigger: function( type, data ) {\n\t\treturn this.each( function() {\n\t\t\tjQuery.event.trigger( type, data, this );\n\t\t} );\n\t},\n\ttriggerHandler: function( type, data ) {\n\t\tvar elem = this[ 0 ];\n\t\tif ( elem ) {\n\t\t\treturn jQuery.event.trigger( type, data, elem, true );\n\t\t}\n\t}\n} );\n\n\n// Support: Firefox <=44\n// Firefox doesn't have focus(in | out) events\n// Related ticket - https://bugzilla.mozilla.org/show_bug.cgi?id=687787\n//\n// Support: Chrome <=48 - 49, Safari <=9.0 - 9.1\n// focus(in | out) events fire after focus & blur events,\n// which is spec violation - http://www.w3.org/TR/DOM-Level-3-Events/#events-focusevent-event-order\n// Related ticket - https://bugs.chromium.org/p/chromium/issues/detail?id=449857\nif ( !support.focusin ) {\n\tjQuery.each( { focus: \"focusin\", blur: \"focusout\" }, function( orig, fix ) {\n\n\t\t// Attach a single capturing handler on the document while someone wants focusin/focusout\n\t\tvar handler = function( event ) {\n\t\t\tjQuery.event.simulate( fix, event.target, jQuery.event.fix( event ) );\n\t\t};\n\n\t\tjQuery.event.special[ fix ] = {\n\t\t\tsetup: function() {\n\t\t\t\tvar doc = this.ownerDocument || this,\n\t\t\t\t\tattaches = dataPriv.access( doc, fix );\n\n\t\t\t\tif ( !attaches ) {\n\t\t\t\t\tdoc.addEventListener( orig, handler, true );\n\t\t\t\t}\n\t\t\t\tdataPriv.access( doc, fix, ( attaches || 0 ) + 1 );\n\t\t\t},\n\t\t\tteardown: function() {\n\t\t\t\tvar doc = this.ownerDocument || this,\n\t\t\t\t\tattaches = dataPriv.access( doc, fix ) - 1;\n\n\t\t\t\tif ( !attaches ) {\n\t\t\t\t\tdoc.removeEventListener( orig, handler, true );\n\t\t\t\t\tdataPriv.remove( doc, fix );\n\n\t\t\t\t} else {\n\t\t\t\t\tdataPriv.access( doc, fix, attaches );\n\t\t\t\t}\n\t\t\t}\n\t\t};\n\t} );\n}\nvar location = window.location;\n\nvar nonce = Date.now();\n\nvar rquery = ( /\\?/ );\n\n\n\n// Cross-browser xml parsing\njQuery.parseXML = function( data ) {\n\tvar xml;\n\tif ( !data || typeof data !== \"string\" ) {\n\t\treturn null;\n\t}\n\n\t// Support: IE 9 - 11 only\n\t// IE throws on parseFromString with invalid input.\n\ttry {\n\t\txml = ( new window.DOMParser() ).parseFromString( data, \"text/xml\" );\n\t} catch ( e ) {\n\t\txml = undefined;\n\t}\n\n\tif ( !xml || xml.getElementsByTagName( \"parsererror\" ).length ) {\n\t\tjQuery.error( \"Invalid XML: \" + data );\n\t}\n\treturn xml;\n};\n\n\nvar\n\trbracket = /\\[\\]$/,\n\trCRLF = /\\r?\\n/g,\n\trsubmitterTypes = /^(?:submit|button|image|reset|file)$/i,\n\trsubmittable = /^(?:input|select|textarea|keygen)/i;\n\nfunction buildParams( prefix, obj, traditional, add ) {\n\tvar name;\n\n\tif ( Array.isArray( obj ) ) {\n\n\t\t// Serialize array item.\n\t\tjQuery.each( obj, function( i, v ) {\n\t\t\tif ( traditional || rbracket.test( prefix ) ) {\n\n\t\t\t\t// Treat each array item as a scalar.\n\t\t\t\tadd( prefix, v );\n\n\t\t\t} else {\n\n\t\t\t\t// Item is non-scalar (array or object), encode its numeric index.\n\t\t\t\tbuildParams(\n\t\t\t\t\tprefix + \"[\" + ( typeof v === \"object\" && v != null ? i : \"\" ) + \"]\",\n\t\t\t\t\tv,\n\t\t\t\t\ttraditional,\n\t\t\t\t\tadd\n\t\t\t\t);\n\t\t\t}\n\t\t} );\n\n\t} else if ( !traditional && toType( obj ) === \"object\" ) {\n\n\t\t// Serialize object item.\n\t\tfor ( name in obj ) {\n\t\t\tbuildParams( prefix + \"[\" + name + \"]\", obj[ name ], traditional, add );\n\t\t}\n\n\t} else {\n\n\t\t// Serialize scalar item.\n\t\tadd( prefix, obj );\n\t}\n}\n\n// Serialize an array of form elements or a set of\n// key/values into a query string\njQuery.param = function( a, traditional ) {\n\tvar prefix,\n\t\ts = [],\n\t\tadd = function( key, valueOrFunction ) {\n\n\t\t\t// If value is a function, invoke it and use its return value\n\t\t\tvar value = isFunction( valueOrFunction ) ?\n\t\t\t\tvalueOrFunction() :\n\t\t\t\tvalueOrFunction;\n\n\t\t\ts[ s.length ] = encodeURIComponent( key ) + \"=\" +\n\t\t\t\tencodeURIComponent( value == null ? \"\" : value );\n\t\t};\n\n\t// If an array was passed in, assume that it is an array of form elements.\n\tif ( Array.isArray( a ) || ( a.jquery && !jQuery.isPlainObject( a ) ) ) {\n\n\t\t// Serialize the form elements\n\t\tjQuery.each( a, function() {\n\t\t\tadd( this.name, this.value );\n\t\t} );\n\n\t} else {\n\n\t\t// If traditional, encode the \"old\" way (the way 1.3.2 or older\n\t\t// did it), otherwise encode params recursively.\n\t\tfor ( prefix in a ) {\n\t\t\tbuildParams( prefix, a[ prefix ], traditional, add );\n\t\t}\n\t}\n\n\t// Return the resulting serialization\n\treturn s.join( \"&\" );\n};\n\njQuery.fn.extend( {\n\tserialize: function() {\n\t\treturn jQuery.param( this.serializeArray() );\n\t},\n\tserializeArray: function() {\n\t\treturn this.map( function() {\n\n\t\t\t// Can add propHook for \"elements\" to filter or add form elements\n\t\t\tvar elements = jQuery.prop( this, \"elements\" );\n\t\t\treturn elements ? jQuery.makeArray( elements ) : this;\n\t\t} )\n\t\t.filter( function() {\n\t\t\tvar type = this.type;\n\n\t\t\t// Use .is( \":disabled\" ) so that fieldset[disabled] works\n\t\t\treturn this.name && !jQuery( this ).is( \":disabled\" ) &&\n\t\t\t\trsubmittable.test( this.nodeName ) && !rsubmitterTypes.test( type ) &&\n\t\t\t\t( this.checked || !rcheckableType.test( type ) );\n\t\t} )\n\t\t.map( function( i, elem ) {\n\t\t\tvar val = jQuery( this ).val();\n\n\t\t\tif ( val == null ) {\n\t\t\t\treturn null;\n\t\t\t}\n\n\t\t\tif ( Array.isArray( val ) ) {\n\t\t\t\treturn jQuery.map( val, function( val ) {\n\t\t\t\t\treturn { name: elem.name, value: val.replace( rCRLF, \"\\r\\n\" ) };\n\t\t\t\t} );\n\t\t\t}\n\n\t\t\treturn { name: elem.name, value: val.replace( rCRLF, \"\\r\\n\" ) };\n\t\t} ).get();\n\t}\n} );\n\n\nvar\n\tr20 = /%20/g,\n\trhash = /#.*$/,\n\trantiCache = /([?&])_=[^&]*/,\n\trheaders = /^(.*?):[ \\t]*([^\\r\\n]*)$/mg,\n\n\t// #7653, #8125, #8152: local protocol detection\n\trlocalProtocol = /^(?:about|app|app-storage|.+-extension|file|res|widget):$/,\n\trnoContent = /^(?:GET|HEAD)$/,\n\trprotocol = /^\\/\\//,\n\n\t/* Prefilters\n\t * 1) They are useful to introduce custom dataTypes (see ajax/jsonp.js for an example)\n\t * 2) These are called:\n\t *    - BEFORE asking for a transport\n\t *    - AFTER param serialization (s.data is a string if s.processData is true)\n\t * 3) key is the dataType\n\t * 4) the catchall symbol \"*\" can be used\n\t * 5) execution will start with transport dataType and THEN continue down to \"*\" if needed\n\t */\n\tprefilters = {},\n\n\t/* Transports bindings\n\t * 1) key is the dataType\n\t * 2) the catchall symbol \"*\" can be used\n\t * 3) selection will start with transport dataType and THEN go to \"*\" if needed\n\t */\n\ttransports = {},\n\n\t// Avoid comment-prolog char sequence (#10098); must appease lint and evade compression\n\tallTypes = \"*/\".concat( \"*\" ),\n\n\t// Anchor tag for parsing the document origin\n\toriginAnchor = document.createElement( \"a\" );\n\toriginAnchor.href = location.href;\n\n// Base \"constructor\" for jQuery.ajaxPrefilter and jQuery.ajaxTransport\nfunction addToPrefiltersOrTransports( structure ) {\n\n\t// dataTypeExpression is optional and defaults to \"*\"\n\treturn function( dataTypeExpression, func ) {\n\n\t\tif ( typeof dataTypeExpression !== \"string\" ) {\n\t\t\tfunc = dataTypeExpression;\n\t\t\tdataTypeExpression = \"*\";\n\t\t}\n\n\t\tvar dataType,\n\t\t\ti = 0,\n\t\t\tdataTypes = dataTypeExpression.toLowerCase().match( rnothtmlwhite ) || [];\n\n\t\tif ( isFunction( func ) ) {\n\n\t\t\t// For each dataType in the dataTypeExpression\n\t\t\twhile ( ( dataType = dataTypes[ i++ ] ) ) {\n\n\t\t\t\t// Prepend if requested\n\t\t\t\tif ( dataType[ 0 ] === \"+\" ) {\n\t\t\t\t\tdataType = dataType.slice( 1 ) || \"*\";\n\t\t\t\t\t( structure[ dataType ] = structure[ dataType ] || [] ).unshift( func );\n\n\t\t\t\t// Otherwise append\n\t\t\t\t} else {\n\t\t\t\t\t( structure[ dataType ] = structure[ dataType ] || [] ).push( func );\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t};\n}\n\n// Base inspection function for prefilters and transports\nfunction inspectPrefiltersOrTransports( structure, options, originalOptions, jqXHR ) {\n\n\tvar inspected = {},\n\t\tseekingTransport = ( structure === transports );\n\n\tfunction inspect( dataType ) {\n\t\tvar selected;\n\t\tinspected[ dataType ] = true;\n\t\tjQuery.each( structure[ dataType ] || [], function( _, prefilterOrFactory ) {\n\t\t\tvar dataTypeOrTransport = prefilterOrFactory( options, originalOptions, jqXHR );\n\t\t\tif ( typeof dataTypeOrTransport === \"string\" &&\n\t\t\t\t!seekingTransport && !inspected[ dataTypeOrTransport ] ) {\n\n\t\t\t\toptions.dataTypes.unshift( dataTypeOrTransport );\n\t\t\t\tinspect( dataTypeOrTransport );\n\t\t\t\treturn false;\n\t\t\t} else if ( seekingTransport ) {\n\t\t\t\treturn !( selected = dataTypeOrTransport );\n\t\t\t}\n\t\t} );\n\t\treturn selected;\n\t}\n\n\treturn inspect( options.dataTypes[ 0 ] ) || !inspected[ \"*\" ] && inspect( \"*\" );\n}\n\n// A special extend for ajax options\n// that takes \"flat\" options (not to be deep extended)\n// Fixes #9887\nfunction ajaxExtend( target, src ) {\n\tvar key, deep,\n\t\tflatOptions = jQuery.ajaxSettings.flatOptions || {};\n\n\tfor ( key in src ) {\n\t\tif ( src[ key ] !== undefined ) {\n\t\t\t( flatOptions[ key ] ? target : ( deep || ( deep = {} ) ) )[ key ] = src[ key ];\n\t\t}\n\t}\n\tif ( deep ) {\n\t\tjQuery.extend( true, target, deep );\n\t}\n\n\treturn target;\n}\n\n/* Handles responses to an ajax request:\n * - finds the right dataType (mediates between content-type and expected dataType)\n * - returns the corresponding response\n */\nfunction ajaxHandleResponses( s, jqXHR, responses ) {\n\n\tvar ct, type, finalDataType, firstDataType,\n\t\tcontents = s.contents,\n\t\tdataTypes = s.dataTypes;\n\n\t// Remove auto dataType and get content-type in the process\n\twhile ( dataTypes[ 0 ] === \"*\" ) {\n\t\tdataTypes.shift();\n\t\tif ( ct === undefined ) {\n\t\t\tct = s.mimeType || jqXHR.getResponseHeader( \"Content-Type\" );\n\t\t}\n\t}\n\n\t// Check if we're dealing with a known content-type\n\tif ( ct ) {\n\t\tfor ( type in contents ) {\n\t\t\tif ( contents[ type ] && contents[ type ].test( ct ) ) {\n\t\t\t\tdataTypes.unshift( type );\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t}\n\n\t// Check to see if we have a response for the expected dataType\n\tif ( dataTypes[ 0 ] in responses ) {\n\t\tfinalDataType = dataTypes[ 0 ];\n\t} else {\n\n\t\t// Try convertible dataTypes\n\t\tfor ( type in responses ) {\n\t\t\tif ( !dataTypes[ 0 ] || s.converters[ type + \" \" + dataTypes[ 0 ] ] ) {\n\t\t\t\tfinalDataType = type;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\tif ( !firstDataType ) {\n\t\t\t\tfirstDataType = type;\n\t\t\t}\n\t\t}\n\n\t\t// Or just use first one\n\t\tfinalDataType = finalDataType || firstDataType;\n\t}\n\n\t// If we found a dataType\n\t// We add the dataType to the list if needed\n\t// and return the corresponding response\n\tif ( finalDataType ) {\n\t\tif ( finalDataType !== dataTypes[ 0 ] ) {\n\t\t\tdataTypes.unshift( finalDataType );\n\t\t}\n\t\treturn responses[ finalDataType ];\n\t}\n}\n\n/* Chain conversions given the request and the original response\n * Also sets the responseXXX fields on the jqXHR instance\n */\nfunction ajaxConvert( s, response, jqXHR, isSuccess ) {\n\tvar conv2, current, conv, tmp, prev,\n\t\tconverters = {},\n\n\t\t// Work with a copy of dataTypes in case we need to modify it for conversion\n\t\tdataTypes = s.dataTypes.slice();\n\n\t// Create converters map with lowercased keys\n\tif ( dataTypes[ 1 ] ) {\n\t\tfor ( conv in s.converters ) {\n\t\t\tconverters[ conv.toLowerCase() ] = s.converters[ conv ];\n\t\t}\n\t}\n\n\tcurrent = dataTypes.shift();\n\n\t// Convert to each sequential dataType\n\twhile ( current ) {\n\n\t\tif ( s.responseFields[ current ] ) {\n\t\t\tjqXHR[ s.responseFields[ current ] ] = response;\n\t\t}\n\n\t\t// Apply the dataFilter if provided\n\t\tif ( !prev && isSuccess && s.dataFilter ) {\n\t\t\tresponse = s.dataFilter( response, s.dataType );\n\t\t}\n\n\t\tprev = current;\n\t\tcurrent = dataTypes.shift();\n\n\t\tif ( current ) {\n\n\t\t\t// There's only work to do if current dataType is non-auto\n\t\t\tif ( current === \"*\" ) {\n\n\t\t\t\tcurrent = prev;\n\n\t\t\t// Convert response if prev dataType is non-auto and differs from current\n\t\t\t} else if ( prev !== \"*\" && prev !== current ) {\n\n\t\t\t\t// Seek a direct converter\n\t\t\t\tconv = converters[ prev + \" \" + current ] || converters[ \"* \" + current ];\n\n\t\t\t\t// If none found, seek a pair\n\t\t\t\tif ( !conv ) {\n\t\t\t\t\tfor ( conv2 in converters ) {\n\n\t\t\t\t\t\t// If conv2 outputs current\n\t\t\t\t\t\ttmp = conv2.split( \" \" );\n\t\t\t\t\t\tif ( tmp[ 1 ] === current ) {\n\n\t\t\t\t\t\t\t// If prev can be converted to accepted input\n\t\t\t\t\t\t\tconv = converters[ prev + \" \" + tmp[ 0 ] ] ||\n\t\t\t\t\t\t\t\tconverters[ \"* \" + tmp[ 0 ] ];\n\t\t\t\t\t\t\tif ( conv ) {\n\n\t\t\t\t\t\t\t\t// Condense equivalence converters\n\t\t\t\t\t\t\t\tif ( conv === true ) {\n\t\t\t\t\t\t\t\t\tconv = converters[ conv2 ];\n\n\t\t\t\t\t\t\t\t// Otherwise, insert the intermediate dataType\n\t\t\t\t\t\t\t\t} else if ( converters[ conv2 ] !== true ) {\n\t\t\t\t\t\t\t\t\tcurrent = tmp[ 0 ];\n\t\t\t\t\t\t\t\t\tdataTypes.unshift( tmp[ 1 ] );\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\t// Apply converter (if not an equivalence)\n\t\t\t\tif ( conv !== true ) {\n\n\t\t\t\t\t// Unless errors are allowed to bubble, catch and return them\n\t\t\t\t\tif ( conv && s.throws ) {\n\t\t\t\t\t\tresponse = conv( response );\n\t\t\t\t\t} else {\n\t\t\t\t\t\ttry {\n\t\t\t\t\t\t\tresponse = conv( response );\n\t\t\t\t\t\t} catch ( e ) {\n\t\t\t\t\t\t\treturn {\n\t\t\t\t\t\t\t\tstate: \"parsererror\",\n\t\t\t\t\t\t\t\terror: conv ? e : \"No conversion from \" + prev + \" to \" + current\n\t\t\t\t\t\t\t};\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\treturn { state: \"success\", data: response };\n}\n\njQuery.extend( {\n\n\t// Counter for holding the number of active queries\n\tactive: 0,\n\n\t// Last-Modified header cache for next request\n\tlastModified: {},\n\tetag: {},\n\n\tajaxSettings: {\n\t\turl: location.href,\n\t\ttype: \"GET\",\n\t\tisLocal: rlocalProtocol.test( location.protocol ),\n\t\tglobal: true,\n\t\tprocessData: true,\n\t\tasync: true,\n\t\tcontentType: \"application/x-www-form-urlencoded; charset=UTF-8\",\n\n\t\t/*\n\t\ttimeout: 0,\n\t\tdata: null,\n\t\tdataType: null,\n\t\tusername: null,\n\t\tpassword: null,\n\t\tcache: null,\n\t\tthrows: false,\n\t\ttraditional: false,\n\t\theaders: {},\n\t\t*/\n\n\t\taccepts: {\n\t\t\t\"*\": allTypes,\n\t\t\ttext: \"text/plain\",\n\t\t\thtml: \"text/html\",\n\t\t\txml: \"application/xml, text/xml\",\n\t\t\tjson: \"application/json, text/javascript\"\n\t\t},\n\n\t\tcontents: {\n\t\t\txml: /\\bxml\\b/,\n\t\t\thtml: /\\bhtml/,\n\t\t\tjson: /\\bjson\\b/\n\t\t},\n\n\t\tresponseFields: {\n\t\t\txml: \"responseXML\",\n\t\t\ttext: \"responseText\",\n\t\t\tjson: \"responseJSON\"\n\t\t},\n\n\t\t// Data converters\n\t\t// Keys separate source (or catchall \"*\") and destination types with a single space\n\t\tconverters: {\n\n\t\t\t// Convert anything to text\n\t\t\t\"* text\": String,\n\n\t\t\t// Text to html (true = no transformation)\n\t\t\t\"text html\": true,\n\n\t\t\t// Evaluate text as a json expression\n\t\t\t\"text json\": JSON.parse,\n\n\t\t\t// Parse text as xml\n\t\t\t\"text xml\": jQuery.parseXML\n\t\t},\n\n\t\t// For options that shouldn't be deep extended:\n\t\t// you can add your own custom options here if\n\t\t// and when you create one that shouldn't be\n\t\t// deep extended (see ajaxExtend)\n\t\tflatOptions: {\n\t\t\turl: true,\n\t\t\tcontext: true\n\t\t}\n\t},\n\n\t// Creates a full fledged settings object into target\n\t// with both ajaxSettings and settings fields.\n\t// If target is omitted, writes into ajaxSettings.\n\tajaxSetup: function( target, settings ) {\n\t\treturn settings ?\n\n\t\t\t// Building a settings object\n\t\t\tajaxExtend( ajaxExtend( target, jQuery.ajaxSettings ), settings ) :\n\n\t\t\t// Extending ajaxSettings\n\t\t\tajaxExtend( jQuery.ajaxSettings, target );\n\t},\n\n\tajaxPrefilter: addToPrefiltersOrTransports( prefilters ),\n\tajaxTransport: addToPrefiltersOrTransports( transports ),\n\n\t// Main method\n\tajax: function( url, options ) {\n\n\t\t// If url is an object, simulate pre-1.5 signature\n\t\tif ( typeof url === \"object\" ) {\n\t\t\toptions = url;\n\t\t\turl = undefined;\n\t\t}\n\n\t\t// Force options to be an object\n\t\toptions = options || {};\n\n\t\tvar transport,\n\n\t\t\t// URL without anti-cache param\n\t\t\tcacheURL,\n\n\t\t\t// Response headers\n\t\t\tresponseHeadersString,\n\t\t\tresponseHeaders,\n\n\t\t\t// timeout handle\n\t\t\ttimeoutTimer,\n\n\t\t\t// Url cleanup var\n\t\t\turlAnchor,\n\n\t\t\t// Request state (becomes false upon send and true upon completion)\n\t\t\tcompleted,\n\n\t\t\t// To know if global events are to be dispatched\n\t\t\tfireGlobals,\n\n\t\t\t// Loop variable\n\t\t\ti,\n\n\t\t\t// uncached part of the url\n\t\t\tuncached,\n\n\t\t\t// Create the final options object\n\t\t\ts = jQuery.ajaxSetup( {}, options ),\n\n\t\t\t// Callbacks context\n\t\t\tcallbackContext = s.context || s,\n\n\t\t\t// Context for global events is callbackContext if it is a DOM node or jQuery collection\n\t\t\tglobalEventContext = s.context &&\n\t\t\t\t( callbackContext.nodeType || callbackContext.jquery ) ?\n\t\t\t\t\tjQuery( callbackContext ) :\n\t\t\t\t\tjQuery.event,\n\n\t\t\t// Deferreds\n\t\t\tdeferred = jQuery.Deferred(),\n\t\t\tcompleteDeferred = jQuery.Callbacks( \"once memory\" ),\n\n\t\t\t// Status-dependent callbacks\n\t\t\tstatusCode = s.statusCode || {},\n\n\t\t\t// Headers (they are sent all at once)\n\t\t\trequestHeaders = {},\n\t\t\trequestHeadersNames = {},\n\n\t\t\t// Default abort message\n\t\t\tstrAbort = \"canceled\",\n\n\t\t\t// Fake xhr\n\t\t\tjqXHR = {\n\t\t\t\treadyState: 0,\n\n\t\t\t\t// Builds headers hashtable if needed\n\t\t\t\tgetResponseHeader: function( key ) {\n\t\t\t\t\tvar match;\n\t\t\t\t\tif ( completed ) {\n\t\t\t\t\t\tif ( !responseHeaders ) {\n\t\t\t\t\t\t\tresponseHeaders = {};\n\t\t\t\t\t\t\twhile ( ( match = rheaders.exec( responseHeadersString ) ) ) {\n\t\t\t\t\t\t\t\tresponseHeaders[ match[ 1 ].toLowerCase() ] = match[ 2 ];\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t\tmatch = responseHeaders[ key.toLowerCase() ];\n\t\t\t\t\t}\n\t\t\t\t\treturn match == null ? null : match;\n\t\t\t\t},\n\n\t\t\t\t// Raw string\n\t\t\t\tgetAllResponseHeaders: function() {\n\t\t\t\t\treturn completed ? responseHeadersString : null;\n\t\t\t\t},\n\n\t\t\t\t// Caches the header\n\t\t\t\tsetRequestHeader: function( name, value ) {\n\t\t\t\t\tif ( completed == null ) {\n\t\t\t\t\t\tname = requestHeadersNames[ name.toLowerCase() ] =\n\t\t\t\t\t\t\trequestHeadersNames[ name.toLowerCase() ] || name;\n\t\t\t\t\t\trequestHeaders[ name ] = value;\n\t\t\t\t\t}\n\t\t\t\t\treturn this;\n\t\t\t\t},\n\n\t\t\t\t// Overrides response content-type header\n\t\t\t\toverrideMimeType: function( type ) {\n\t\t\t\t\tif ( completed == null ) {\n\t\t\t\t\t\ts.mimeType = type;\n\t\t\t\t\t}\n\t\t\t\t\treturn this;\n\t\t\t\t},\n\n\t\t\t\t// Status-dependent callbacks\n\t\t\t\tstatusCode: function( map ) {\n\t\t\t\t\tvar code;\n\t\t\t\t\tif ( map ) {\n\t\t\t\t\t\tif ( completed ) {\n\n\t\t\t\t\t\t\t// Execute the appropriate callbacks\n\t\t\t\t\t\t\tjqXHR.always( map[ jqXHR.status ] );\n\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\t// Lazy-add the new callbacks in a way that preserves old ones\n\t\t\t\t\t\t\tfor ( code in map ) {\n\t\t\t\t\t\t\t\tstatusCode[ code ] = [ statusCode[ code ], map[ code ] ];\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\treturn this;\n\t\t\t\t},\n\n\t\t\t\t// Cancel the request\n\t\t\t\tabort: function( statusText ) {\n\t\t\t\t\tvar finalText = statusText || strAbort;\n\t\t\t\t\tif ( transport ) {\n\t\t\t\t\t\ttransport.abort( finalText );\n\t\t\t\t\t}\n\t\t\t\t\tdone( 0, finalText );\n\t\t\t\t\treturn this;\n\t\t\t\t}\n\t\t\t};\n\n\t\t// Attach deferreds\n\t\tdeferred.promise( jqXHR );\n\n\t\t// Add protocol if not provided (prefilters might expect it)\n\t\t// Handle falsy url in the settings object (#10093: consistency with old signature)\n\t\t// We also use the url parameter if available\n\t\ts.url = ( ( url || s.url || location.href ) + \"\" )\n\t\t\t.replace( rprotocol, location.protocol + \"//\" );\n\n\t\t// Alias method option to type as per ticket #12004\n\t\ts.type = options.method || options.type || s.method || s.type;\n\n\t\t// Extract dataTypes list\n\t\ts.dataTypes = ( s.dataType || \"*\" ).toLowerCase().match( rnothtmlwhite ) || [ \"\" ];\n\n\t\t// A cross-domain request is in order when the origin doesn't match the current origin.\n\t\tif ( s.crossDomain == null ) {\n\t\t\turlAnchor = document.createElement( \"a\" );\n\n\t\t\t// Support: IE <=8 - 11, Edge 12 - 15\n\t\t\t// IE throws exception on accessing the href property if url is malformed,\n\t\t\t// e.g. http://example.com:80x/\n\t\t\ttry {\n\t\t\t\turlAnchor.href = s.url;\n\n\t\t\t\t// Support: IE <=8 - 11 only\n\t\t\t\t// Anchor's host property isn't correctly set when s.url is relative\n\t\t\t\turlAnchor.href = urlAnchor.href;\n\t\t\t\ts.crossDomain = originAnchor.protocol + \"//\" + originAnchor.host !==\n\t\t\t\t\turlAnchor.protocol + \"//\" + urlAnchor.host;\n\t\t\t} catch ( e ) {\n\n\t\t\t\t// If there is an error parsing the URL, assume it is crossDomain,\n\t\t\t\t// it can be rejected by the transport if it is invalid\n\t\t\t\ts.crossDomain = true;\n\t\t\t}\n\t\t}\n\n\t\t// Convert data if not already a string\n\t\tif ( s.data && s.processData && typeof s.data !== \"string\" ) {\n\t\t\ts.data = jQuery.param( s.data, s.traditional );\n\t\t}\n\n\t\t// Apply prefilters\n\t\tinspectPrefiltersOrTransports( prefilters, s, options, jqXHR );\n\n\t\t// If request was aborted inside a prefilter, stop there\n\t\tif ( completed ) {\n\t\t\treturn jqXHR;\n\t\t}\n\n\t\t// We can fire global events as of now if asked to\n\t\t// Don't fire events if jQuery.event is undefined in an AMD-usage scenario (#15118)\n\t\tfireGlobals = jQuery.event && s.global;\n\n\t\t// Watch for a new set of requests\n\t\tif ( fireGlobals && jQuery.active++ === 0 ) {\n\t\t\tjQuery.event.trigger( \"ajaxStart\" );\n\t\t}\n\n\t\t// Uppercase the type\n\t\ts.type = s.type.toUpperCase();\n\n\t\t// Determine if request has content\n\t\ts.hasContent = !rnoContent.test( s.type );\n\n\t\t// Save the URL in case we're toying with the If-Modified-Since\n\t\t// and/or If-None-Match header later on\n\t\t// Remove hash to simplify url manipulation\n\t\tcacheURL = s.url.replace( rhash, \"\" );\n\n\t\t// More options handling for requests with no content\n\t\tif ( !s.hasContent ) {\n\n\t\t\t// Remember the hash so we can put it back\n\t\t\tuncached = s.url.slice( cacheURL.length );\n\n\t\t\t// If data is available and should be processed, append data to url\n\t\t\tif ( s.data && ( s.processData || typeof s.data === \"string\" ) ) {\n\t\t\t\tcacheURL += ( rquery.test( cacheURL ) ? \"&\" : \"?\" ) + s.data;\n\n\t\t\t\t// #9682: remove data so that it's not used in an eventual retry\n\t\t\t\tdelete s.data;\n\t\t\t}\n\n\t\t\t// Add or update anti-cache param if needed\n\t\t\tif ( s.cache === false ) {\n\t\t\t\tcacheURL = cacheURL.replace( rantiCache, \"$1\" );\n\t\t\t\tuncached = ( rquery.test( cacheURL ) ? \"&\" : \"?\" ) + \"_=\" + ( nonce++ ) + uncached;\n\t\t\t}\n\n\t\t\t// Put hash and anti-cache on the URL that will be requested (gh-1732)\n\t\t\ts.url = cacheURL + uncached;\n\n\t\t// Change '%20' to '+' if this is encoded form body content (gh-2658)\n\t\t} else if ( s.data && s.processData &&\n\t\t\t( s.contentType || \"\" ).indexOf( \"application/x-www-form-urlencoded\" ) === 0 ) {\n\t\t\ts.data = s.data.replace( r20, \"+\" );\n\t\t}\n\n\t\t// Set the If-Modified-Since and/or If-None-Match header, if in ifModified mode.\n\t\tif ( s.ifModified ) {\n\t\t\tif ( jQuery.lastModified[ cacheURL ] ) {\n\t\t\t\tjqXHR.setRequestHeader( \"If-Modified-Since\", jQuery.lastModified[ cacheURL ] );\n\t\t\t}\n\t\t\tif ( jQuery.etag[ cacheURL ] ) {\n\t\t\t\tjqXHR.setRequestHeader( \"If-None-Match\", jQuery.etag[ cacheURL ] );\n\t\t\t}\n\t\t}\n\n\t\t// Set the correct header, if data is being sent\n\t\tif ( s.data && s.hasContent && s.contentType !== false || options.contentType ) {\n\t\t\tjqXHR.setRequestHeader( \"Content-Type\", s.contentType );\n\t\t}\n\n\t\t// Set the Accepts header for the server, depending on the dataType\n\t\tjqXHR.setRequestHeader(\n\t\t\t\"Accept\",\n\t\t\ts.dataTypes[ 0 ] && s.accepts[ s.dataTypes[ 0 ] ] ?\n\t\t\t\ts.accepts[ s.dataTypes[ 0 ] ] +\n\t\t\t\t\t( s.dataTypes[ 0 ] !== \"*\" ? \", \" + allTypes + \"; q=0.01\" : \"\" ) :\n\t\t\t\ts.accepts[ \"*\" ]\n\t\t);\n\n\t\t// Check for headers option\n\t\tfor ( i in s.headers ) {\n\t\t\tjqXHR.setRequestHeader( i, s.headers[ i ] );\n\t\t}\n\n\t\t// Allow custom headers/mimetypes and early abort\n\t\tif ( s.beforeSend &&\n\t\t\t( s.beforeSend.call( callbackContext, jqXHR, s ) === false || completed ) ) {\n\n\t\t\t// Abort if not done already and return\n\t\t\treturn jqXHR.abort();\n\t\t}\n\n\t\t// Aborting is no longer a cancellation\n\t\tstrAbort = \"abort\";\n\n\t\t// Install callbacks on deferreds\n\t\tcompleteDeferred.add( s.complete );\n\t\tjqXHR.done( s.success );\n\t\tjqXHR.fail( s.error );\n\n\t\t// Get transport\n\t\ttransport = inspectPrefiltersOrTransports( transports, s, options, jqXHR );\n\n\t\t// If no transport, we auto-abort\n\t\tif ( !transport ) {\n\t\t\tdone( -1, \"No Transport\" );\n\t\t} else {\n\t\t\tjqXHR.readyState = 1;\n\n\t\t\t// Send global event\n\t\t\tif ( fireGlobals ) {\n\t\t\t\tglobalEventContext.trigger( \"ajaxSend\", [ jqXHR, s ] );\n\t\t\t}\n\n\t\t\t// If request was aborted inside ajaxSend, stop there\n\t\t\tif ( completed ) {\n\t\t\t\treturn jqXHR;\n\t\t\t}\n\n\t\t\t// Timeout\n\t\t\tif ( s.async && s.timeout > 0 ) {\n\t\t\t\ttimeoutTimer = window.setTimeout( function() {\n\t\t\t\t\tjqXHR.abort( \"timeout\" );\n\t\t\t\t}, s.timeout );\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tcompleted = false;\n\t\t\t\ttransport.send( requestHeaders, done );\n\t\t\t} catch ( e ) {\n\n\t\t\t\t// Rethrow post-completion exceptions\n\t\t\t\tif ( completed ) {\n\t\t\t\t\tthrow e;\n\t\t\t\t}\n\n\t\t\t\t// Propagate others as results\n\t\t\t\tdone( -1, e );\n\t\t\t}\n\t\t}\n\n\t\t// Callback for when everything is done\n\t\tfunction done( status, nativeStatusText, responses, headers ) {\n\t\t\tvar isSuccess, success, error, response, modified,\n\t\t\t\tstatusText = nativeStatusText;\n\n\t\t\t// Ignore repeat invocations\n\t\t\tif ( completed ) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tcompleted = true;\n\n\t\t\t// Clear timeout if it exists\n\t\t\tif ( timeoutTimer ) {\n\t\t\t\twindow.clearTimeout( timeoutTimer );\n\t\t\t}\n\n\t\t\t// Dereference transport for early garbage collection\n\t\t\t// (no matter how long the jqXHR object will be used)\n\t\t\ttransport = undefined;\n\n\t\t\t// Cache response headers\n\t\t\tresponseHeadersString = headers || \"\";\n\n\t\t\t// Set readyState\n\t\t\tjqXHR.readyState = status > 0 ? 4 : 0;\n\n\t\t\t// Determine if successful\n\t\t\tisSuccess = status >= 200 && status < 300 || status === 304;\n\n\t\t\t// Get response data\n\t\t\tif ( responses ) {\n\t\t\t\tresponse = ajaxHandleResponses( s, jqXHR, responses );\n\t\t\t}\n\n\t\t\t// Convert no matter what (that way responseXXX fields are always set)\n\t\t\tresponse = ajaxConvert( s, response, jqXHR, isSuccess );\n\n\t\t\t// If successful, handle type chaining\n\t\t\tif ( isSuccess ) {\n\n\t\t\t\t// Set the If-Modified-Since and/or If-None-Match header, if in ifModified mode.\n\t\t\t\tif ( s.ifModified ) {\n\t\t\t\t\tmodified = jqXHR.getResponseHeader( \"Last-Modified\" );\n\t\t\t\t\tif ( modified ) {\n\t\t\t\t\t\tjQuery.lastModified[ cacheURL ] = modified;\n\t\t\t\t\t}\n\t\t\t\t\tmodified = jqXHR.getResponseHeader( \"etag\" );\n\t\t\t\t\tif ( modified ) {\n\t\t\t\t\t\tjQuery.etag[ cacheURL ] = modified;\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\t// if no content\n\t\t\t\tif ( status === 204 || s.type === \"HEAD\" ) {\n\t\t\t\t\tstatusText = \"nocontent\";\n\n\t\t\t\t// if not modified\n\t\t\t\t} else if ( status === 304 ) {\n\t\t\t\t\tstatusText = \"notmodified\";\n\n\t\t\t\t// If we have data, let's convert it\n\t\t\t\t} else {\n\t\t\t\t\tstatusText = response.state;\n\t\t\t\t\tsuccess = response.data;\n\t\t\t\t\terror = response.error;\n\t\t\t\t\tisSuccess = !error;\n\t\t\t\t}\n\t\t\t} else {\n\n\t\t\t\t// Extract error from statusText and normalize for non-aborts\n\t\t\t\terror = statusText;\n\t\t\t\tif ( status || !statusText ) {\n\t\t\t\t\tstatusText = \"error\";\n\t\t\t\t\tif ( status < 0 ) {\n\t\t\t\t\t\tstatus = 0;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// Set data for the fake xhr object\n\t\t\tjqXHR.status = status;\n\t\t\tjqXHR.statusText = ( nativeStatusText || statusText ) + \"\";\n\n\t\t\t// Success/Error\n\t\t\tif ( isSuccess ) {\n\t\t\t\tdeferred.resolveWith( callbackContext, [ success, statusText, jqXHR ] );\n\t\t\t} else {\n\t\t\t\tdeferred.rejectWith( callbackContext, [ jqXHR, statusText, error ] );\n\t\t\t}\n\n\t\t\t// Status-dependent callbacks\n\t\t\tjqXHR.statusCode( statusCode );\n\t\t\tstatusCode = undefined;\n\n\t\t\tif ( fireGlobals ) {\n\t\t\t\tglobalEventContext.trigger( isSuccess ? \"ajaxSuccess\" : \"ajaxError\",\n\t\t\t\t\t[ jqXHR, s, isSuccess ? success : error ] );\n\t\t\t}\n\n\t\t\t// Complete\n\t\t\tcompleteDeferred.fireWith( callbackContext, [ jqXHR, statusText ] );\n\n\t\t\tif ( fireGlobals ) {\n\t\t\t\tglobalEventContext.trigger( \"ajaxComplete\", [ jqXHR, s ] );\n\n\t\t\t\t// Handle the global AJAX counter\n\t\t\t\tif ( !( --jQuery.active ) ) {\n\t\t\t\t\tjQuery.event.trigger( \"ajaxStop\" );\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\treturn jqXHR;\n\t},\n\n\tgetJSON: function( url, data, callback ) {\n\t\treturn jQuery.get( url, data, callback, \"json\" );\n\t},\n\n\tgetScript: function( url, callback ) {\n\t\treturn jQuery.get( url, undefined, callback, \"script\" );\n\t}\n} );\n\njQuery.each( [ \"get\", \"post\" ], function( i, method ) {\n\tjQuery[ method ] = function( url, data, callback, type ) {\n\n\t\t// Shift arguments if data argument was omitted\n\t\tif ( isFunction( data ) ) {\n\t\t\ttype = type || callback;\n\t\t\tcallback = data;\n\t\t\tdata = undefined;\n\t\t}\n\n\t\t// The url can be an options object (which then must have .url)\n\t\treturn jQuery.ajax( jQuery.extend( {\n\t\t\turl: url,\n\t\t\ttype: method,\n\t\t\tdataType: type,\n\t\t\tdata: data,\n\t\t\tsuccess: callback\n\t\t}, jQuery.isPlainObject( url ) && url ) );\n\t};\n} );\n\n\njQuery._evalUrl = function( url ) {\n\treturn jQuery.ajax( {\n\t\turl: url,\n\n\t\t// Make this explicit, since user can override this through ajaxSetup (#11264)\n\t\ttype: \"GET\",\n\t\tdataType: \"script\",\n\t\tcache: true,\n\t\tasync: false,\n\t\tglobal: false,\n\t\t\"throws\": true\n\t} );\n};\n\n\njQuery.fn.extend( {\n\twrapAll: function( html ) {\n\t\tvar wrap;\n\n\t\tif ( this[ 0 ] ) {\n\t\t\tif ( isFunction( html ) ) {\n\t\t\t\thtml = html.call( this[ 0 ] );\n\t\t\t}\n\n\t\t\t// The elements to wrap the target around\n\t\t\twrap = jQuery( html, this[ 0 ].ownerDocument ).eq( 0 ).clone( true );\n\n\t\t\tif ( this[ 0 ].parentNode ) {\n\t\t\t\twrap.insertBefore( this[ 0 ] );\n\t\t\t}\n\n\t\t\twrap.map( function() {\n\t\t\t\tvar elem = this;\n\n\t\t\t\twhile ( elem.firstElementChild ) {\n\t\t\t\t\telem = elem.firstElementChild;\n\t\t\t\t}\n\n\t\t\t\treturn elem;\n\t\t\t} ).append( this );\n\t\t}\n\n\t\treturn this;\n\t},\n\n\twrapInner: function( html ) {\n\t\tif ( isFunction( html ) ) {\n\t\t\treturn this.each( function( i ) {\n\t\t\t\tjQuery( this ).wrapInner( html.call( this, i ) );\n\t\t\t} );\n\t\t}\n\n\t\treturn this.each( function() {\n\t\t\tvar self = jQuery( this ),\n\t\t\t\tcontents = self.contents();\n\n\t\t\tif ( contents.length ) {\n\t\t\t\tcontents.wrapAll( html );\n\n\t\t\t} else {\n\t\t\t\tself.append( html );\n\t\t\t}\n\t\t} );\n\t},\n\n\twrap: function( html ) {\n\t\tvar htmlIsFunction = isFunction( html );\n\n\t\treturn this.each( function( i ) {\n\t\t\tjQuery( this ).wrapAll( htmlIsFunction ? html.call( this, i ) : html );\n\t\t} );\n\t},\n\n\tunwrap: function( selector ) {\n\t\tthis.parent( selector ).not( \"body\" ).each( function() {\n\t\t\tjQuery( this ).replaceWith( this.childNodes );\n\t\t} );\n\t\treturn this;\n\t}\n} );\n\n\njQuery.expr.pseudos.hidden = function( elem ) {\n\treturn !jQuery.expr.pseudos.visible( elem );\n};\njQuery.expr.pseudos.visible = function( elem ) {\n\treturn !!( elem.offsetWidth || elem.offsetHeight || elem.getClientRects().length );\n};\n\n\n\n\njQuery.ajaxSettings.xhr = function() {\n\ttry {\n\t\treturn new window.XMLHttpRequest();\n\t} catch ( e ) {}\n};\n\nvar xhrSuccessStatus = {\n\n\t\t// File protocol always yields status code 0, assume 200\n\t\t0: 200,\n\n\t\t// Support: IE <=9 only\n\t\t// #1450: sometimes IE returns 1223 when it should be 204\n\t\t1223: 204\n\t},\n\txhrSupported = jQuery.ajaxSettings.xhr();\n\nsupport.cors = !!xhrSupported && ( \"withCredentials\" in xhrSupported );\nsupport.ajax = xhrSupported = !!xhrSupported;\n\njQuery.ajaxTransport( function( options ) {\n\tvar callback, errorCallback;\n\n\t// Cross domain only allowed if supported through XMLHttpRequest\n\tif ( support.cors || xhrSupported && !options.crossDomain ) {\n\t\treturn {\n\t\t\tsend: function( headers, complete ) {\n\t\t\t\tvar i,\n\t\t\t\t\txhr = options.xhr();\n\n\t\t\t\txhr.open(\n\t\t\t\t\toptions.type,\n\t\t\t\t\toptions.url,\n\t\t\t\t\toptions.async,\n\t\t\t\t\toptions.username,\n\t\t\t\t\toptions.password\n\t\t\t\t);\n\n\t\t\t\t// Apply custom fields if provided\n\t\t\t\tif ( options.xhrFields ) {\n\t\t\t\t\tfor ( i in options.xhrFields ) {\n\t\t\t\t\t\txhr[ i ] = options.xhrFields[ i ];\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\t// Override mime type if needed\n\t\t\t\tif ( options.mimeType && xhr.overrideMimeType ) {\n\t\t\t\t\txhr.overrideMimeType( options.mimeType );\n\t\t\t\t}\n\n\t\t\t\t// X-Requested-With header\n\t\t\t\t// For cross-domain requests, seeing as conditions for a preflight are\n\t\t\t\t// akin to a jigsaw puzzle, we simply never set it to be sure.\n\t\t\t\t// (it can always be set on a per-request basis or even using ajaxSetup)\n\t\t\t\t// For same-domain requests, won't change header if already provided.\n\t\t\t\tif ( !options.crossDomain && !headers[ \"X-Requested-With\" ] ) {\n\t\t\t\t\theaders[ \"X-Requested-With\" ] = \"XMLHttpRequest\";\n\t\t\t\t}\n\n\t\t\t\t// Set headers\n\t\t\t\tfor ( i in headers ) {\n\t\t\t\t\txhr.setRequestHeader( i, headers[ i ] );\n\t\t\t\t}\n\n\t\t\t\t// Callback\n\t\t\t\tcallback = function( type ) {\n\t\t\t\t\treturn function() {\n\t\t\t\t\t\tif ( callback ) {\n\t\t\t\t\t\t\tcallback = errorCallback = xhr.onload =\n\t\t\t\t\t\t\t\txhr.onerror = xhr.onabort = xhr.ontimeout =\n\t\t\t\t\t\t\t\t\txhr.onreadystatechange = null;\n\n\t\t\t\t\t\t\tif ( type === \"abort\" ) {\n\t\t\t\t\t\t\t\txhr.abort();\n\t\t\t\t\t\t\t} else if ( type === \"error\" ) {\n\n\t\t\t\t\t\t\t\t// Support: IE <=9 only\n\t\t\t\t\t\t\t\t// On a manual native abort, IE9 throws\n\t\t\t\t\t\t\t\t// errors on any property access that is not readyState\n\t\t\t\t\t\t\t\tif ( typeof xhr.status !== \"number\" ) {\n\t\t\t\t\t\t\t\t\tcomplete( 0, \"error\" );\n\t\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\t\tcomplete(\n\n\t\t\t\t\t\t\t\t\t\t// File: protocol always yields status 0; see #8605, #14207\n\t\t\t\t\t\t\t\t\t\txhr.status,\n\t\t\t\t\t\t\t\t\t\txhr.statusText\n\t\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\tcomplete(\n\t\t\t\t\t\t\t\t\txhrSuccessStatus[ xhr.status ] || xhr.status,\n\t\t\t\t\t\t\t\t\txhr.statusText,\n\n\t\t\t\t\t\t\t\t\t// Support: IE <=9 only\n\t\t\t\t\t\t\t\t\t// IE9 has no XHR2 but throws on binary (trac-11426)\n\t\t\t\t\t\t\t\t\t// For XHR2 non-text, let the caller handle it (gh-2498)\n\t\t\t\t\t\t\t\t\t( xhr.responseType || \"text\" ) !== \"text\"  ||\n\t\t\t\t\t\t\t\t\ttypeof xhr.responseText !== \"string\" ?\n\t\t\t\t\t\t\t\t\t\t{ binary: xhr.response } :\n\t\t\t\t\t\t\t\t\t\t{ text: xhr.responseText },\n\t\t\t\t\t\t\t\t\txhr.getAllResponseHeaders()\n\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t};\n\t\t\t\t};\n\n\t\t\t\t// Listen to events\n\t\t\t\txhr.onload = callback();\n\t\t\t\terrorCallback = xhr.onerror = xhr.ontimeout = callback( \"error\" );\n\n\t\t\t\t// Support: IE 9 only\n\t\t\t\t// Use onreadystatechange to replace onabort\n\t\t\t\t// to handle uncaught aborts\n\t\t\t\tif ( xhr.onabort !== undefined ) {\n\t\t\t\t\txhr.onabort = errorCallback;\n\t\t\t\t} else {\n\t\t\t\t\txhr.onreadystatechange = function() {\n\n\t\t\t\t\t\t// Check readyState before timeout as it changes\n\t\t\t\t\t\tif ( xhr.readyState === 4 ) {\n\n\t\t\t\t\t\t\t// Allow onerror to be called first,\n\t\t\t\t\t\t\t// but that will not handle a native abort\n\t\t\t\t\t\t\t// Also, save errorCallback to a variable\n\t\t\t\t\t\t\t// as xhr.onerror cannot be accessed\n\t\t\t\t\t\t\twindow.setTimeout( function() {\n\t\t\t\t\t\t\t\tif ( callback ) {\n\t\t\t\t\t\t\t\t\terrorCallback();\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t} );\n\t\t\t\t\t\t}\n\t\t\t\t\t};\n\t\t\t\t}\n\n\t\t\t\t// Create the abort callback\n\t\t\t\tcallback = callback( \"abort\" );\n\n\t\t\t\ttry {\n\n\t\t\t\t\t// Do send the request (this may raise an exception)\n\t\t\t\t\txhr.send( options.hasContent && options.data || null );\n\t\t\t\t} catch ( e ) {\n\n\t\t\t\t\t// #14683: Only rethrow if this hasn't been notified as an error yet\n\t\t\t\t\tif ( callback ) {\n\t\t\t\t\t\tthrow e;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t},\n\n\t\t\tabort: function() {\n\t\t\t\tif ( callback ) {\n\t\t\t\t\tcallback();\n\t\t\t\t}\n\t\t\t}\n\t\t};\n\t}\n} );\n\n\n\n\n// Prevent auto-execution of scripts when no explicit dataType was provided (See gh-2432)\njQuery.ajaxPrefilter( function( s ) {\n\tif ( s.crossDomain ) {\n\t\ts.contents.script = false;\n\t}\n} );\n\n// Install script dataType\njQuery.ajaxSetup( {\n\taccepts: {\n\t\tscript: \"text/javascript, application/javascript, \" +\n\t\t\t\"application/ecmascript, application/x-ecmascript\"\n\t},\n\tcontents: {\n\t\tscript: /\\b(?:java|ecma)script\\b/\n\t},\n\tconverters: {\n\t\t\"text script\": function( text ) {\n\t\t\tjQuery.globalEval( text );\n\t\t\treturn text;\n\t\t}\n\t}\n} );\n\n// Handle cache's special case and crossDomain\njQuery.ajaxPrefilter( \"script\", function( s ) {\n\tif ( s.cache === undefined ) {\n\t\ts.cache = false;\n\t}\n\tif ( s.crossDomain ) {\n\t\ts.type = \"GET\";\n\t}\n} );\n\n// Bind script tag hack transport\njQuery.ajaxTransport( \"script\", function( s ) {\n\n\t// This transport only deals with cross domain requests\n\tif ( s.crossDomain ) {\n\t\tvar script, callback;\n\t\treturn {\n\t\t\tsend: function( _, complete ) {\n\t\t\t\tscript = jQuery( \"<script>\" ).prop( {\n\t\t\t\t\tcharset: s.scriptCharset,\n\t\t\t\t\tsrc: s.url\n\t\t\t\t} ).on(\n\t\t\t\t\t\"load error\",\n\t\t\t\t\tcallback = function( evt ) {\n\t\t\t\t\t\tscript.remove();\n\t\t\t\t\t\tcallback = null;\n\t\t\t\t\t\tif ( evt ) {\n\t\t\t\t\t\t\tcomplete( evt.type === \"error\" ? 404 : 200, evt.type );\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t);\n\n\t\t\t\t// Use native DOM manipulation to avoid our domManip AJAX trickery\n\t\t\t\tdocument.head.appendChild( script[ 0 ] );\n\t\t\t},\n\t\t\tabort: function() {\n\t\t\t\tif ( callback ) {\n\t\t\t\t\tcallback();\n\t\t\t\t}\n\t\t\t}\n\t\t};\n\t}\n} );\n\n\n\n\nvar oldCallbacks = [],\n\trjsonp = /(=)\\?(?=&|$)|\\?\\?/;\n\n// Default jsonp settings\njQuery.ajaxSetup( {\n\tjsonp: \"callback\",\n\tjsonpCallback: function() {\n\t\tvar callback = oldCallbacks.pop() || ( jQuery.expando + \"_\" + ( nonce++ ) );\n\t\tthis[ callback ] = true;\n\t\treturn callback;\n\t}\n} );\n\n// Detect, normalize options and install callbacks for jsonp requests\njQuery.ajaxPrefilter( \"json jsonp\", function( s, originalSettings, jqXHR ) {\n\n\tvar callbackName, overwritten, responseContainer,\n\t\tjsonProp = s.jsonp !== false && ( rjsonp.test( s.url ) ?\n\t\t\t\"url\" :\n\t\t\ttypeof s.data === \"string\" &&\n\t\t\t\t( s.contentType || \"\" )\n\t\t\t\t\t.indexOf( \"application/x-www-form-urlencoded\" ) === 0 &&\n\t\t\t\trjsonp.test( s.data ) && \"data\"\n\t\t);\n\n\t// Handle iff the expected data type is \"jsonp\" or we have a parameter to set\n\tif ( jsonProp || s.dataTypes[ 0 ] === \"jsonp\" ) {\n\n\t\t// Get callback name, remembering preexisting value associated with it\n\t\tcallbackName = s.jsonpCallback = isFunction( s.jsonpCallback ) ?\n\t\t\ts.jsonpCallback() :\n\t\t\ts.jsonpCallback;\n\n\t\t// Insert callback into url or form data\n\t\tif ( jsonProp ) {\n\t\t\ts[ jsonProp ] = s[ jsonProp ].replace( rjsonp, \"$1\" + callbackName );\n\t\t} else if ( s.jsonp !== false ) {\n\t\t\ts.url += ( rquery.test( s.url ) ? \"&\" : \"?\" ) + s.jsonp + \"=\" + callbackName;\n\t\t}\n\n\t\t// Use data converter to retrieve json after script execution\n\t\ts.converters[ \"script json\" ] = function() {\n\t\t\tif ( !responseContainer ) {\n\t\t\t\tjQuery.error( callbackName + \" was not called\" );\n\t\t\t}\n\t\t\treturn responseContainer[ 0 ];\n\t\t};\n\n\t\t// Force json dataType\n\t\ts.dataTypes[ 0 ] = \"json\";\n\n\t\t// Install callback\n\t\toverwritten = window[ callbackName ];\n\t\twindow[ callbackName ] = function() {\n\t\t\tresponseContainer = arguments;\n\t\t};\n\n\t\t// Clean-up function (fires after converters)\n\t\tjqXHR.always( function() {\n\n\t\t\t// If previous value didn't exist - remove it\n\t\t\tif ( overwritten === undefined ) {\n\t\t\t\tjQuery( window ).removeProp( callbackName );\n\n\t\t\t// Otherwise restore preexisting value\n\t\t\t} else {\n\t\t\t\twindow[ callbackName ] = overwritten;\n\t\t\t}\n\n\t\t\t// Save back as free\n\t\t\tif ( s[ callbackName ] ) {\n\n\t\t\t\t// Make sure that re-using the options doesn't screw things around\n\t\t\t\ts.jsonpCallback = originalSettings.jsonpCallback;\n\n\t\t\t\t// Save the callback name for future use\n\t\t\t\toldCallbacks.push( callbackName );\n\t\t\t}\n\n\t\t\t// Call if it was a function and we have a response\n\t\t\tif ( responseContainer && isFunction( overwritten ) ) {\n\t\t\t\toverwritten( responseContainer[ 0 ] );\n\t\t\t}\n\n\t\t\tresponseContainer = overwritten = undefined;\n\t\t} );\n\n\t\t// Delegate to script\n\t\treturn \"script\";\n\t}\n} );\n\n\n\n\n// Support: Safari 8 only\n// In Safari 8 documents created via document.implementation.createHTMLDocument\n// collapse sibling forms: the second one becomes a child of the first one.\n// Because of that, this security measure has to be disabled in Safari 8.\n// https://bugs.webkit.org/show_bug.cgi?id=137337\nsupport.createHTMLDocument = ( function() {\n\tvar body = document.implementation.createHTMLDocument( \"\" ).body;\n\tbody.innerHTML = \"<form></form><form></form>\";\n\treturn body.childNodes.length === 2;\n} )();\n\n\n// Argument \"data\" should be string of html\n// context (optional): If specified, the fragment will be created in this context,\n// defaults to document\n// keepScripts (optional): If true, will include scripts passed in the html string\njQuery.parseHTML = function( data, context, keepScripts ) {\n\tif ( typeof data !== \"string\" ) {\n\t\treturn [];\n\t}\n\tif ( typeof context === \"boolean\" ) {\n\t\tkeepScripts = context;\n\t\tcontext = false;\n\t}\n\n\tvar base, parsed, scripts;\n\n\tif ( !context ) {\n\n\t\t// Stop scripts or inline event handlers from being executed immediately\n\t\t// by using document.implementation\n\t\tif ( support.createHTMLDocument ) {\n\t\t\tcontext = document.implementation.createHTMLDocument( \"\" );\n\n\t\t\t// Set the base href for the created document\n\t\t\t// so any parsed elements with URLs\n\t\t\t// are based on the document's URL (gh-2965)\n\t\t\tbase = context.createElement( \"base\" );\n\t\t\tbase.href = document.location.href;\n\t\t\tcontext.head.appendChild( base );\n\t\t} else {\n\t\t\tcontext = document;\n\t\t}\n\t}\n\n\tparsed = rsingleTag.exec( data );\n\tscripts = !keepScripts && [];\n\n\t// Single tag\n\tif ( parsed ) {\n\t\treturn [ context.createElement( parsed[ 1 ] ) ];\n\t}\n\n\tparsed = buildFragment( [ data ], context, scripts );\n\n\tif ( scripts && scripts.length ) {\n\t\tjQuery( scripts ).remove();\n\t}\n\n\treturn jQuery.merge( [], parsed.childNodes );\n};\n\n\n/**\n * Load a url into a page\n */\njQuery.fn.load = function( url, params, callback ) {\n\tvar selector, type, response,\n\t\tself = this,\n\t\toff = url.indexOf( \" \" );\n\n\tif ( off > -1 ) {\n\t\tselector = stripAndCollapse( url.slice( off ) );\n\t\turl = url.slice( 0, off );\n\t}\n\n\t// If it's a function\n\tif ( isFunction( params ) ) {\n\n\t\t// We assume that it's the callback\n\t\tcallback = params;\n\t\tparams = undefined;\n\n\t// Otherwise, build a param string\n\t} else if ( params && typeof params === \"object\" ) {\n\t\ttype = \"POST\";\n\t}\n\n\t// If we have elements to modify, make the request\n\tif ( self.length > 0 ) {\n\t\tjQuery.ajax( {\n\t\t\turl: url,\n\n\t\t\t// If \"type\" variable is undefined, then \"GET\" method will be used.\n\t\t\t// Make value of this field explicit since\n\t\t\t// user can override it through ajaxSetup method\n\t\t\ttype: type || \"GET\",\n\t\t\tdataType: \"html\",\n\t\t\tdata: params\n\t\t} ).done( function( responseText ) {\n\n\t\t\t// Save response for use in complete callback\n\t\t\tresponse = arguments;\n\n\t\t\tself.html( selector ?\n\n\t\t\t\t// If a selector was specified, locate the right elements in a dummy div\n\t\t\t\t// Exclude scripts to avoid IE 'Permission Denied' errors\n\t\t\t\tjQuery( \"<div>\" ).append( jQuery.parseHTML( responseText ) ).find( selector ) :\n\n\t\t\t\t// Otherwise use the full result\n\t\t\t\tresponseText );\n\n\t\t// If the request succeeds, this function gets \"data\", \"status\", \"jqXHR\"\n\t\t// but they are ignored because response was set above.\n\t\t// If it fails, this function gets \"jqXHR\", \"status\", \"error\"\n\t\t} ).always( callback && function( jqXHR, status ) {\n\t\t\tself.each( function() {\n\t\t\t\tcallback.apply( this, response || [ jqXHR.responseText, status, jqXHR ] );\n\t\t\t} );\n\t\t} );\n\t}\n\n\treturn this;\n};\n\n\n\n\n// Attach a bunch of functions for handling common AJAX events\njQuery.each( [\n\t\"ajaxStart\",\n\t\"ajaxStop\",\n\t\"ajaxComplete\",\n\t\"ajaxError\",\n\t\"ajaxSuccess\",\n\t\"ajaxSend\"\n], function( i, type ) {\n\tjQuery.fn[ type ] = function( fn ) {\n\t\treturn this.on( type, fn );\n\t};\n} );\n\n\n\n\njQuery.expr.pseudos.animated = function( elem ) {\n\treturn jQuery.grep( jQuery.timers, function( fn ) {\n\t\treturn elem === fn.elem;\n\t} ).length;\n};\n\n\n\n\njQuery.offset = {\n\tsetOffset: function( elem, options, i ) {\n\t\tvar curPosition, curLeft, curCSSTop, curTop, curOffset, curCSSLeft, calculatePosition,\n\t\t\tposition = jQuery.css( elem, \"position\" ),\n\t\t\tcurElem = jQuery( elem ),\n\t\t\tprops = {};\n\n\t\t// Set position first, in-case top/left are set even on static elem\n\t\tif ( position === \"static\" ) {\n\t\t\telem.style.position = \"relative\";\n\t\t}\n\n\t\tcurOffset = curElem.offset();\n\t\tcurCSSTop = jQuery.css( elem, \"top\" );\n\t\tcurCSSLeft = jQuery.css( elem, \"left\" );\n\t\tcalculatePosition = ( position === \"absolute\" || position === \"fixed\" ) &&\n\t\t\t( curCSSTop + curCSSLeft ).indexOf( \"auto\" ) > -1;\n\n\t\t// Need to be able to calculate position if either\n\t\t// top or left is auto and position is either absolute or fixed\n\t\tif ( calculatePosition ) {\n\t\t\tcurPosition = curElem.position();\n\t\t\tcurTop = curPosition.top;\n\t\t\tcurLeft = curPosition.left;\n\n\t\t} else {\n\t\t\tcurTop = parseFloat( curCSSTop ) || 0;\n\t\t\tcurLeft = parseFloat( curCSSLeft ) || 0;\n\t\t}\n\n\t\tif ( isFunction( options ) ) {\n\n\t\t\t// Use jQuery.extend here to allow modification of coordinates argument (gh-1848)\n\t\t\toptions = options.call( elem, i, jQuery.extend( {}, curOffset ) );\n\t\t}\n\n\t\tif ( options.top != null ) {\n\t\t\tprops.top = ( options.top - curOffset.top ) + curTop;\n\t\t}\n\t\tif ( options.left != null ) {\n\t\t\tprops.left = ( options.left - curOffset.left ) + curLeft;\n\t\t}\n\n\t\tif ( \"using\" in options ) {\n\t\t\toptions.using.call( elem, props );\n\n\t\t} else {\n\t\t\tcurElem.css( props );\n\t\t}\n\t}\n};\n\njQuery.fn.extend( {\n\n\t// offset() relates an element's border box to the document origin\n\toffset: function( options ) {\n\n\t\t// Preserve chaining for setter\n\t\tif ( arguments.length ) {\n\t\t\treturn options === undefined ?\n\t\t\t\tthis :\n\t\t\t\tthis.each( function( i ) {\n\t\t\t\t\tjQuery.offset.setOffset( this, options, i );\n\t\t\t\t} );\n\t\t}\n\n\t\tvar rect, win,\n\t\t\telem = this[ 0 ];\n\n\t\tif ( !elem ) {\n\t\t\treturn;\n\t\t}\n\n\t\t// Return zeros for disconnected and hidden (display: none) elements (gh-2310)\n\t\t// Support: IE <=11 only\n\t\t// Running getBoundingClientRect on a\n\t\t// disconnected node in IE throws an error\n\t\tif ( !elem.getClientRects().length ) {\n\t\t\treturn { top: 0, left: 0 };\n\t\t}\n\n\t\t// Get document-relative position by adding viewport scroll to viewport-relative gBCR\n\t\trect = elem.getBoundingClientRect();\n\t\twin = elem.ownerDocument.defaultView;\n\t\treturn {\n\t\t\ttop: rect.top + win.pageYOffset,\n\t\t\tleft: rect.left + win.pageXOffset\n\t\t};\n\t},\n\n\t// position() relates an element's margin box to its offset parent's padding box\n\t// This corresponds to the behavior of CSS absolute positioning\n\tposition: function() {\n\t\tif ( !this[ 0 ] ) {\n\t\t\treturn;\n\t\t}\n\n\t\tvar offsetParent, offset, doc,\n\t\t\telem = this[ 0 ],\n\t\t\tparentOffset = { top: 0, left: 0 };\n\n\t\t// position:fixed elements are offset from the viewport, which itself always has zero offset\n\t\tif ( jQuery.css( elem, \"position\" ) === \"fixed\" ) {\n\n\t\t\t// Assume position:fixed implies availability of getBoundingClientRect\n\t\t\toffset = elem.getBoundingClientRect();\n\n\t\t} else {\n\t\t\toffset = this.offset();\n\n\t\t\t// Account for the *real* offset parent, which can be the document or its root element\n\t\t\t// when a statically positioned element is identified\n\t\t\tdoc = elem.ownerDocument;\n\t\t\toffsetParent = elem.offsetParent || doc.documentElement;\n\t\t\twhile ( offsetParent &&\n\t\t\t\t( offsetParent === doc.body || offsetParent === doc.documentElement ) &&\n\t\t\t\tjQuery.css( offsetParent, \"position\" ) === \"static\" ) {\n\n\t\t\t\toffsetParent = offsetParent.parentNode;\n\t\t\t}\n\t\t\tif ( offsetParent && offsetParent !== elem && offsetParent.nodeType === 1 ) {\n\n\t\t\t\t// Incorporate borders into its offset, since they are outside its content origin\n\t\t\t\tparentOffset = jQuery( offsetParent ).offset();\n\t\t\t\tparentOffset.top += jQuery.css( offsetParent, \"borderTopWidth\", true );\n\t\t\t\tparentOffset.left += jQuery.css( offsetParent, \"borderLeftWidth\", true );\n\t\t\t}\n\t\t}\n\n\t\t// Subtract parent offsets and element margins\n\t\treturn {\n\t\t\ttop: offset.top - parentOffset.top - jQuery.css( elem, \"marginTop\", true ),\n\t\t\tleft: offset.left - parentOffset.left - jQuery.css( elem, \"marginLeft\", true )\n\t\t};\n\t},\n\n\t// This method will return documentElement in the following cases:\n\t// 1) For the element inside the iframe without offsetParent, this method will return\n\t//    documentElement of the parent window\n\t// 2) For the hidden or detached element\n\t// 3) For body or html element, i.e. in case of the html node - it will return itself\n\t//\n\t// but those exceptions were never presented as a real life use-cases\n\t// and might be considered as more preferable results.\n\t//\n\t// This logic, however, is not guaranteed and can change at any point in the future\n\toffsetParent: function() {\n\t\treturn this.map( function() {\n\t\t\tvar offsetParent = this.offsetParent;\n\n\t\t\twhile ( offsetParent && jQuery.css( offsetParent, \"position\" ) === \"static\" ) {\n\t\t\t\toffsetParent = offsetParent.offsetParent;\n\t\t\t}\n\n\t\t\treturn offsetParent || documentElement;\n\t\t} );\n\t}\n} );\n\n// Create scrollLeft and scrollTop methods\njQuery.each( { scrollLeft: \"pageXOffset\", scrollTop: \"pageYOffset\" }, function( method, prop ) {\n\tvar top = \"pageYOffset\" === prop;\n\n\tjQuery.fn[ method ] = function( val ) {\n\t\treturn access( this, function( elem, method, val ) {\n\n\t\t\t// Coalesce documents and windows\n\t\t\tvar win;\n\t\t\tif ( isWindow( elem ) ) {\n\t\t\t\twin = elem;\n\t\t\t} else if ( elem.nodeType === 9 ) {\n\t\t\t\twin = elem.defaultView;\n\t\t\t}\n\n\t\t\tif ( val === undefined ) {\n\t\t\t\treturn win ? win[ prop ] : elem[ method ];\n\t\t\t}\n\n\t\t\tif ( win ) {\n\t\t\t\twin.scrollTo(\n\t\t\t\t\t!top ? val : win.pageXOffset,\n\t\t\t\t\ttop ? val : win.pageYOffset\n\t\t\t\t);\n\n\t\t\t} else {\n\t\t\t\telem[ method ] = val;\n\t\t\t}\n\t\t}, method, val, arguments.length );\n\t};\n} );\n\n// Support: Safari <=7 - 9.1, Chrome <=37 - 49\n// Add the top/left cssHooks using jQuery.fn.position\n// Webkit bug: https://bugs.webkit.org/show_bug.cgi?id=29084\n// Blink bug: https://bugs.chromium.org/p/chromium/issues/detail?id=589347\n// getComputedStyle returns percent when specified for top/left/bottom/right;\n// rather than make the css module depend on the offset module, just check for it here\njQuery.each( [ \"top\", \"left\" ], function( i, prop ) {\n\tjQuery.cssHooks[ prop ] = addGetHookIf( support.pixelPosition,\n\t\tfunction( elem, computed ) {\n\t\t\tif ( computed ) {\n\t\t\t\tcomputed = curCSS( elem, prop );\n\n\t\t\t\t// If curCSS returns percentage, fallback to offset\n\t\t\t\treturn rnumnonpx.test( computed ) ?\n\t\t\t\t\tjQuery( elem ).position()[ prop ] + \"px\" :\n\t\t\t\t\tcomputed;\n\t\t\t}\n\t\t}\n\t);\n} );\n\n\n// Create innerHeight, innerWidth, height, width, outerHeight and outerWidth methods\njQuery.each( { Height: \"height\", Width: \"width\" }, function( name, type ) {\n\tjQuery.each( { padding: \"inner\" + name, content: type, \"\": \"outer\" + name },\n\t\tfunction( defaultExtra, funcName ) {\n\n\t\t// Margin is only for outerHeight, outerWidth\n\t\tjQuery.fn[ funcName ] = function( margin, value ) {\n\t\t\tvar chainable = arguments.length && ( defaultExtra || typeof margin !== \"boolean\" ),\n\t\t\t\textra = defaultExtra || ( margin === true || value === true ? \"margin\" : \"border\" );\n\n\t\t\treturn access( this, function( elem, type, value ) {\n\t\t\t\tvar doc;\n\n\t\t\t\tif ( isWindow( elem ) ) {\n\n\t\t\t\t\t// $( window ).outerWidth/Height return w/h including scrollbars (gh-1729)\n\t\t\t\t\treturn funcName.indexOf( \"outer\" ) === 0 ?\n\t\t\t\t\t\telem[ \"inner\" + name ] :\n\t\t\t\t\t\telem.document.documentElement[ \"client\" + name ];\n\t\t\t\t}\n\n\t\t\t\t// Get document width or height\n\t\t\t\tif ( elem.nodeType === 9 ) {\n\t\t\t\t\tdoc = elem.documentElement;\n\n\t\t\t\t\t// Either scroll[Width/Height] or offset[Width/Height] or client[Width/Height],\n\t\t\t\t\t// whichever is greatest\n\t\t\t\t\treturn Math.max(\n\t\t\t\t\t\telem.body[ \"scroll\" + name ], doc[ \"scroll\" + name ],\n\t\t\t\t\t\telem.body[ \"offset\" + name ], doc[ \"offset\" + name ],\n\t\t\t\t\t\tdoc[ \"client\" + name ]\n\t\t\t\t\t);\n\t\t\t\t}\n\n\t\t\t\treturn value === undefined ?\n\n\t\t\t\t\t// Get width or height on the element, requesting but not forcing parseFloat\n\t\t\t\t\tjQuery.css( elem, type, extra ) :\n\n\t\t\t\t\t// Set width or height on the element\n\t\t\t\t\tjQuery.style( elem, type, value, extra );\n\t\t\t}, type, chainable ? margin : undefined, chainable );\n\t\t};\n\t} );\n} );\n\n\njQuery.each( ( \"blur focus focusin focusout resize scroll click dblclick \" +\n\t\"mousedown mouseup mousemove mouseover mouseout mouseenter mouseleave \" +\n\t\"change select submit keydown keypress keyup contextmenu\" ).split( \" \" ),\n\tfunction( i, name ) {\n\n\t// Handle event binding\n\tjQuery.fn[ name ] = function( data, fn ) {\n\t\treturn arguments.length > 0 ?\n\t\t\tthis.on( name, null, data, fn ) :\n\t\t\tthis.trigger( name );\n\t};\n} );\n\njQuery.fn.extend( {\n\thover: function( fnOver, fnOut ) {\n\t\treturn this.mouseenter( fnOver ).mouseleave( fnOut || fnOver );\n\t}\n} );\n\n\n\n\njQuery.fn.extend( {\n\n\tbind: function( types, data, fn ) {\n\t\treturn this.on( types, null, data, fn );\n\t},\n\tunbind: function( types, fn ) {\n\t\treturn this.off( types, null, fn );\n\t},\n\n\tdelegate: function( selector, types, data, fn ) {\n\t\treturn this.on( types, selector, data, fn );\n\t},\n\tundelegate: function( selector, types, fn ) {\n\n\t\t// ( namespace ) or ( selector, types [, fn] )\n\t\treturn arguments.length === 1 ?\n\t\t\tthis.off( selector, \"**\" ) :\n\t\t\tthis.off( types, selector || \"**\", fn );\n\t}\n} );\n\n// Bind a function to a context, optionally partially applying any\n// arguments.\n// jQuery.proxy is deprecated to promote standards (specifically Function#bind)\n// However, it is not slated for removal any time soon\njQuery.proxy = function( fn, context ) {\n\tvar tmp, args, proxy;\n\n\tif ( typeof context === \"string\" ) {\n\t\ttmp = fn[ context ];\n\t\tcontext = fn;\n\t\tfn = tmp;\n\t}\n\n\t// Quick check to determine if target is callable, in the spec\n\t// this throws a TypeError, but we will just return undefined.\n\tif ( !isFunction( fn ) ) {\n\t\treturn undefined;\n\t}\n\n\t// Simulated bind\n\targs = slice.call( arguments, 2 );\n\tproxy = function() {\n\t\treturn fn.apply( context || this, args.concat( slice.call( arguments ) ) );\n\t};\n\n\t// Set the guid of unique handler to the same of original handler, so it can be removed\n\tproxy.guid = fn.guid = fn.guid || jQuery.guid++;\n\n\treturn proxy;\n};\n\njQuery.holdReady = function( hold ) {\n\tif ( hold ) {\n\t\tjQuery.readyWait++;\n\t} else {\n\t\tjQuery.ready( true );\n\t}\n};\njQuery.isArray = Array.isArray;\njQuery.parseJSON = JSON.parse;\njQuery.nodeName = nodeName;\njQuery.isFunction = isFunction;\njQuery.isWindow = isWindow;\njQuery.camelCase = camelCase;\njQuery.type = toType;\n\njQuery.now = Date.now;\n\njQuery.isNumeric = function( obj ) {\n\n\t// As of jQuery 3.0, isNumeric is limited to\n\t// strings and numbers (primitives or objects)\n\t// that can be coerced to finite numbers (gh-2662)\n\tvar type = jQuery.type( obj );\n\treturn ( type === \"number\" || type === \"string\" ) &&\n\n\t\t// parseFloat NaNs numeric-cast false positives (\"\")\n\t\t// ...but misinterprets leading-number strings, particularly hex literals (\"0x...\")\n\t\t// subtraction forces infinities to NaN\n\t\t!isNaN( obj - parseFloat( obj ) );\n};\n\n\n\n\n// Register as a named AMD module, since jQuery can be concatenated with other\n// files that may use define, but not via a proper concatenation script that\n// understands anonymous AMD modules. A named AMD is safest and most robust\n// way to register. Lowercase jquery is used because AMD module names are\n// derived from file names, and jQuery is normally delivered in a lowercase\n// file name. Do this after creating the global so that if an AMD module wants\n// to call noConflict to hide this version of jQuery, it will work.\n\n// Note that for maximum portability, libraries that are not jQuery should\n// declare themselves as anonymous modules, and avoid setting a global if an\n// AMD loader is present. jQuery is a special case. For more information, see\n// https://github.com/jrburke/requirejs/wiki/Updating-existing-libraries#wiki-anon\n\nif ( typeof define === \"function\" && define.amd ) {\n\tdefine( \"jquery\", [], function() {\n\t\treturn jQuery;\n\t} );\n}\n\n\n\n\nvar\n\n\t// Map over jQuery in case of overwrite\n\t_jQuery = window.jQuery,\n\n\t// Map over the $ in case of overwrite\n\t_$ = window.$;\n\njQuery.noConflict = function( deep ) {\n\tif ( window.$ === jQuery ) {\n\t\twindow.$ = _$;\n\t}\n\n\tif ( deep && window.jQuery === jQuery ) {\n\t\twindow.jQuery = _jQuery;\n\t}\n\n\treturn jQuery;\n};\n\n// Expose jQuery and $ identifiers, even in AMD\n// (#7102#comment:10, https://github.com/jquery/jquery/pull/557)\n// and CommonJS for browser emulators (#13566)\nif ( !noGlobal ) {\n\twindow.jQuery = window.$ = jQuery;\n}\n\n\n\n\nreturn jQuery;\n} );\n","// This is (almost) directly from Node.js utils\n// https://github.com/joyent/node/blob/f8c335d0caf47f16d31413f89aa28eda3878e3aa/lib/util.js\n\nvar getName = require('get-func-name');\nvar getProperties = require('./getProperties');\nvar getEnumerableProperties = require('./getEnumerableProperties');\nvar config = require('../config');\n\nmodule.exports = inspect;\n\n/**\n * ### .inspect(obj, [showHidden], [depth], [colors])\n *\n * Echoes the value of a value. Tries to print the value out\n * in the best way possible given the different types.\n *\n * @param {Object} obj The object to print out.\n * @param {Boolean} showHidden Flag that shows hidden (not enumerable)\n *    properties of objects. Default is false.\n * @param {Number} depth Depth in which to descend in object. Default is 2.\n * @param {Boolean} colors Flag to turn on ANSI escape codes to color the\n *    output. Default is false (no coloring).\n * @namespace Utils\n * @name inspect\n */\nfunction inspect(obj, showHidden, depth, colors) {\n  var ctx = {\n    showHidden: showHidden,\n    seen: [],\n    stylize: function (str) { return str; }\n  };\n  return formatValue(ctx, obj, (typeof depth === 'undefined' ? 2 : depth));\n}\n\n// Returns true if object is a DOM element.\nvar isDOMElement = function (object) {\n  if (typeof HTMLElement === 'object') {\n    return object instanceof HTMLElement;\n  } else {\n    return object &&\n      typeof object === 'object' &&\n      'nodeType' in object &&\n      object.nodeType === 1 &&\n      typeof object.nodeName === 'string';\n  }\n};\n\nfunction formatValue(ctx, value, recurseTimes) {\n  // Provide a hook for user-specified inspect functions.\n  // Check that value is an object with an inspect function on it\n  if (value && typeof value.inspect === 'function' &&\n      // Filter out the util module, it's inspect function is special\n      value.inspect !== exports.inspect &&\n      // Also filter out any prototype objects using the circular check.\n      !(value.constructor && value.constructor.prototype === value)) {\n    var ret = value.inspect(recurseTimes, ctx);\n    if (typeof ret !== 'string') {\n      ret = formatValue(ctx, ret, recurseTimes);\n    }\n    return ret;\n  }\n\n  // Primitive types cannot have properties\n  var primitive = formatPrimitive(ctx, value);\n  if (primitive) {\n    return primitive;\n  }\n\n  // If this is a DOM element, try to get the outer HTML.\n  if (isDOMElement(value)) {\n    if ('outerHTML' in value) {\n      return value.outerHTML;\n      // This value does not have an outerHTML attribute,\n      //   it could still be an XML element\n    } else {\n      // Attempt to serialize it\n      try {\n        if (document.xmlVersion) {\n          var xmlSerializer = new XMLSerializer();\n          return xmlSerializer.serializeToString(value);\n        } else {\n          // Firefox 11- do not support outerHTML\n          //   It does, however, support innerHTML\n          //   Use the following to render the element\n          var ns = \"http://www.w3.org/1999/xhtml\";\n          var container = document.createElementNS(ns, '_');\n\n          container.appendChild(value.cloneNode(false));\n          var html = container.innerHTML\n            .replace('><', '>' + value.innerHTML + '<');\n          container.innerHTML = '';\n          return html;\n        }\n      } catch (err) {\n        // This could be a non-native DOM implementation,\n        //   continue with the normal flow:\n        //   printing the element as if it is an object.\n      }\n    }\n  }\n\n  // Look up the keys of the object.\n  var visibleKeys = getEnumerableProperties(value);\n  var keys = ctx.showHidden ? getProperties(value) : visibleKeys;\n\n  var name, nameSuffix;\n\n  // Some type of object without properties can be shortcutted.\n  // In IE, errors have a single `stack` property, or if they are vanilla `Error`,\n  // a `stack` plus `description` property; ignore those for consistency.\n  if (keys.length === 0 || (isError(value) && (\n      (keys.length === 1 && keys[0] === 'stack') ||\n      (keys.length === 2 && keys[0] === 'description' && keys[1] === 'stack')\n     ))) {\n    if (typeof value === 'function') {\n      name = getName(value);\n      nameSuffix = name ? ': ' + name : '';\n      return ctx.stylize('[Function' + nameSuffix + ']', 'special');\n    }\n    if (isRegExp(value)) {\n      return ctx.stylize(RegExp.prototype.toString.call(value), 'regexp');\n    }\n    if (isDate(value)) {\n      return ctx.stylize(Date.prototype.toUTCString.call(value), 'date');\n    }\n    if (isError(value)) {\n      return formatError(value);\n    }\n  }\n\n  var base = ''\n    , array = false\n    , typedArray = false\n    , braces = ['{', '}'];\n\n  if (isTypedArray(value)) {\n    typedArray = true;\n    braces = ['[', ']'];\n  }\n\n  // Make Array say that they are Array\n  if (isArray(value)) {\n    array = true;\n    braces = ['[', ']'];\n  }\n\n  // Make functions say that they are functions\n  if (typeof value === 'function') {\n    name = getName(value);\n    nameSuffix = name ? ': ' + name : '';\n    base = ' [Function' + nameSuffix + ']';\n  }\n\n  // Make RegExps say that they are RegExps\n  if (isRegExp(value)) {\n    base = ' ' + RegExp.prototype.toString.call(value);\n  }\n\n  // Make dates with properties first say the date\n  if (isDate(value)) {\n    base = ' ' + Date.prototype.toUTCString.call(value);\n  }\n\n  // Make error with message first say the error\n  if (isError(value)) {\n    return formatError(value);\n  }\n\n  if (keys.length === 0 && (!array || value.length == 0)) {\n    return braces[0] + base + braces[1];\n  }\n\n  if (recurseTimes < 0) {\n    if (isRegExp(value)) {\n      return ctx.stylize(RegExp.prototype.toString.call(value), 'regexp');\n    } else {\n      return ctx.stylize('[Object]', 'special');\n    }\n  }\n\n  ctx.seen.push(value);\n\n  var output;\n  if (array) {\n    output = formatArray(ctx, value, recurseTimes, visibleKeys, keys);\n  } else if (typedArray) {\n    return formatTypedArray(value);\n  } else {\n    output = keys.map(function(key) {\n      return formatProperty(ctx, value, recurseTimes, visibleKeys, key, array);\n    });\n  }\n\n  ctx.seen.pop();\n\n  return reduceToSingleString(output, base, braces);\n}\n\n\nfunction formatPrimitive(ctx, value) {\n  switch (typeof value) {\n    case 'undefined':\n      return ctx.stylize('undefined', 'undefined');\n\n    case 'string':\n      var simple = '\\'' + JSON.stringify(value).replace(/^\"|\"$/g, '')\n                                               .replace(/'/g, \"\\\\'\")\n                                               .replace(/\\\\\"/g, '\"') + '\\'';\n      return ctx.stylize(simple, 'string');\n\n    case 'number':\n      if (value === 0 && (1/value) === -Infinity) {\n        return ctx.stylize('-0', 'number');\n      }\n      return ctx.stylize('' + value, 'number');\n\n    case 'boolean':\n      return ctx.stylize('' + value, 'boolean');\n\n    case 'symbol':\n      return ctx.stylize(value.toString(), 'symbol');\n  }\n  // For some reason typeof null is \"object\", so special case here.\n  if (value === null) {\n    return ctx.stylize('null', 'null');\n  }\n}\n\n\nfunction formatError(value) {\n  return '[' + Error.prototype.toString.call(value) + ']';\n}\n\n\nfunction formatArray(ctx, value, recurseTimes, visibleKeys, keys) {\n  var output = [];\n  for (var i = 0, l = value.length; i < l; ++i) {\n    if (Object.prototype.hasOwnProperty.call(value, String(i))) {\n      output.push(formatProperty(ctx, value, recurseTimes, visibleKeys,\n          String(i), true));\n    } else {\n      output.push('');\n    }\n  }\n\n  keys.forEach(function(key) {\n    if (!key.match(/^\\d+$/)) {\n      output.push(formatProperty(ctx, value, recurseTimes, visibleKeys,\n          key, true));\n    }\n  });\n  return output;\n}\n\nfunction formatTypedArray(value) {\n  var str = '[ ';\n\n  for (var i = 0; i < value.length; ++i) {\n    if (str.length >= config.truncateThreshold - 7) {\n      str += '...';\n      break;\n    }\n    str += value[i] + ', ';\n  }\n  str += ' ]';\n\n  // Removing trailing `, ` if the array was not truncated\n  if (str.indexOf(',  ]') !== -1) {\n    str = str.replace(',  ]', ' ]');\n  }\n\n  return str;\n}\n\nfunction formatProperty(ctx, value, recurseTimes, visibleKeys, key, array) {\n  var name;\n  var propDescriptor = Object.getOwnPropertyDescriptor(value, key);\n  var str;\n\n  if (propDescriptor) {\n    if (propDescriptor.get) {\n      if (propDescriptor.set) {\n        str = ctx.stylize('[Getter/Setter]', 'special');\n      } else {\n        str = ctx.stylize('[Getter]', 'special');\n      }\n    } else {\n      if (propDescriptor.set) {\n        str = ctx.stylize('[Setter]', 'special');\n      }\n    }\n  }\n  if (visibleKeys.indexOf(key) < 0) {\n    name = '[' + key + ']';\n  }\n  if (!str) {\n    if (ctx.seen.indexOf(value[key]) < 0) {\n      if (recurseTimes === null) {\n        str = formatValue(ctx, value[key], null);\n      } else {\n        str = formatValue(ctx, value[key], recurseTimes - 1);\n      }\n      if (str.indexOf('\\n') > -1) {\n        if (array) {\n          str = str.split('\\n').map(function(line) {\n            return '  ' + line;\n          }).join('\\n').substr(2);\n        } else {\n          str = '\\n' + str.split('\\n').map(function(line) {\n            return '   ' + line;\n          }).join('\\n');\n        }\n      }\n    } else {\n      str = ctx.stylize('[Circular]', 'special');\n    }\n  }\n  if (typeof name === 'undefined') {\n    if (array && key.match(/^\\d+$/)) {\n      return str;\n    }\n    name = JSON.stringify('' + key);\n    if (name.match(/^\"([a-zA-Z_][a-zA-Z_0-9]*)\"$/)) {\n      name = name.substr(1, name.length - 2);\n      name = ctx.stylize(name, 'name');\n    } else {\n      name = name.replace(/'/g, \"\\\\'\")\n                 .replace(/\\\\\"/g, '\"')\n                 .replace(/(^\"|\"$)/g, \"'\");\n      name = ctx.stylize(name, 'string');\n    }\n  }\n\n  return name + ': ' + str;\n}\n\n\nfunction reduceToSingleString(output, base, braces) {\n  var numLinesEst = 0;\n  var length = output.reduce(function(prev, cur) {\n    numLinesEst++;\n    if (cur.indexOf('\\n') >= 0) numLinesEst++;\n    return prev + cur.length + 1;\n  }, 0);\n\n  if (length > 60) {\n    return braces[0] +\n           (base === '' ? '' : base + '\\n ') +\n           ' ' +\n           output.join(',\\n  ') +\n           ' ' +\n           braces[1];\n  }\n\n  return braces[0] + base + ' ' + output.join(', ') + ' ' + braces[1];\n}\n\nfunction isTypedArray(ar) {\n  // Unfortunately there's no way to check if an object is a TypedArray\n  // We have to check if it's one of these types\n  return (typeof ar === 'object' && /\\w+Array]$/.test(objectToString(ar)));\n}\n\nfunction isArray(ar) {\n  return Array.isArray(ar) ||\n         (typeof ar === 'object' && objectToString(ar) === '[object Array]');\n}\n\nfunction isRegExp(re) {\n  return typeof re === 'object' && objectToString(re) === '[object RegExp]';\n}\n\nfunction isDate(d) {\n  return typeof d === 'object' && objectToString(d) === '[object Date]';\n}\n\nfunction isError(e) {\n  return typeof e === 'object' && objectToString(e) === '[object Error]';\n}\n\nfunction objectToString(o) {\n  return Object.prototype.toString.call(o);\n}\n","var config = require('../config');\n\n/*!\n * Chai - isProxyEnabled helper\n * Copyright(c) 2012-2014 Jake Luer <jake@alogicalparadox.com>\n * MIT Licensed\n */\n\n/**\n * ### .isProxyEnabled()\n *\n * Helper function to check if Chai's proxy protection feature is enabled. If\n * proxies are unsupported or disabled via the user's Chai config, then return\n * false. Otherwise, return true.\n *\n * @namespace Utils\n * @name isProxyEnabled\n */\n\nmodule.exports = function isProxyEnabled() {\n  return config.useProxy && \n    typeof Proxy !== 'undefined' &&\n    typeof Reflect !== 'undefined';\n};\n","var config = require('../config');\n\nvar fnLengthDesc = Object.getOwnPropertyDescriptor(function () {}, 'length');\n\n/*!\n * Chai - addLengthGuard utility\n * Copyright(c) 2012-2014 Jake Luer <jake@alogicalparadox.com>\n * MIT Licensed\n */\n\n/**\n * ### .addLengthGuard(fn, assertionName, isChainable)\n *\n * Define `length` as a getter on the given uninvoked method assertion. The\n * getter acts as a guard against chaining `length` directly off of an uninvoked\n * method assertion, which is a problem because it references `function`'s\n * built-in `length` property instead of Chai's `length` assertion. When the\n * getter catches the user making this mistake, it throws an error with a\n * helpful message.\n *\n * There are two ways in which this mistake can be made. The first way is by\n * chaining the `length` assertion directly off of an uninvoked chainable\n * method. In this case, Chai suggests that the user use `lengthOf` instead. The\n * second way is by chaining the `length` assertion directly off of an uninvoked\n * non-chainable method. Non-chainable methods must be invoked prior to\n * chaining. In this case, Chai suggests that the user consult the docs for the\n * given assertion.\n *\n * If the `length` property of functions is unconfigurable, then return `fn`\n * without modification.\n *\n * Note that in ES6, the function's `length` property is configurable, so once\n * support for legacy environments is dropped, Chai's `length` property can\n * replace the built-in function's `length` property, and this length guard will\n * no longer be necessary. In the mean time, maintaining consistency across all\n * environments is the priority.\n *\n * @param {Function} fn\n * @param {String} assertionName\n * @param {Boolean} isChainable\n * @namespace Utils\n * @name addLengthGuard\n */\n\nmodule.exports = function addLengthGuard (fn, assertionName, isChainable) {\n  if (!fnLengthDesc.configurable) return fn;\n\n  Object.defineProperty(fn, 'length', {\n    get: function () {\n      if (isChainable) {\n        throw Error('Invalid Chai property: ' + assertionName + '.length. Due' +\n          ' to a compatibility issue, \"length\" cannot directly follow \"' +\n          assertionName + '\". Use \"' + assertionName + '.lengthOf\" instead.');\n      }\n\n      throw Error('Invalid Chai property: ' + assertionName + '.length. See' +\n        ' docs for proper usage of \"' + assertionName + '\".');\n    }\n  });\n\n  return fn;\n};\n","var config = require('../config');\nvar flag = require('./flag');\nvar getProperties = require('./getProperties');\nvar isProxyEnabled = require('./isProxyEnabled');\n\n/*!\n * Chai - proxify utility\n * Copyright(c) 2012-2014 Jake Luer <jake@alogicalparadox.com>\n * MIT Licensed\n */\n\n/**\n * ### .proxify(object)\n *\n * Return a proxy of given object that throws an error when a non-existent\n * property is read. By default, the root cause is assumed to be a misspelled\n * property, and thus an attempt is made to offer a reasonable suggestion from\n * the list of existing properties. However, if a nonChainableMethodName is\n * provided, then the root cause is instead a failure to invoke a non-chainable\n * method prior to reading the non-existent property.\n * \n * If proxies are unsupported or disabled via the user's Chai config, then\n * return object without modification.\n *\n * @param {Object} obj\n * @param {String} nonChainableMethodName\n * @namespace Utils\n * @name proxify\n */\n\nvar builtins = ['__flags', '__methods', '_obj', 'assert'];\n\nmodule.exports = function proxify(obj, nonChainableMethodName) {\n  if (!isProxyEnabled()) return obj;\n\n  return new Proxy(obj, {\n    get: function proxyGetter(target, property) {\n      // This check is here because we should not throw errors on Symbol properties\n      // such as `Symbol.toStringTag`.\n      // The values for which an error should be thrown can be configured using\n      // the `config.proxyExcludedKeys` setting.\n      if (typeof property === 'string' &&\n          config.proxyExcludedKeys.indexOf(property) === -1 &&\n          !Reflect.has(target, property)) {\n        // Special message for invalid property access of non-chainable methods.\n        if (nonChainableMethodName) {\n          throw Error('Invalid Chai property: ' + nonChainableMethodName + '.' +\n            property + '. See docs for proper usage of \"' +\n            nonChainableMethodName + '\".');\n        }\n\n        var orderedProperties = getProperties(target).filter(function(property) {\n          return !Object.prototype.hasOwnProperty(property) &&\n            builtins.indexOf(property) === -1;\n        }).sort(function(a, b) {\n          return stringDistance(property, a) - stringDistance(property, b);\n        });\n\n        if (orderedProperties.length &&\n            stringDistance(orderedProperties[0], property) < 4) {\n          // If the property is reasonably close to an existing Chai property,\n          // suggest that property to the user.\n          throw Error('Invalid Chai property: ' + property +\n            '. Did you mean \"' + orderedProperties[0] + '\"?');\n        } else {\n          throw Error('Invalid Chai property: ' + property);\n        }\n      }\n\n      // Use this proxy getter as the starting point for removing implementation\n      // frames from the stack trace of a failed assertion. For property\n      // assertions, this prevents the proxy getter from showing up in the stack\n      // trace since it's invoked before the property getter. For method and\n      // chainable method assertions, this flag will end up getting changed to\n      // the method wrapper, which is good since this frame will no longer be in\n      // the stack once the method is invoked. Note that Chai builtin assertion\n      // properties such as `__flags` are skipped since this is only meant to\n      // capture the starting point of an assertion. This step is also skipped\n      // if the `lockSsfi` flag is set, thus indicating that this assertion is\n      // being called from within another assertion. In that case, the `ssfi`\n      // flag is already set to the outer assertion's starting point.\n      if (builtins.indexOf(property) === -1 && !flag(target, 'lockSsfi')) {\n        flag(target, 'ssfi', proxyGetter);\n      }\n\n      return Reflect.get(target, property);\n    }\n  });\n};\n\n/**\n * # stringDistance(strA, strB)\n * Return the Levenshtein distance between two strings.\n * @param {string} strA\n * @param {string} strB\n * @return {number} the string distance between strA and strB\n * @api private\n */\n\nfunction stringDistance(strA, strB, memo) {\n  if (!memo) {\n    // `memo` is a two-dimensional array containing a cache of distances\n    // memo[i][j] is the distance between strA.slice(0, i) and\n    // strB.slice(0, j).\n    memo = [];\n    for (var i = 0; i <= strA.length; i++) {\n      memo[i] = [];\n    }\n  }\n\n  if (!memo[strA.length] || !memo[strA.length][strB.length]) {\n    if (strA.length === 0 || strB.length === 0) {\n      memo[strA.length][strB.length] = Math.max(strA.length, strB.length);\n    } else {\n      memo[strA.length][strB.length] = Math.min(\n        stringDistance(strA.slice(0, -1), strB, memo) + 1,\n        stringDistance(strA, strB.slice(0, -1), memo) + 1,\n        stringDistance(strA.slice(0, -1), strB.slice(0, -1), memo) +\n          (strA.slice(-1) === strB.slice(-1) ? 0 : 1)\n      );\n    }\n  }\n\n  return memo[strA.length][strB.length];\n}\n","(function (global, factory) {\n\ttypeof exports === 'object' && typeof module !== 'undefined' ? module.exports = factory() :\n\ttypeof define === 'function' && define.amd ? define(factory) :\n\t(global.typeDetect = factory());\n}(this, (function () { 'use strict';\n\n/* !\n * type-detect\n * Copyright(c) 2013 jake luer <jake@alogicalparadox.com>\n * MIT Licensed\n */\nvar promiseExists = typeof Promise === 'function';\n\n/* eslint-disable no-undef */\nvar globalObject = typeof self === 'object' ? self : global; // eslint-disable-line id-blacklist\n\nvar symbolExists = typeof Symbol !== 'undefined';\nvar mapExists = typeof Map !== 'undefined';\nvar setExists = typeof Set !== 'undefined';\nvar weakMapExists = typeof WeakMap !== 'undefined';\nvar weakSetExists = typeof WeakSet !== 'undefined';\nvar dataViewExists = typeof DataView !== 'undefined';\nvar symbolIteratorExists = symbolExists && typeof Symbol.iterator !== 'undefined';\nvar symbolToStringTagExists = symbolExists && typeof Symbol.toStringTag !== 'undefined';\nvar setEntriesExists = setExists && typeof Set.prototype.entries === 'function';\nvar mapEntriesExists = mapExists && typeof Map.prototype.entries === 'function';\nvar setIteratorPrototype = setEntriesExists && Object.getPrototypeOf(new Set().entries());\nvar mapIteratorPrototype = mapEntriesExists && Object.getPrototypeOf(new Map().entries());\nvar arrayIteratorExists = symbolIteratorExists && typeof Array.prototype[Symbol.iterator] === 'function';\nvar arrayIteratorPrototype = arrayIteratorExists && Object.getPrototypeOf([][Symbol.iterator]());\nvar stringIteratorExists = symbolIteratorExists && typeof String.prototype[Symbol.iterator] === 'function';\nvar stringIteratorPrototype = stringIteratorExists && Object.getPrototypeOf(''[Symbol.iterator]());\nvar toStringLeftSliceLength = 8;\nvar toStringRightSliceLength = -1;\n/**\n * ### typeOf (obj)\n *\n * Uses `Object.prototype.toString` to determine the type of an object,\n * normalising behaviour across engine versions & well optimised.\n *\n * @param {Mixed} object\n * @return {String} object type\n * @api public\n */\nfunction typeDetect(obj) {\n  /* ! Speed optimisation\n   * Pre:\n   *   string literal     x 3,039,035 ops/sec ±1.62% (78 runs sampled)\n   *   boolean literal    x 1,424,138 ops/sec ±4.54% (75 runs sampled)\n   *   number literal     x 1,653,153 ops/sec ±1.91% (82 runs sampled)\n   *   undefined          x 9,978,660 ops/sec ±1.92% (75 runs sampled)\n   *   function           x 2,556,769 ops/sec ±1.73% (77 runs sampled)\n   * Post:\n   *   string literal     x 38,564,796 ops/sec ±1.15% (79 runs sampled)\n   *   boolean literal    x 31,148,940 ops/sec ±1.10% (79 runs sampled)\n   *   number literal     x 32,679,330 ops/sec ±1.90% (78 runs sampled)\n   *   undefined          x 32,363,368 ops/sec ±1.07% (82 runs sampled)\n   *   function           x 31,296,870 ops/sec ±0.96% (83 runs sampled)\n   */\n  var typeofObj = typeof obj;\n  if (typeofObj !== 'object') {\n    return typeofObj;\n  }\n\n  /* ! Speed optimisation\n   * Pre:\n   *   null               x 28,645,765 ops/sec ±1.17% (82 runs sampled)\n   * Post:\n   *   null               x 36,428,962 ops/sec ±1.37% (84 runs sampled)\n   */\n  if (obj === null) {\n    return 'null';\n  }\n\n  /* ! Spec Conformance\n   * Test: `Object.prototype.toString.call(window)``\n   *  - Node === \"[object global]\"\n   *  - Chrome === \"[object global]\"\n   *  - Firefox === \"[object Window]\"\n   *  - PhantomJS === \"[object Window]\"\n   *  - Safari === \"[object Window]\"\n   *  - IE 11 === \"[object Window]\"\n   *  - IE Edge === \"[object Window]\"\n   * Test: `Object.prototype.toString.call(this)``\n   *  - Chrome Worker === \"[object global]\"\n   *  - Firefox Worker === \"[object DedicatedWorkerGlobalScope]\"\n   *  - Safari Worker === \"[object DedicatedWorkerGlobalScope]\"\n   *  - IE 11 Worker === \"[object WorkerGlobalScope]\"\n   *  - IE Edge Worker === \"[object WorkerGlobalScope]\"\n   */\n  if (obj === globalObject) {\n    return 'global';\n  }\n\n  /* ! Speed optimisation\n   * Pre:\n   *   array literal      x 2,888,352 ops/sec ±0.67% (82 runs sampled)\n   * Post:\n   *   array literal      x 22,479,650 ops/sec ±0.96% (81 runs sampled)\n   */\n  if (\n    Array.isArray(obj) &&\n    (symbolToStringTagExists === false || !(Symbol.toStringTag in obj))\n  ) {\n    return 'Array';\n  }\n\n  // Not caching existence of `window` and related properties due to potential\n  // for `window` to be unset before tests in quasi-browser environments.\n  if (typeof window === 'object' && window !== null) {\n    /* ! Spec Conformance\n     * (https://html.spec.whatwg.org/multipage/browsers.html#location)\n     * WhatWG HTML$7.7.3 - The `Location` interface\n     * Test: `Object.prototype.toString.call(window.location)``\n     *  - IE <=11 === \"[object Object]\"\n     *  - IE Edge <=13 === \"[object Object]\"\n     */\n    if (typeof window.location === 'object' && obj === window.location) {\n      return 'Location';\n    }\n\n    /* ! Spec Conformance\n     * (https://html.spec.whatwg.org/#document)\n     * WhatWG HTML$3.1.1 - The `Document` object\n     * Note: Most browsers currently adher to the W3C DOM Level 2 spec\n     *       (https://www.w3.org/TR/DOM-Level-2-HTML/html.html#ID-26809268)\n     *       which suggests that browsers should use HTMLTableCellElement for\n     *       both TD and TH elements. WhatWG separates these.\n     *       WhatWG HTML states:\n     *         > For historical reasons, Window objects must also have a\n     *         > writable, configurable, non-enumerable property named\n     *         > HTMLDocument whose value is the Document interface object.\n     * Test: `Object.prototype.toString.call(document)``\n     *  - Chrome === \"[object HTMLDocument]\"\n     *  - Firefox === \"[object HTMLDocument]\"\n     *  - Safari === \"[object HTMLDocument]\"\n     *  - IE <=10 === \"[object Document]\"\n     *  - IE 11 === \"[object HTMLDocument]\"\n     *  - IE Edge <=13 === \"[object HTMLDocument]\"\n     */\n    if (typeof window.document === 'object' && obj === window.document) {\n      return 'Document';\n    }\n\n    if (typeof window.navigator === 'object') {\n      /* ! Spec Conformance\n       * (https://html.spec.whatwg.org/multipage/webappapis.html#mimetypearray)\n       * WhatWG HTML$8.6.1.5 - Plugins - Interface MimeTypeArray\n       * Test: `Object.prototype.toString.call(navigator.mimeTypes)``\n       *  - IE <=10 === \"[object MSMimeTypesCollection]\"\n       */\n      if (typeof window.navigator.mimeTypes === 'object' &&\n          obj === window.navigator.mimeTypes) {\n        return 'MimeTypeArray';\n      }\n\n      /* ! Spec Conformance\n       * (https://html.spec.whatwg.org/multipage/webappapis.html#pluginarray)\n       * WhatWG HTML$8.6.1.5 - Plugins - Interface PluginArray\n       * Test: `Object.prototype.toString.call(navigator.plugins)``\n       *  - IE <=10 === \"[object MSPluginsCollection]\"\n       */\n      if (typeof window.navigator.plugins === 'object' &&\n          obj === window.navigator.plugins) {\n        return 'PluginArray';\n      }\n    }\n\n    if ((typeof window.HTMLElement === 'function' ||\n        typeof window.HTMLElement === 'object') &&\n        obj instanceof window.HTMLElement) {\n      /* ! Spec Conformance\n      * (https://html.spec.whatwg.org/multipage/webappapis.html#pluginarray)\n      * WhatWG HTML$4.4.4 - The `blockquote` element - Interface `HTMLQuoteElement`\n      * Test: `Object.prototype.toString.call(document.createElement('blockquote'))``\n      *  - IE <=10 === \"[object HTMLBlockElement]\"\n      */\n      if (obj.tagName === 'BLOCKQUOTE') {\n        return 'HTMLQuoteElement';\n      }\n\n      /* ! Spec Conformance\n       * (https://html.spec.whatwg.org/#htmltabledatacellelement)\n       * WhatWG HTML$4.9.9 - The `td` element - Interface `HTMLTableDataCellElement`\n       * Note: Most browsers currently adher to the W3C DOM Level 2 spec\n       *       (https://www.w3.org/TR/DOM-Level-2-HTML/html.html#ID-82915075)\n       *       which suggests that browsers should use HTMLTableCellElement for\n       *       both TD and TH elements. WhatWG separates these.\n       * Test: Object.prototype.toString.call(document.createElement('td'))\n       *  - Chrome === \"[object HTMLTableCellElement]\"\n       *  - Firefox === \"[object HTMLTableCellElement]\"\n       *  - Safari === \"[object HTMLTableCellElement]\"\n       */\n      if (obj.tagName === 'TD') {\n        return 'HTMLTableDataCellElement';\n      }\n\n      /* ! Spec Conformance\n       * (https://html.spec.whatwg.org/#htmltableheadercellelement)\n       * WhatWG HTML$4.9.9 - The `td` element - Interface `HTMLTableHeaderCellElement`\n       * Note: Most browsers currently adher to the W3C DOM Level 2 spec\n       *       (https://www.w3.org/TR/DOM-Level-2-HTML/html.html#ID-82915075)\n       *       which suggests that browsers should use HTMLTableCellElement for\n       *       both TD and TH elements. WhatWG separates these.\n       * Test: Object.prototype.toString.call(document.createElement('th'))\n       *  - Chrome === \"[object HTMLTableCellElement]\"\n       *  - Firefox === \"[object HTMLTableCellElement]\"\n       *  - Safari === \"[object HTMLTableCellElement]\"\n       */\n      if (obj.tagName === 'TH') {\n        return 'HTMLTableHeaderCellElement';\n      }\n    }\n  }\n\n  /* ! Speed optimisation\n  * Pre:\n  *   Float64Array       x 625,644 ops/sec ±1.58% (80 runs sampled)\n  *   Float32Array       x 1,279,852 ops/sec ±2.91% (77 runs sampled)\n  *   Uint32Array        x 1,178,185 ops/sec ±1.95% (83 runs sampled)\n  *   Uint16Array        x 1,008,380 ops/sec ±2.25% (80 runs sampled)\n  *   Uint8Array         x 1,128,040 ops/sec ±2.11% (81 runs sampled)\n  *   Int32Array         x 1,170,119 ops/sec ±2.88% (80 runs sampled)\n  *   Int16Array         x 1,176,348 ops/sec ±5.79% (86 runs sampled)\n  *   Int8Array          x 1,058,707 ops/sec ±4.94% (77 runs sampled)\n  *   Uint8ClampedArray  x 1,110,633 ops/sec ±4.20% (80 runs sampled)\n  * Post:\n  *   Float64Array       x 7,105,671 ops/sec ±13.47% (64 runs sampled)\n  *   Float32Array       x 5,887,912 ops/sec ±1.46% (82 runs sampled)\n  *   Uint32Array        x 6,491,661 ops/sec ±1.76% (79 runs sampled)\n  *   Uint16Array        x 6,559,795 ops/sec ±1.67% (82 runs sampled)\n  *   Uint8Array         x 6,463,966 ops/sec ±1.43% (85 runs sampled)\n  *   Int32Array         x 5,641,841 ops/sec ±3.49% (81 runs sampled)\n  *   Int16Array         x 6,583,511 ops/sec ±1.98% (80 runs sampled)\n  *   Int8Array          x 6,606,078 ops/sec ±1.74% (81 runs sampled)\n  *   Uint8ClampedArray  x 6,602,224 ops/sec ±1.77% (83 runs sampled)\n  */\n  var stringTag = (symbolToStringTagExists && obj[Symbol.toStringTag]);\n  if (typeof stringTag === 'string') {\n    return stringTag;\n  }\n\n  var objPrototype = Object.getPrototypeOf(obj);\n  /* ! Speed optimisation\n  * Pre:\n  *   regex literal      x 1,772,385 ops/sec ±1.85% (77 runs sampled)\n  *   regex constructor  x 2,143,634 ops/sec ±2.46% (78 runs sampled)\n  * Post:\n  *   regex literal      x 3,928,009 ops/sec ±0.65% (78 runs sampled)\n  *   regex constructor  x 3,931,108 ops/sec ±0.58% (84 runs sampled)\n  */\n  if (objPrototype === RegExp.prototype) {\n    return 'RegExp';\n  }\n\n  /* ! Speed optimisation\n  * Pre:\n  *   date               x 2,130,074 ops/sec ±4.42% (68 runs sampled)\n  * Post:\n  *   date               x 3,953,779 ops/sec ±1.35% (77 runs sampled)\n  */\n  if (objPrototype === Date.prototype) {\n    return 'Date';\n  }\n\n  /* ! Spec Conformance\n   * (http://www.ecma-international.org/ecma-262/6.0/index.html#sec-promise.prototype-@@tostringtag)\n   * ES6$25.4.5.4 - Promise.prototype[@@toStringTag] should be \"Promise\":\n   * Test: `Object.prototype.toString.call(Promise.resolve())``\n   *  - Chrome <=47 === \"[object Object]\"\n   *  - Edge <=20 === \"[object Object]\"\n   *  - Firefox 29-Latest === \"[object Promise]\"\n   *  - Safari 7.1-Latest === \"[object Promise]\"\n   */\n  if (promiseExists && objPrototype === Promise.prototype) {\n    return 'Promise';\n  }\n\n  /* ! Speed optimisation\n  * Pre:\n  *   set                x 2,222,186 ops/sec ±1.31% (82 runs sampled)\n  * Post:\n  *   set                x 4,545,879 ops/sec ±1.13% (83 runs sampled)\n  */\n  if (setExists && objPrototype === Set.prototype) {\n    return 'Set';\n  }\n\n  /* ! Speed optimisation\n  * Pre:\n  *   map                x 2,396,842 ops/sec ±1.59% (81 runs sampled)\n  * Post:\n  *   map                x 4,183,945 ops/sec ±6.59% (82 runs sampled)\n  */\n  if (mapExists && objPrototype === Map.prototype) {\n    return 'Map';\n  }\n\n  /* ! Speed optimisation\n  * Pre:\n  *   weakset            x 1,323,220 ops/sec ±2.17% (76 runs sampled)\n  * Post:\n  *   weakset            x 4,237,510 ops/sec ±2.01% (77 runs sampled)\n  */\n  if (weakSetExists && objPrototype === WeakSet.prototype) {\n    return 'WeakSet';\n  }\n\n  /* ! Speed optimisation\n  * Pre:\n  *   weakmap            x 1,500,260 ops/sec ±2.02% (78 runs sampled)\n  * Post:\n  *   weakmap            x 3,881,384 ops/sec ±1.45% (82 runs sampled)\n  */\n  if (weakMapExists && objPrototype === WeakMap.prototype) {\n    return 'WeakMap';\n  }\n\n  /* ! Spec Conformance\n   * (http://www.ecma-international.org/ecma-262/6.0/index.html#sec-dataview.prototype-@@tostringtag)\n   * ES6$24.2.4.21 - DataView.prototype[@@toStringTag] should be \"DataView\":\n   * Test: `Object.prototype.toString.call(new DataView(new ArrayBuffer(1)))``\n   *  - Edge <=13 === \"[object Object]\"\n   */\n  if (dataViewExists && objPrototype === DataView.prototype) {\n    return 'DataView';\n  }\n\n  /* ! Spec Conformance\n   * (http://www.ecma-international.org/ecma-262/6.0/index.html#sec-%mapiteratorprototype%-@@tostringtag)\n   * ES6$23.1.5.2.2 - %MapIteratorPrototype%[@@toStringTag] should be \"Map Iterator\":\n   * Test: `Object.prototype.toString.call(new Map().entries())``\n   *  - Edge <=13 === \"[object Object]\"\n   */\n  if (mapExists && objPrototype === mapIteratorPrototype) {\n    return 'Map Iterator';\n  }\n\n  /* ! Spec Conformance\n   * (http://www.ecma-international.org/ecma-262/6.0/index.html#sec-%setiteratorprototype%-@@tostringtag)\n   * ES6$23.2.5.2.2 - %SetIteratorPrototype%[@@toStringTag] should be \"Set Iterator\":\n   * Test: `Object.prototype.toString.call(new Set().entries())``\n   *  - Edge <=13 === \"[object Object]\"\n   */\n  if (setExists && objPrototype === setIteratorPrototype) {\n    return 'Set Iterator';\n  }\n\n  /* ! Spec Conformance\n   * (http://www.ecma-international.org/ecma-262/6.0/index.html#sec-%arrayiteratorprototype%-@@tostringtag)\n   * ES6$22.1.5.2.2 - %ArrayIteratorPrototype%[@@toStringTag] should be \"Array Iterator\":\n   * Test: `Object.prototype.toString.call([][Symbol.iterator]())``\n   *  - Edge <=13 === \"[object Object]\"\n   */\n  if (arrayIteratorExists && objPrototype === arrayIteratorPrototype) {\n    return 'Array Iterator';\n  }\n\n  /* ! Spec Conformance\n   * (http://www.ecma-international.org/ecma-262/6.0/index.html#sec-%stringiteratorprototype%-@@tostringtag)\n   * ES6$21.1.5.2.2 - %StringIteratorPrototype%[@@toStringTag] should be \"String Iterator\":\n   * Test: `Object.prototype.toString.call(''[Symbol.iterator]())``\n   *  - Edge <=13 === \"[object Object]\"\n   */\n  if (stringIteratorExists && objPrototype === stringIteratorPrototype) {\n    return 'String Iterator';\n  }\n\n  /* ! Speed optimisation\n  * Pre:\n  *   object from null   x 2,424,320 ops/sec ±1.67% (76 runs sampled)\n  * Post:\n  *   object from null   x 5,838,000 ops/sec ±0.99% (84 runs sampled)\n  */\n  if (objPrototype === null) {\n    return 'Object';\n  }\n\n  return Object\n    .prototype\n    .toString\n    .call(obj)\n    .slice(toStringLeftSliceLength, toStringRightSliceLength);\n}\n\nreturn typeDetect;\n\n})));\n","/*!\n * assertion-error\n * Copyright(c) 2013 Jake Luer <jake@qualiancy.com>\n * MIT Licensed\n */\n\n/*!\n * Return a function that will copy properties from\n * one object to another excluding any originally\n * listed. Returned function will create a new `{}`.\n *\n * @param {String} excluded properties ...\n * @return {Function}\n */\n\nfunction exclude () {\n  var excludes = [].slice.call(arguments);\n\n  function excludeProps (res, obj) {\n    Object.keys(obj).forEach(function (key) {\n      if (!~excludes.indexOf(key)) res[key] = obj[key];\n    });\n  }\n\n  return function extendExclude () {\n    var args = [].slice.call(arguments)\n      , i = 0\n      , res = {};\n\n    for (; i < args.length; i++) {\n      excludeProps(res, args[i]);\n    }\n\n    return res;\n  };\n};\n\n/*!\n * Primary Exports\n */\n\nmodule.exports = AssertionError;\n\n/**\n * ### AssertionError\n *\n * An extension of the JavaScript `Error` constructor for\n * assertion and validation scenarios.\n *\n * @param {String} message\n * @param {Object} properties to include (optional)\n * @param {callee} start stack function (optional)\n */\n\nfunction AssertionError (message, _props, ssf) {\n  var extend = exclude('name', 'message', 'stack', 'constructor', 'toJSON')\n    , props = extend(_props || {});\n\n  // default values\n  this.message = message || 'Unspecified AssertionError';\n  this.showDiff = false;\n\n  // copy from properties\n  for (var key in props) {\n    this[key] = props[key];\n  }\n\n  // capture stack trace\n  ssf = ssf || AssertionError;\n  if (Error.captureStackTrace) {\n    Error.captureStackTrace(this, ssf);\n  } else {\n    try {\n      throw new Error();\n    } catch(e) {\n      this.stack = e.stack;\n    }\n  }\n}\n\n/*!\n * Inherit from Error.prototype\n */\n\nAssertionError.prototype = Object.create(Error.prototype);\n\n/*!\n * Statically set name\n */\n\nAssertionError.prototype.name = 'AssertionError';\n\n/*!\n * Ensure correct constructor\n */\n\nAssertionError.prototype.constructor = AssertionError;\n\n/**\n * Allow errors to be converted to JSON for static transfer.\n *\n * @param {Boolean} include stack (default: `true`)\n * @return {Object} object that can be `JSON.stringify`\n */\n\nAssertionError.prototype.toJSON = function (stack) {\n  var extend = exclude('constructor', 'toJSON', 'stack')\n    , props = extend({ name: this.name }, this);\n\n  // include stack if exists and not turned off\n  if (false !== stack && this.stack) {\n    props.stack = this.stack;\n  }\n\n  return props;\n};\n","/*!\n * Chai - getActual utility\n * Copyright(c) 2012-2014 Jake Luer <jake@alogicalparadox.com>\n * MIT Licensed\n */\n\n/**\n * ### .getActual(object, [actual])\n *\n * Returns the `actual` value for an Assertion.\n *\n * @param {Object} object (constructed Assertion)\n * @param {Arguments} chai.Assertion.prototype.assert arguments\n * @namespace Utils\n * @name getActual\n */\n\nmodule.exports = function getActual(obj, args) {\n  return args.length > 4 ? args[4] : obj._obj;\n};\n","'use strict';\n\n/* !\n * Chai - getFuncName utility\n * Copyright(c) 2012-2016 Jake Luer <jake@alogicalparadox.com>\n * MIT Licensed\n */\n\n/**\n * ### .getFuncName(constructorFn)\n *\n * Returns the name of a function.\n * When a non-function instance is passed, returns `null`.\n * This also includes a polyfill function if `aFunc.name` is not defined.\n *\n * @name getFuncName\n * @param {Function} funct\n * @namespace Utils\n * @api public\n */\n\nvar toString = Function.prototype.toString;\nvar functionNameMatch = /\\s*function(?:\\s|\\s*\\/\\*[^(?:*\\/)]+\\*\\/\\s*)*([^\\s\\(\\/]+)/;\nfunction getFuncName(aFunc) {\n  if (typeof aFunc !== 'function') {\n    return null;\n  }\n\n  var name = '';\n  if (typeof Function.prototype.name === 'undefined' && typeof aFunc.name === 'undefined') {\n    // Here we run a polyfill if Function does not support the `name` property and if aFunc.name is not defined\n    var match = toString.call(aFunc).match(functionNameMatch);\n    if (match) {\n      name = match[1];\n    }\n  } else {\n    // If we've got a `name` property we just use it\n    name = aFunc.name;\n  }\n\n  return name;\n}\n\nmodule.exports = getFuncName;\n","/*!\n * Chai - getProperties utility\n * Copyright(c) 2012-2014 Jake Luer <jake@alogicalparadox.com>\n * MIT Licensed\n */\n\n/**\n * ### .getProperties(object)\n *\n * This allows the retrieval of property names of an object, enumerable or not,\n * inherited or not.\n *\n * @param {Object} object\n * @returns {Array}\n * @namespace Utils\n * @name getProperties\n * @api public\n */\n\nmodule.exports = function getProperties(object) {\n  var result = Object.getOwnPropertyNames(object);\n\n  function addProperty(property) {\n    if (result.indexOf(property) === -1) {\n      result.push(property);\n    }\n  }\n\n  var proto = Object.getPrototypeOf(object);\n  while (proto !== null) {\n    Object.getOwnPropertyNames(proto).forEach(addProperty);\n    proto = Object.getPrototypeOf(proto);\n  }\n\n  return result;\n};\n","/*!\n * Chai - flag utility\n * Copyright(c) 2012-2014 Jake Luer <jake@alogicalparadox.com>\n * MIT Licensed\n */\n\n/*!\n * Module dependancies\n */\n\nvar inspect = require('./inspect');\nvar config = require('../config');\n\n/**\n * ### .objDisplay(object)\n *\n * Determines if an object or an array matches\n * criteria to be inspected in-line for error\n * messages or should be truncated.\n *\n * @param {Mixed} javascript object to inspect\n * @name objDisplay\n * @namespace Utils\n * @api public\n */\n\nmodule.exports = function objDisplay(obj) {\n  var str = inspect(obj)\n    , type = Object.prototype.toString.call(obj);\n\n  if (config.truncateThreshold && str.length >= config.truncateThreshold) {\n    if (type === '[object Function]') {\n      return !obj.name || obj.name === ''\n        ? '[Function]'\n        : '[Function: ' + obj.name + ']';\n    } else if (type === '[object Array]') {\n      return '[ Array(' + obj.length + ') ]';\n    } else if (type === '[object Object]') {\n      var keys = Object.keys(obj)\n        , kstr = keys.length > 2\n          ? keys.splice(0, 2).join(', ') + ', ...'\n          : keys.join(', ');\n      return '{ Object (' + kstr + ') }';\n    } else {\n      return str;\n    }\n  } else {\n    return str;\n  }\n};\n","/*!\n * Chai - getOwnEnumerablePropertySymbols utility\n * Copyright(c) 2011-2016 Jake Luer <jake@alogicalparadox.com>\n * MIT Licensed\n */\n\n/**\n * ### .getOwnEnumerablePropertySymbols(object)\n *\n * This allows the retrieval of directly-owned enumerable property symbols of an\n * object. This function is necessary because Object.getOwnPropertySymbols\n * returns both enumerable and non-enumerable property symbols.\n *\n * @param {Object} object\n * @returns {Array}\n * @namespace Utils\n * @name getOwnEnumerablePropertySymbols\n * @api public\n */\n\nmodule.exports = function getOwnEnumerablePropertySymbols(obj) {\n  if (typeof Object.getOwnPropertySymbols !== 'function') return [];\n\n  return Object.getOwnPropertySymbols(obj).filter(function (sym) {\n    return Object.getOwnPropertyDescriptor(obj, sym).enumerable;\n  });\n};\n","module.exports = require('./lib/chai');\n","/*!\n * chai\n * Copyright(c) 2011 Jake Luer <jake@alogicalparadox.com>\n * MIT Licensed\n */\n\n/*!\n * Dependencies that are used for multiple exports are required here only once\n */\n\nvar pathval = require('pathval');\n\n/*!\n * test utility\n */\n\nexports.test = require('./test');\n\n/*!\n * type utility\n */\n\nexports.type = require('type-detect');\n\n/*!\n * expectTypes utility\n */\nexports.expectTypes = require('./expectTypes');\n\n/*!\n * message utility\n */\n\nexports.getMessage = require('./getMessage');\n\n/*!\n * actual utility\n */\n\nexports.getActual = require('./getActual');\n\n/*!\n * Inspect util\n */\n\nexports.inspect = require('./inspect');\n\n/*!\n * Object Display util\n */\n\nexports.objDisplay = require('./objDisplay');\n\n/*!\n * Flag utility\n */\n\nexports.flag = require('./flag');\n\n/*!\n * Flag transferring utility\n */\n\nexports.transferFlags = require('./transferFlags');\n\n/*!\n * Deep equal utility\n */\n\nexports.eql = require('deep-eql');\n\n/*!\n * Deep path info\n */\n\nexports.getPathInfo = pathval.getPathInfo;\n\n/*!\n * Check if a property exists\n */\n\nexports.hasProperty = pathval.hasProperty;\n\n/*!\n * Function name\n */\n\nexports.getName = require('get-func-name');\n\n/*!\n * add Property\n */\n\nexports.addProperty = require('./addProperty');\n\n/*!\n * add Method\n */\n\nexports.addMethod = require('./addMethod');\n\n/*!\n * overwrite Property\n */\n\nexports.overwriteProperty = require('./overwriteProperty');\n\n/*!\n * overwrite Method\n */\n\nexports.overwriteMethod = require('./overwriteMethod');\n\n/*!\n * Add a chainable method\n */\n\nexports.addChainableMethod = require('./addChainableMethod');\n\n/*!\n * Overwrite chainable method\n */\n\nexports.overwriteChainableMethod = require('./overwriteChainableMethod');\n\n/*!\n * Compare by inspect method\n */\n\nexports.compareByInspect = require('./compareByInspect');\n\n/*!\n * Get own enumerable property symbols method\n */\n\nexports.getOwnEnumerablePropertySymbols = require('./getOwnEnumerablePropertySymbols');\n\n/*!\n * Get own enumerable properties method\n */\n\nexports.getOwnEnumerableProperties = require('./getOwnEnumerableProperties');\n\n/*!\n * Checks error against a given set of criteria\n */\n\nexports.checkError = require('check-error');\n\n/*!\n * Proxify util\n */\n\nexports.proxify = require('./proxify');\n\n/*!\n * addLengthGuard util\n */\n\nexports.addLengthGuard = require('./addLengthGuard');\n\n/*!\n * isProxyEnabled helper\n */\n\nexports.isProxyEnabled = require('./isProxyEnabled');\n\n/*!\n * isNaN method\n */\n\nexports.isNaN = require('./isNaN');\n","'use strict';\n\n/* !\n * Chai - pathval utility\n * Copyright(c) 2012-2014 Jake Luer <jake@alogicalparadox.com>\n * @see https://github.com/logicalparadox/filtr\n * MIT Licensed\n */\n\n/**\n * ### .hasProperty(object, name)\n *\n * This allows checking whether an object has own\n * or inherited from prototype chain named property.\n *\n * Basically does the same thing as the `in`\n * operator but works properly with null/undefined values\n * and other primitives.\n *\n *     var obj = {\n *         arr: ['a', 'b', 'c']\n *       , str: 'Hello'\n *     }\n *\n * The following would be the results.\n *\n *     hasProperty(obj, 'str');  // true\n *     hasProperty(obj, 'constructor');  // true\n *     hasProperty(obj, 'bar');  // false\n *\n *     hasProperty(obj.str, 'length'); // true\n *     hasProperty(obj.str, 1);  // true\n *     hasProperty(obj.str, 5);  // false\n *\n *     hasProperty(obj.arr, 'length');  // true\n *     hasProperty(obj.arr, 2);  // true\n *     hasProperty(obj.arr, 3);  // false\n *\n * @param {Object} object\n * @param {String|Symbol} name\n * @returns {Boolean} whether it exists\n * @namespace Utils\n * @name hasProperty\n * @api public\n */\n\nfunction hasProperty(obj, name) {\n  if (typeof obj === 'undefined' || obj === null) {\n    return false;\n  }\n\n  // The `in` operator does not work with primitives.\n  return name in Object(obj);\n}\n\n/* !\n * ## parsePath(path)\n *\n * Helper function used to parse string object\n * paths. Use in conjunction with `internalGetPathValue`.\n *\n *      var parsed = parsePath('myobject.property.subprop');\n *\n * ### Paths:\n *\n * * Can be infinitely deep and nested.\n * * Arrays are also valid using the formal `myobject.document[3].property`.\n * * Literal dots and brackets (not delimiter) must be backslash-escaped.\n *\n * @param {String} path\n * @returns {Object} parsed\n * @api private\n */\n\nfunction parsePath(path) {\n  var str = path.replace(/([^\\\\])\\[/g, '$1.[');\n  var parts = str.match(/(\\\\\\.|[^.]+?)+/g);\n  return parts.map(function mapMatches(value) {\n    var regexp = /^\\[(\\d+)\\]$/;\n    var mArr = regexp.exec(value);\n    var parsed = null;\n    if (mArr) {\n      parsed = { i: parseFloat(mArr[1]) };\n    } else {\n      parsed = { p: value.replace(/\\\\([.\\[\\]])/g, '$1') };\n    }\n\n    return parsed;\n  });\n}\n\n/* !\n * ## internalGetPathValue(obj, parsed[, pathDepth])\n *\n * Helper companion function for `.parsePath` that returns\n * the value located at the parsed address.\n *\n *      var value = getPathValue(obj, parsed);\n *\n * @param {Object} object to search against\n * @param {Object} parsed definition from `parsePath`.\n * @param {Number} depth (nesting level) of the property we want to retrieve\n * @returns {Object|Undefined} value\n * @api private\n */\n\nfunction internalGetPathValue(obj, parsed, pathDepth) {\n  var temporaryValue = obj;\n  var res = null;\n  pathDepth = (typeof pathDepth === 'undefined' ? parsed.length : pathDepth);\n\n  for (var i = 0; i < pathDepth; i++) {\n    var part = parsed[i];\n    if (temporaryValue) {\n      if (typeof part.p === 'undefined') {\n        temporaryValue = temporaryValue[part.i];\n      } else {\n        temporaryValue = temporaryValue[part.p];\n      }\n\n      if (i === (pathDepth - 1)) {\n        res = temporaryValue;\n      }\n    }\n  }\n\n  return res;\n}\n\n/* !\n * ## internalSetPathValue(obj, value, parsed)\n *\n * Companion function for `parsePath` that sets\n * the value located at a parsed address.\n *\n *  internalSetPathValue(obj, 'value', parsed);\n *\n * @param {Object} object to search and define on\n * @param {*} value to use upon set\n * @param {Object} parsed definition from `parsePath`\n * @api private\n */\n\nfunction internalSetPathValue(obj, val, parsed) {\n  var tempObj = obj;\n  var pathDepth = parsed.length;\n  var part = null;\n  // Here we iterate through every part of the path\n  for (var i = 0; i < pathDepth; i++) {\n    var propName = null;\n    var propVal = null;\n    part = parsed[i];\n\n    // If it's the last part of the path, we set the 'propName' value with the property name\n    if (i === (pathDepth - 1)) {\n      propName = typeof part.p === 'undefined' ? part.i : part.p;\n      // Now we set the property with the name held by 'propName' on object with the desired val\n      tempObj[propName] = val;\n    } else if (typeof part.p !== 'undefined' && tempObj[part.p]) {\n      tempObj = tempObj[part.p];\n    } else if (typeof part.i !== 'undefined' && tempObj[part.i]) {\n      tempObj = tempObj[part.i];\n    } else {\n      // If the obj doesn't have the property we create one with that name to define it\n      var next = parsed[i + 1];\n      // Here we set the name of the property which will be defined\n      propName = typeof part.p === 'undefined' ? part.i : part.p;\n      // Here we decide if this property will be an array or a new object\n      propVal = typeof next.p === 'undefined' ? [] : {};\n      tempObj[propName] = propVal;\n      tempObj = tempObj[propName];\n    }\n  }\n}\n\n/**\n * ### .getPathInfo(object, path)\n *\n * This allows the retrieval of property info in an\n * object given a string path.\n *\n * The path info consists of an object with the\n * following properties:\n *\n * * parent - The parent object of the property referenced by `path`\n * * name - The name of the final property, a number if it was an array indexer\n * * value - The value of the property, if it exists, otherwise `undefined`\n * * exists - Whether the property exists or not\n *\n * @param {Object} object\n * @param {String} path\n * @returns {Object} info\n * @namespace Utils\n * @name getPathInfo\n * @api public\n */\n\nfunction getPathInfo(obj, path) {\n  var parsed = parsePath(path);\n  var last = parsed[parsed.length - 1];\n  var info = {\n    parent: parsed.length > 1 ? internalGetPathValue(obj, parsed, parsed.length - 1) : obj,\n    name: last.p || last.i,\n    value: internalGetPathValue(obj, parsed),\n  };\n  info.exists = hasProperty(info.parent, info.name);\n\n  return info;\n}\n\n/**\n * ### .getPathValue(object, path)\n *\n * This allows the retrieval of values in an\n * object given a string path.\n *\n *     var obj = {\n *         prop1: {\n *             arr: ['a', 'b', 'c']\n *           , str: 'Hello'\n *         }\n *       , prop2: {\n *             arr: [ { nested: 'Universe' } ]\n *           , str: 'Hello again!'\n *         }\n *     }\n *\n * The following would be the results.\n *\n *     getPathValue(obj, 'prop1.str'); // Hello\n *     getPathValue(obj, 'prop1.att[2]'); // b\n *     getPathValue(obj, 'prop2.arr[0].nested'); // Universe\n *\n * @param {Object} object\n * @param {String} path\n * @returns {Object} value or `undefined`\n * @namespace Utils\n * @name getPathValue\n * @api public\n */\n\nfunction getPathValue(obj, path) {\n  var info = getPathInfo(obj, path);\n  return info.value;\n}\n\n/**\n * ### .setPathValue(object, path, value)\n *\n * Define the value in an object at a given string path.\n *\n * ```js\n * var obj = {\n *     prop1: {\n *         arr: ['a', 'b', 'c']\n *       , str: 'Hello'\n *     }\n *   , prop2: {\n *         arr: [ { nested: 'Universe' } ]\n *       , str: 'Hello again!'\n *     }\n * };\n * ```\n *\n * The following would be acceptable.\n *\n * ```js\n * var properties = require('tea-properties');\n * properties.set(obj, 'prop1.str', 'Hello Universe!');\n * properties.set(obj, 'prop1.arr[2]', 'B');\n * properties.set(obj, 'prop2.arr[0].nested.value', { hello: 'universe' });\n * ```\n *\n * @param {Object} object\n * @param {String} path\n * @param {Mixed} value\n * @api private\n */\n\nfunction setPathValue(obj, path, val) {\n  var parsed = parsePath(path);\n  internalSetPathValue(obj, val, parsed);\n  return obj;\n}\n\nmodule.exports = {\n  hasProperty: hasProperty,\n  getPathInfo: getPathInfo,\n  getPathValue: getPathValue,\n  setPathValue: setPathValue,\n};\n","/*!\n * Chai - test utility\n * Copyright(c) 2012-2014 Jake Luer <jake@alogicalparadox.com>\n * MIT Licensed\n */\n\n/*!\n * Module dependancies\n */\n\nvar flag = require('./flag');\n\n/**\n * ### .test(object, expression)\n *\n * Test and object for expression.\n *\n * @param {Object} object (constructed Assertion)\n * @param {Arguments} chai.Assertion.prototype.assert arguments\n * @namespace Utils\n * @name test\n */\n\nmodule.exports = function test(obj, args) {\n  var negate = flag(obj, 'negate')\n    , expr = args[0];\n  return negate ? !expr : expr;\n};\n","var g;\n\n// This works in non-strict mode\ng = (function() {\n\treturn this;\n})();\n\ntry {\n\t// This works if eval is allowed (see CSP)\n\tg = g || Function(\"return this\")() || (1, eval)(\"this\");\n} catch (e) {\n\t// This works if the window reference is available\n\tif (typeof window === \"object\") g = window;\n}\n\n// g can still be undefined, but nothing to do about it...\n// We return undefined, instead of nothing here, so it's\n// easier to handle this case. if(!global) { ...}\n\nmodule.exports = g;\n","/*!\n * Chai - expectTypes utility\n * Copyright(c) 2012-2014 Jake Luer <jake@alogicalparadox.com>\n * MIT Licensed\n */\n\n/**\n * ### .expectTypes(obj, types)\n *\n * Ensures that the object being tested against is of a valid type.\n *\n *     utils.expectTypes(this, ['array', 'object', 'string']);\n *\n * @param {Mixed} obj constructed Assertion\n * @param {Array} type A list of allowed types for this assertion\n * @namespace Utils\n * @name expectTypes\n * @api public\n */\n\nvar AssertionError = require('assertion-error');\nvar flag = require('./flag');\nvar type = require('type-detect');\n\nmodule.exports = function expectTypes(obj, types) {\n  var flagMsg = flag(obj, 'message');\n  var ssfi = flag(obj, 'ssfi');\n\n  flagMsg = flagMsg ? flagMsg + ': ' : '';\n\n  obj = flag(obj, 'object');\n  types = types.map(function (t) { return t.toLowerCase(); });\n  types.sort();\n\n  // Transforms ['lorem', 'ipsum'] into 'a lorem, or an ipsum'\n  var str = types.map(function (t, index) {\n    var art = ~[ 'a', 'e', 'i', 'o', 'u' ].indexOf(t.charAt(0)) ? 'an' : 'a';\n    var or = types.length > 1 && index === types.length - 1 ? 'or ' : '';\n    return or + art + ' ' + t;\n  }).join(', ');\n\n  var objType = type(obj).toLowerCase();\n\n  if (!types.some(function (expected) { return objType === expected; })) {\n    throw new AssertionError(\n      flagMsg + 'object tested must be ' + str + ', but ' + objType + ' given',\n      undefined,\n      ssfi\n    );\n  }\n};\n","/*!\n * Chai - message composition utility\n * Copyright(c) 2012-2014 Jake Luer <jake@alogicalparadox.com>\n * MIT Licensed\n */\n\n/*!\n * Module dependancies\n */\n\nvar flag = require('./flag')\n  , getActual = require('./getActual')\n  , inspect = require('./inspect')\n  , objDisplay = require('./objDisplay');\n\n/**\n * ### .getMessage(object, message, negateMessage)\n *\n * Construct the error message based on flags\n * and template tags. Template tags will return\n * a stringified inspection of the object referenced.\n *\n * Message template tags:\n * - `#{this}` current asserted object\n * - `#{act}` actual value\n * - `#{exp}` expected value\n *\n * @param {Object} object (constructed Assertion)\n * @param {Arguments} chai.Assertion.prototype.assert arguments\n * @namespace Utils\n * @name getMessage\n * @api public\n */\n\nmodule.exports = function getMessage(obj, args) {\n  var negate = flag(obj, 'negate')\n    , val = flag(obj, 'object')\n    , expected = args[3]\n    , actual = getActual(obj, args)\n    , msg = negate ? args[2] : args[1]\n    , flagMsg = flag(obj, 'message');\n\n  if(typeof msg === \"function\") msg = msg();\n  msg = msg || '';\n  msg = msg\n    .replace(/#\\{this\\}/g, function () { return objDisplay(val); })\n    .replace(/#\\{act\\}/g, function () { return objDisplay(actual); })\n    .replace(/#\\{exp\\}/g, function () { return objDisplay(expected); });\n\n  return flagMsg ? flagMsg + ': ' + msg : msg;\n};\n","/*!\n * Chai - getEnumerableProperties utility\n * Copyright(c) 2012-2014 Jake Luer <jake@alogicalparadox.com>\n * MIT Licensed\n */\n\n/**\n * ### .getEnumerableProperties(object)\n *\n * This allows the retrieval of enumerable property names of an object,\n * inherited or not.\n *\n * @param {Object} object\n * @returns {Array}\n * @namespace Utils\n * @name getEnumerableProperties\n * @api public\n */\n\nmodule.exports = function getEnumerableProperties(object) {\n  var result = [];\n  for (var name in object) {\n    result.push(name);\n  }\n  return result;\n};\n","'use strict';\n/* globals Symbol: false, Uint8Array: false, WeakMap: false */\n/*!\n * deep-eql\n * Copyright(c) 2013 Jake Luer <jake@alogicalparadox.com>\n * MIT Licensed\n */\n\nvar type = require('type-detect');\nfunction FakeMap() {\n  this._key = 'chai/deep-eql__' + Math.random() + Date.now();\n}\n\nFakeMap.prototype = {\n  get: function getMap(key) {\n    return key[this._key];\n  },\n  set: function setMap(key, value) {\n    if (Object.isExtensible(key)) {\n      Object.defineProperty(key, this._key, {\n        value: value,\n        configurable: true,\n      });\n    }\n  },\n};\n\nvar MemoizeMap = typeof WeakMap === 'function' ? WeakMap : FakeMap;\n/*!\n * Check to see if the MemoizeMap has recorded a result of the two operands\n *\n * @param {Mixed} leftHandOperand\n * @param {Mixed} rightHandOperand\n * @param {MemoizeMap} memoizeMap\n * @returns {Boolean|null} result\n*/\nfunction memoizeCompare(leftHandOperand, rightHandOperand, memoizeMap) {\n  // Technically, WeakMap keys can *only* be objects, not primitives.\n  if (!memoizeMap || isPrimitive(leftHandOperand) || isPrimitive(rightHandOperand)) {\n    return null;\n  }\n  var leftHandMap = memoizeMap.get(leftHandOperand);\n  if (leftHandMap) {\n    var result = leftHandMap.get(rightHandOperand);\n    if (typeof result === 'boolean') {\n      return result;\n    }\n  }\n  return null;\n}\n\n/*!\n * Set the result of the equality into the MemoizeMap\n *\n * @param {Mixed} leftHandOperand\n * @param {Mixed} rightHandOperand\n * @param {MemoizeMap} memoizeMap\n * @param {Boolean} result\n*/\nfunction memoizeSet(leftHandOperand, rightHandOperand, memoizeMap, result) {\n  // Technically, WeakMap keys can *only* be objects, not primitives.\n  if (!memoizeMap || isPrimitive(leftHandOperand) || isPrimitive(rightHandOperand)) {\n    return;\n  }\n  var leftHandMap = memoizeMap.get(leftHandOperand);\n  if (leftHandMap) {\n    leftHandMap.set(rightHandOperand, result);\n  } else {\n    leftHandMap = new MemoizeMap();\n    leftHandMap.set(rightHandOperand, result);\n    memoizeMap.set(leftHandOperand, leftHandMap);\n  }\n}\n\n/*!\n * Primary Export\n */\n\nmodule.exports = deepEqual;\nmodule.exports.MemoizeMap = MemoizeMap;\n\n/**\n * Assert deeply nested sameValue equality between two objects of any type.\n *\n * @param {Mixed} leftHandOperand\n * @param {Mixed} rightHandOperand\n * @param {Object} [options] (optional) Additional options\n * @param {Array} [options.comparator] (optional) Override default algorithm, determining custom equality.\n * @param {Array} [options.memoize] (optional) Provide a custom memoization object which will cache the results of\n    complex objects for a speed boost. By passing `false` you can disable memoization, but this will cause circular\n    references to blow the stack.\n * @return {Boolean} equal match\n */\nfunction deepEqual(leftHandOperand, rightHandOperand, options) {\n  // If we have a comparator, we can't assume anything; so bail to its check first.\n  if (options && options.comparator) {\n    return extensiveDeepEqual(leftHandOperand, rightHandOperand, options);\n  }\n\n  var simpleResult = simpleEqual(leftHandOperand, rightHandOperand);\n  if (simpleResult !== null) {\n    return simpleResult;\n  }\n\n  // Deeper comparisons are pushed through to a larger function\n  return extensiveDeepEqual(leftHandOperand, rightHandOperand, options);\n}\n\n/**\n * Many comparisons can be canceled out early via simple equality or primitive checks.\n * @param {Mixed} leftHandOperand\n * @param {Mixed} rightHandOperand\n * @return {Boolean|null} equal match\n */\nfunction simpleEqual(leftHandOperand, rightHandOperand) {\n  // Equal references (except for Numbers) can be returned early\n  if (leftHandOperand === rightHandOperand) {\n    // Handle +-0 cases\n    return leftHandOperand !== 0 || 1 / leftHandOperand === 1 / rightHandOperand;\n  }\n\n  // handle NaN cases\n  if (\n    leftHandOperand !== leftHandOperand && // eslint-disable-line no-self-compare\n    rightHandOperand !== rightHandOperand // eslint-disable-line no-self-compare\n  ) {\n    return true;\n  }\n\n  // Anything that is not an 'object', i.e. symbols, functions, booleans, numbers,\n  // strings, and undefined, can be compared by reference.\n  if (isPrimitive(leftHandOperand) || isPrimitive(rightHandOperand)) {\n    // Easy out b/c it would have passed the first equality check\n    return false;\n  }\n  return null;\n}\n\n/*!\n * The main logic of the `deepEqual` function.\n *\n * @param {Mixed} leftHandOperand\n * @param {Mixed} rightHandOperand\n * @param {Object} [options] (optional) Additional options\n * @param {Array} [options.comparator] (optional) Override default algorithm, determining custom equality.\n * @param {Array} [options.memoize] (optional) Provide a custom memoization object which will cache the results of\n    complex objects for a speed boost. By passing `false` you can disable memoization, but this will cause circular\n    references to blow the stack.\n * @return {Boolean} equal match\n*/\nfunction extensiveDeepEqual(leftHandOperand, rightHandOperand, options) {\n  options = options || {};\n  options.memoize = options.memoize === false ? false : options.memoize || new MemoizeMap();\n  var comparator = options && options.comparator;\n\n  // Check if a memoized result exists.\n  var memoizeResultLeft = memoizeCompare(leftHandOperand, rightHandOperand, options.memoize);\n  if (memoizeResultLeft !== null) {\n    return memoizeResultLeft;\n  }\n  var memoizeResultRight = memoizeCompare(rightHandOperand, leftHandOperand, options.memoize);\n  if (memoizeResultRight !== null) {\n    return memoizeResultRight;\n  }\n\n  // If a comparator is present, use it.\n  if (comparator) {\n    var comparatorResult = comparator(leftHandOperand, rightHandOperand);\n    // Comparators may return null, in which case we want to go back to default behavior.\n    if (comparatorResult === false || comparatorResult === true) {\n      memoizeSet(leftHandOperand, rightHandOperand, options.memoize, comparatorResult);\n      return comparatorResult;\n    }\n    // To allow comparators to override *any* behavior, we ran them first. Since it didn't decide\n    // what to do, we need to make sure to return the basic tests first before we move on.\n    var simpleResult = simpleEqual(leftHandOperand, rightHandOperand);\n    if (simpleResult !== null) {\n      // Don't memoize this, it takes longer to set/retrieve than to just compare.\n      return simpleResult;\n    }\n  }\n\n  var leftHandType = type(leftHandOperand);\n  if (leftHandType !== type(rightHandOperand)) {\n    memoizeSet(leftHandOperand, rightHandOperand, options.memoize, false);\n    return false;\n  }\n\n  // Temporarily set the operands in the memoize object to prevent blowing the stack\n  memoizeSet(leftHandOperand, rightHandOperand, options.memoize, true);\n\n  var result = extensiveDeepEqualByType(leftHandOperand, rightHandOperand, leftHandType, options);\n  memoizeSet(leftHandOperand, rightHandOperand, options.memoize, result);\n  return result;\n}\n\nfunction extensiveDeepEqualByType(leftHandOperand, rightHandOperand, leftHandType, options) {\n  switch (leftHandType) {\n    case 'String':\n    case 'Number':\n    case 'Boolean':\n    case 'Date':\n      // If these types are their instance types (e.g. `new Number`) then re-deepEqual against their values\n      return deepEqual(leftHandOperand.valueOf(), rightHandOperand.valueOf());\n    case 'Promise':\n    case 'Symbol':\n    case 'function':\n    case 'WeakMap':\n    case 'WeakSet':\n    case 'Error':\n      return leftHandOperand === rightHandOperand;\n    case 'Arguments':\n    case 'Int8Array':\n    case 'Uint8Array':\n    case 'Uint8ClampedArray':\n    case 'Int16Array':\n    case 'Uint16Array':\n    case 'Int32Array':\n    case 'Uint32Array':\n    case 'Float32Array':\n    case 'Float64Array':\n    case 'Array':\n      return iterableEqual(leftHandOperand, rightHandOperand, options);\n    case 'RegExp':\n      return regexpEqual(leftHandOperand, rightHandOperand);\n    case 'Generator':\n      return generatorEqual(leftHandOperand, rightHandOperand, options);\n    case 'DataView':\n      return iterableEqual(new Uint8Array(leftHandOperand.buffer), new Uint8Array(rightHandOperand.buffer), options);\n    case 'ArrayBuffer':\n      return iterableEqual(new Uint8Array(leftHandOperand), new Uint8Array(rightHandOperand), options);\n    case 'Set':\n      return entriesEqual(leftHandOperand, rightHandOperand, options);\n    case 'Map':\n      return entriesEqual(leftHandOperand, rightHandOperand, options);\n    default:\n      return objectEqual(leftHandOperand, rightHandOperand, options);\n  }\n}\n\n/*!\n * Compare two Regular Expressions for equality.\n *\n * @param {RegExp} leftHandOperand\n * @param {RegExp} rightHandOperand\n * @return {Boolean} result\n */\n\nfunction regexpEqual(leftHandOperand, rightHandOperand) {\n  return leftHandOperand.toString() === rightHandOperand.toString();\n}\n\n/*!\n * Compare two Sets/Maps for equality. Faster than other equality functions.\n *\n * @param {Set} leftHandOperand\n * @param {Set} rightHandOperand\n * @param {Object} [options] (Optional)\n * @return {Boolean} result\n */\n\nfunction entriesEqual(leftHandOperand, rightHandOperand, options) {\n  // IE11 doesn't support Set#entries or Set#@@iterator, so we need manually populate using Set#forEach\n  if (leftHandOperand.size !== rightHandOperand.size) {\n    return false;\n  }\n  if (leftHandOperand.size === 0) {\n    return true;\n  }\n  var leftHandItems = [];\n  var rightHandItems = [];\n  leftHandOperand.forEach(function gatherEntries(key, value) {\n    leftHandItems.push([ key, value ]);\n  });\n  rightHandOperand.forEach(function gatherEntries(key, value) {\n    rightHandItems.push([ key, value ]);\n  });\n  return iterableEqual(leftHandItems.sort(), rightHandItems.sort(), options);\n}\n\n/*!\n * Simple equality for flat iterable objects such as Arrays, TypedArrays or Node.js buffers.\n *\n * @param {Iterable} leftHandOperand\n * @param {Iterable} rightHandOperand\n * @param {Object} [options] (Optional)\n * @return {Boolean} result\n */\n\nfunction iterableEqual(leftHandOperand, rightHandOperand, options) {\n  var length = leftHandOperand.length;\n  if (length !== rightHandOperand.length) {\n    return false;\n  }\n  if (length === 0) {\n    return true;\n  }\n  var index = -1;\n  while (++index < length) {\n    if (deepEqual(leftHandOperand[index], rightHandOperand[index], options) === false) {\n      return false;\n    }\n  }\n  return true;\n}\n\n/*!\n * Simple equality for generator objects such as those returned by generator functions.\n *\n * @param {Iterable} leftHandOperand\n * @param {Iterable} rightHandOperand\n * @param {Object} [options] (Optional)\n * @return {Boolean} result\n */\n\nfunction generatorEqual(leftHandOperand, rightHandOperand, options) {\n  return iterableEqual(getGeneratorEntries(leftHandOperand), getGeneratorEntries(rightHandOperand), options);\n}\n\n/*!\n * Determine if the given object has an @@iterator function.\n *\n * @param {Object} target\n * @return {Boolean} `true` if the object has an @@iterator function.\n */\nfunction hasIteratorFunction(target) {\n  return typeof Symbol !== 'undefined' &&\n    typeof target === 'object' &&\n    typeof Symbol.iterator !== 'undefined' &&\n    typeof target[Symbol.iterator] === 'function';\n}\n\n/*!\n * Gets all iterator entries from the given Object. If the Object has no @@iterator function, returns an empty array.\n * This will consume the iterator - which could have side effects depending on the @@iterator implementation.\n *\n * @param {Object} target\n * @returns {Array} an array of entries from the @@iterator function\n */\nfunction getIteratorEntries(target) {\n  if (hasIteratorFunction(target)) {\n    try {\n      return getGeneratorEntries(target[Symbol.iterator]());\n    } catch (iteratorError) {\n      return [];\n    }\n  }\n  return [];\n}\n\n/*!\n * Gets all entries from a Generator. This will consume the generator - which could have side effects.\n *\n * @param {Generator} target\n * @returns {Array} an array of entries from the Generator.\n */\nfunction getGeneratorEntries(generator) {\n  var generatorResult = generator.next();\n  var accumulator = [ generatorResult.value ];\n  while (generatorResult.done === false) {\n    generatorResult = generator.next();\n    accumulator.push(generatorResult.value);\n  }\n  return accumulator;\n}\n\n/*!\n * Gets all own and inherited enumerable keys from a target.\n *\n * @param {Object} target\n * @returns {Array} an array of own and inherited enumerable keys from the target.\n */\nfunction getEnumerableKeys(target) {\n  var keys = [];\n  for (var key in target) {\n    keys.push(key);\n  }\n  return keys;\n}\n\n/*!\n * Determines if two objects have matching values, given a set of keys. Defers to deepEqual for the equality check of\n * each key. If any value of the given key is not equal, the function will return false (early).\n *\n * @param {Mixed} leftHandOperand\n * @param {Mixed} rightHandOperand\n * @param {Array} keys An array of keys to compare the values of leftHandOperand and rightHandOperand against\n * @param {Object} [options] (Optional)\n * @return {Boolean} result\n */\nfunction keysEqual(leftHandOperand, rightHandOperand, keys, options) {\n  var length = keys.length;\n  if (length === 0) {\n    return true;\n  }\n  for (var i = 0; i < length; i += 1) {\n    if (deepEqual(leftHandOperand[keys[i]], rightHandOperand[keys[i]], options) === false) {\n      return false;\n    }\n  }\n  return true;\n}\n\n/*!\n * Recursively check the equality of two Objects. Once basic sameness has been established it will defer to `deepEqual`\n * for each enumerable key in the object.\n *\n * @param {Mixed} leftHandOperand\n * @param {Mixed} rightHandOperand\n * @param {Object} [options] (Optional)\n * @return {Boolean} result\n */\n\nfunction objectEqual(leftHandOperand, rightHandOperand, options) {\n  var leftHandKeys = getEnumerableKeys(leftHandOperand);\n  var rightHandKeys = getEnumerableKeys(rightHandOperand);\n  if (leftHandKeys.length && leftHandKeys.length === rightHandKeys.length) {\n    leftHandKeys.sort();\n    rightHandKeys.sort();\n    if (iterableEqual(leftHandKeys, rightHandKeys) === false) {\n      return false;\n    }\n    return keysEqual(leftHandOperand, rightHandOperand, leftHandKeys, options);\n  }\n\n  var leftHandEntries = getIteratorEntries(leftHandOperand);\n  var rightHandEntries = getIteratorEntries(rightHandOperand);\n  if (leftHandEntries.length && leftHandEntries.length === rightHandEntries.length) {\n    leftHandEntries.sort();\n    rightHandEntries.sort();\n    return iterableEqual(leftHandEntries, rightHandEntries, options);\n  }\n\n  if (leftHandKeys.length === 0 &&\n      leftHandEntries.length === 0 &&\n      rightHandKeys.length === 0 &&\n      rightHandEntries.length === 0) {\n    return true;\n  }\n\n  return false;\n}\n\n/*!\n * Returns true if the argument is a primitive.\n *\n * This intentionally returns true for all objects that can be compared by reference,\n * including functions and symbols.\n *\n * @param {Mixed} value\n * @return {Boolean} result\n */\nfunction isPrimitive(value) {\n  return value === null || typeof value !== 'object';\n}\n","/*!\n * Chai - addProperty utility\n * Copyright(c) 2012-2014 Jake Luer <jake@alogicalparadox.com>\n * MIT Licensed\n */\n\nvar chai = require('../../chai');\nvar flag = require('./flag');\nvar isProxyEnabled = require('./isProxyEnabled');\nvar transferFlags = require('./transferFlags');\n\n/**\n * ### .addProperty(ctx, name, getter)\n *\n * Adds a property to the prototype of an object.\n *\n *     utils.addProperty(chai.Assertion.prototype, 'foo', function () {\n *       var obj = utils.flag(this, 'object');\n *       new chai.Assertion(obj).to.be.instanceof(Foo);\n *     });\n *\n * Can also be accessed directly from `chai.Assertion`.\n *\n *     chai.Assertion.addProperty('foo', fn);\n *\n * Then can be used as any other assertion.\n *\n *     expect(myFoo).to.be.foo;\n *\n * @param {Object} ctx object to which the property is added\n * @param {String} name of property to add\n * @param {Function} getter function to be used for name\n * @namespace Utils\n * @name addProperty\n * @api public\n */\n\nmodule.exports = function addProperty(ctx, name, getter) {\n  getter = getter === undefined ? function () {} : getter;\n\n  Object.defineProperty(ctx, name,\n    { get: function propertyGetter() {\n        // Setting the `ssfi` flag to `propertyGetter` causes this function to\n        // be the starting point for removing implementation frames from the\n        // stack trace of a failed assertion.\n        //\n        // However, we only want to use this function as the starting point if\n        // the `lockSsfi` flag isn't set and proxy protection is disabled.\n        //\n        // If the `lockSsfi` flag is set, then either this assertion has been\n        // overwritten by another assertion, or this assertion is being invoked\n        // from inside of another assertion. In the first case, the `ssfi` flag\n        // has already been set by the overwriting assertion. In the second\n        // case, the `ssfi` flag has already been set by the outer assertion.\n        //\n        // If proxy protection is enabled, then the `ssfi` flag has already been\n        // set by the proxy getter.\n        if (!isProxyEnabled() && !flag(this, 'lockSsfi')) {\n          flag(this, 'ssfi', propertyGetter);\n        }\n\n        var result = getter.call(this);\n        if (result !== undefined)\n          return result;\n\n        var newAssertion = new chai.Assertion();\n        transferFlags(this, newAssertion);\n        return newAssertion;\n      }\n    , configurable: true\n  });\n};\n","/*!\n * Chai - addMethod utility\n * Copyright(c) 2012-2014 Jake Luer <jake@alogicalparadox.com>\n * MIT Licensed\n */\n\nvar addLengthGuard = require('./addLengthGuard');\nvar chai = require('../../chai');\nvar flag = require('./flag');\nvar proxify = require('./proxify');\nvar transferFlags = require('./transferFlags');\n\n/**\n * ### .addMethod(ctx, name, method)\n *\n * Adds a method to the prototype of an object.\n *\n *     utils.addMethod(chai.Assertion.prototype, 'foo', function (str) {\n *       var obj = utils.flag(this, 'object');\n *       new chai.Assertion(obj).to.be.equal(str);\n *     });\n *\n * Can also be accessed directly from `chai.Assertion`.\n *\n *     chai.Assertion.addMethod('foo', fn);\n *\n * Then can be used as any other assertion.\n *\n *     expect(fooStr).to.be.foo('bar');\n *\n * @param {Object} ctx object to which the method is added\n * @param {String} name of method to add\n * @param {Function} method function to be used for name\n * @namespace Utils\n * @name addMethod\n * @api public\n */\n\nmodule.exports = function addMethod(ctx, name, method) {\n  var methodWrapper = function () {\n    // Setting the `ssfi` flag to `methodWrapper` causes this function to be the\n    // starting point for removing implementation frames from the stack trace of\n    // a failed assertion.\n    //\n    // However, we only want to use this function as the starting point if the\n    // `lockSsfi` flag isn't set.\n    //\n    // If the `lockSsfi` flag is set, then either this assertion has been\n    // overwritten by another assertion, or this assertion is being invoked from\n    // inside of another assertion. In the first case, the `ssfi` flag has\n    // already been set by the overwriting assertion. In the second case, the\n    // `ssfi` flag has already been set by the outer assertion.\n    if (!flag(this, 'lockSsfi')) {\n      flag(this, 'ssfi', methodWrapper);\n    }\n\n    var result = method.apply(this, arguments);\n    if (result !== undefined)\n      return result;\n\n    var newAssertion = new chai.Assertion();\n    transferFlags(this, newAssertion);\n    return newAssertion;\n  };\n\n  addLengthGuard(methodWrapper, name, false);\n  ctx[name] = proxify(methodWrapper, name);\n};\n","/*!\n * Chai - overwriteProperty utility\n * Copyright(c) 2012-2014 Jake Luer <jake@alogicalparadox.com>\n * MIT Licensed\n */\n\nvar chai = require('../../chai');\nvar flag = require('./flag');\nvar isProxyEnabled = require('./isProxyEnabled');\nvar transferFlags = require('./transferFlags');\n\n/**\n * ### .overwriteProperty(ctx, name, fn)\n *\n * Overwites an already existing property getter and provides\n * access to previous value. Must return function to use as getter.\n *\n *     utils.overwriteProperty(chai.Assertion.prototype, 'ok', function (_super) {\n *       return function () {\n *         var obj = utils.flag(this, 'object');\n *         if (obj instanceof Foo) {\n *           new chai.Assertion(obj.name).to.equal('bar');\n *         } else {\n *           _super.call(this);\n *         }\n *       }\n *     });\n *\n *\n * Can also be accessed directly from `chai.Assertion`.\n *\n *     chai.Assertion.overwriteProperty('foo', fn);\n *\n * Then can be used as any other assertion.\n *\n *     expect(myFoo).to.be.ok;\n *\n * @param {Object} ctx object whose property is to be overwritten\n * @param {String} name of property to overwrite\n * @param {Function} getter function that returns a getter function to be used for name\n * @namespace Utils\n * @name overwriteProperty\n * @api public\n */\n\nmodule.exports = function overwriteProperty(ctx, name, getter) {\n  var _get = Object.getOwnPropertyDescriptor(ctx, name)\n    , _super = function () {};\n\n  if (_get && 'function' === typeof _get.get)\n    _super = _get.get\n\n  Object.defineProperty(ctx, name,\n    { get: function overwritingPropertyGetter() {\n        // Setting the `ssfi` flag to `overwritingPropertyGetter` causes this\n        // function to be the starting point for removing implementation frames\n        // from the stack trace of a failed assertion.\n        //\n        // However, we only want to use this function as the starting point if\n        // the `lockSsfi` flag isn't set and proxy protection is disabled.\n        //\n        // If the `lockSsfi` flag is set, then either this assertion has been\n        // overwritten by another assertion, or this assertion is being invoked\n        // from inside of another assertion. In the first case, the `ssfi` flag\n        // has already been set by the overwriting assertion. In the second\n        // case, the `ssfi` flag has already been set by the outer assertion.\n        //\n        // If proxy protection is enabled, then the `ssfi` flag has already been\n        // set by the proxy getter.\n        if (!isProxyEnabled() && !flag(this, 'lockSsfi')) {\n          flag(this, 'ssfi', overwritingPropertyGetter);\n        }\n\n        // Setting the `lockSsfi` flag to `true` prevents the overwritten\n        // assertion from changing the `ssfi` flag. By this point, the `ssfi`\n        // flag is already set to the correct starting point for this assertion.\n        var origLockSsfi = flag(this, 'lockSsfi');\n        flag(this, 'lockSsfi', true);\n        var result = getter(_super).call(this);\n        flag(this, 'lockSsfi', origLockSsfi);\n\n        if (result !== undefined) {\n          return result;\n        }\n\n        var newAssertion = new chai.Assertion();\n        transferFlags(this, newAssertion);\n        return newAssertion;\n      }\n    , configurable: true\n  });\n};\n","/*!\n * Chai - overwriteMethod utility\n * Copyright(c) 2012-2014 Jake Luer <jake@alogicalparadox.com>\n * MIT Licensed\n */\n\nvar addLengthGuard = require('./addLengthGuard');\nvar chai = require('../../chai');\nvar flag = require('./flag');\nvar proxify = require('./proxify');\nvar transferFlags = require('./transferFlags');\n\n/**\n * ### .overwriteMethod(ctx, name, fn)\n *\n * Overwites an already existing method and provides\n * access to previous function. Must return function\n * to be used for name.\n *\n *     utils.overwriteMethod(chai.Assertion.prototype, 'equal', function (_super) {\n *       return function (str) {\n *         var obj = utils.flag(this, 'object');\n *         if (obj instanceof Foo) {\n *           new chai.Assertion(obj.value).to.equal(str);\n *         } else {\n *           _super.apply(this, arguments);\n *         }\n *       }\n *     });\n *\n * Can also be accessed directly from `chai.Assertion`.\n *\n *     chai.Assertion.overwriteMethod('foo', fn);\n *\n * Then can be used as any other assertion.\n *\n *     expect(myFoo).to.equal('bar');\n *\n * @param {Object} ctx object whose method is to be overwritten\n * @param {String} name of method to overwrite\n * @param {Function} method function that returns a function to be used for name\n * @namespace Utils\n * @name overwriteMethod\n * @api public\n */\n\nmodule.exports = function overwriteMethod(ctx, name, method) {\n  var _method = ctx[name]\n    , _super = function () {\n      throw new Error(name + ' is not a function');\n    };\n\n  if (_method && 'function' === typeof _method)\n    _super = _method;\n\n  var overwritingMethodWrapper = function () {\n    // Setting the `ssfi` flag to `overwritingMethodWrapper` causes this\n    // function to be the starting point for removing implementation frames from\n    // the stack trace of a failed assertion.\n    //\n    // However, we only want to use this function as the starting point if the\n    // `lockSsfi` flag isn't set.\n    //\n    // If the `lockSsfi` flag is set, then either this assertion has been\n    // overwritten by another assertion, or this assertion is being invoked from\n    // inside of another assertion. In the first case, the `ssfi` flag has\n    // already been set by the overwriting assertion. In the second case, the\n    // `ssfi` flag has already been set by the outer assertion.\n    if (!flag(this, 'lockSsfi')) {\n      flag(this, 'ssfi', overwritingMethodWrapper);\n    }\n\n    // Setting the `lockSsfi` flag to `true` prevents the overwritten assertion\n    // from changing the `ssfi` flag. By this point, the `ssfi` flag is already\n    // set to the correct starting point for this assertion.\n    var origLockSsfi = flag(this, 'lockSsfi');\n    flag(this, 'lockSsfi', true);\n    var result = method(_super).apply(this, arguments);\n    flag(this, 'lockSsfi', origLockSsfi);\n\n    if (result !== undefined) {\n      return result;\n    }\n\n    var newAssertion = new chai.Assertion();\n    transferFlags(this, newAssertion);\n    return newAssertion;\n  }\n\n  addLengthGuard(overwritingMethodWrapper, name, false);\n  ctx[name] = proxify(overwritingMethodWrapper, name);\n};\n","/*!\n * Chai - addChainingMethod utility\n * Copyright(c) 2012-2014 Jake Luer <jake@alogicalparadox.com>\n * MIT Licensed\n */\n\n/*!\n * Module dependencies\n */\n\nvar addLengthGuard = require('./addLengthGuard');\nvar chai = require('../../chai');\nvar flag = require('./flag');\nvar proxify = require('./proxify');\nvar transferFlags = require('./transferFlags');\n\n/*!\n * Module variables\n */\n\n// Check whether `Object.setPrototypeOf` is supported\nvar canSetPrototype = typeof Object.setPrototypeOf === 'function';\n\n// Without `Object.setPrototypeOf` support, this module will need to add properties to a function.\n// However, some of functions' own props are not configurable and should be skipped.\nvar testFn = function() {};\nvar excludeNames = Object.getOwnPropertyNames(testFn).filter(function(name) {\n  var propDesc = Object.getOwnPropertyDescriptor(testFn, name);\n\n  // Note: PhantomJS 1.x includes `callee` as one of `testFn`'s own properties,\n  // but then returns `undefined` as the property descriptor for `callee`. As a\n  // workaround, we perform an otherwise unnecessary type-check for `propDesc`,\n  // and then filter it out if it's not an object as it should be.\n  if (typeof propDesc !== 'object')\n    return true;\n\n  return !propDesc.configurable;\n});\n\n// Cache `Function` properties\nvar call  = Function.prototype.call,\n    apply = Function.prototype.apply;\n\n/**\n * ### .addChainableMethod(ctx, name, method, chainingBehavior)\n *\n * Adds a method to an object, such that the method can also be chained.\n *\n *     utils.addChainableMethod(chai.Assertion.prototype, 'foo', function (str) {\n *       var obj = utils.flag(this, 'object');\n *       new chai.Assertion(obj).to.be.equal(str);\n *     });\n *\n * Can also be accessed directly from `chai.Assertion`.\n *\n *     chai.Assertion.addChainableMethod('foo', fn, chainingBehavior);\n *\n * The result can then be used as both a method assertion, executing both `method` and\n * `chainingBehavior`, or as a language chain, which only executes `chainingBehavior`.\n *\n *     expect(fooStr).to.be.foo('bar');\n *     expect(fooStr).to.be.foo.equal('foo');\n *\n * @param {Object} ctx object to which the method is added\n * @param {String} name of method to add\n * @param {Function} method function to be used for `name`, when called\n * @param {Function} chainingBehavior function to be called every time the property is accessed\n * @namespace Utils\n * @name addChainableMethod\n * @api public\n */\n\nmodule.exports = function addChainableMethod(ctx, name, method, chainingBehavior) {\n  if (typeof chainingBehavior !== 'function') {\n    chainingBehavior = function () { };\n  }\n\n  var chainableBehavior = {\n      method: method\n    , chainingBehavior: chainingBehavior\n  };\n\n  // save the methods so we can overwrite them later, if we need to.\n  if (!ctx.__methods) {\n    ctx.__methods = {};\n  }\n  ctx.__methods[name] = chainableBehavior;\n\n  Object.defineProperty(ctx, name,\n    { get: function chainableMethodGetter() {\n        chainableBehavior.chainingBehavior.call(this);\n\n        var chainableMethodWrapper = function () {\n          // Setting the `ssfi` flag to `chainableMethodWrapper` causes this\n          // function to be the starting point for removing implementation\n          // frames from the stack trace of a failed assertion.\n          //\n          // However, we only want to use this function as the starting point if\n          // the `lockSsfi` flag isn't set.\n          //\n          // If the `lockSsfi` flag is set, then this assertion is being\n          // invoked from inside of another assertion. In this case, the `ssfi`\n          // flag has already been set by the outer assertion.\n          //\n          // Note that overwriting a chainable method merely replaces the saved\n          // methods in `ctx.__methods` instead of completely replacing the\n          // overwritten assertion. Therefore, an overwriting assertion won't\n          // set the `ssfi` or `lockSsfi` flags.\n          if (!flag(this, 'lockSsfi')) {\n            flag(this, 'ssfi', chainableMethodWrapper);\n          }\n\n          var result = chainableBehavior.method.apply(this, arguments);\n          if (result !== undefined) {\n            return result;\n          }\n\n          var newAssertion = new chai.Assertion();\n          transferFlags(this, newAssertion);\n          return newAssertion;\n        };\n\n        addLengthGuard(chainableMethodWrapper, name, true);\n\n        // Use `Object.setPrototypeOf` if available\n        if (canSetPrototype) {\n          // Inherit all properties from the object by replacing the `Function` prototype\n          var prototype = Object.create(this);\n          // Restore the `call` and `apply` methods from `Function`\n          prototype.call = call;\n          prototype.apply = apply;\n          Object.setPrototypeOf(chainableMethodWrapper, prototype);\n        }\n        // Otherwise, redefine all properties (slow!)\n        else {\n          var asserterNames = Object.getOwnPropertyNames(ctx);\n          asserterNames.forEach(function (asserterName) {\n            if (excludeNames.indexOf(asserterName) !== -1) {\n              return;\n            }\n\n            var pd = Object.getOwnPropertyDescriptor(ctx, asserterName);\n            Object.defineProperty(chainableMethodWrapper, asserterName, pd);\n          });\n        }\n\n        transferFlags(this, chainableMethodWrapper);\n        return proxify(chainableMethodWrapper);\n      }\n    , configurable: true\n  });\n};\n","/*!\n * Chai - overwriteChainableMethod utility\n * Copyright(c) 2012-2014 Jake Luer <jake@alogicalparadox.com>\n * MIT Licensed\n */\n\nvar chai = require('../../chai');\nvar transferFlags = require('./transferFlags');\n\n/**\n * ### .overwriteChainableMethod(ctx, name, method, chainingBehavior)\n *\n * Overwites an already existing chainable method\n * and provides access to the previous function or\n * property.  Must return functions to be used for\n * name.\n *\n *     utils.overwriteChainableMethod(chai.Assertion.prototype, 'lengthOf',\n *       function (_super) {\n *       }\n *     , function (_super) {\n *       }\n *     );\n *\n * Can also be accessed directly from `chai.Assertion`.\n *\n *     chai.Assertion.overwriteChainableMethod('foo', fn, fn);\n *\n * Then can be used as any other assertion.\n *\n *     expect(myFoo).to.have.lengthOf(3);\n *     expect(myFoo).to.have.lengthOf.above(3);\n *\n * @param {Object} ctx object whose method / property is to be overwritten\n * @param {String} name of method / property to overwrite\n * @param {Function} method function that returns a function to be used for name\n * @param {Function} chainingBehavior function that returns a function to be used for property\n * @namespace Utils\n * @name overwriteChainableMethod\n * @api public\n */\n\nmodule.exports = function overwriteChainableMethod(ctx, name, method, chainingBehavior) {\n  var chainableBehavior = ctx.__methods[name];\n\n  var _chainingBehavior = chainableBehavior.chainingBehavior;\n  chainableBehavior.chainingBehavior = function overwritingChainableMethodGetter() {\n    var result = chainingBehavior(_chainingBehavior).call(this);\n    if (result !== undefined) {\n      return result;\n    }\n\n    var newAssertion = new chai.Assertion();\n    transferFlags(this, newAssertion);\n    return newAssertion;\n  };\n\n  var _method = chainableBehavior.method;\n  chainableBehavior.method = function overwritingChainableMethodWrapper() {\n    var result = method(_method).apply(this, arguments);\n    if (result !== undefined) {\n      return result;\n    }\n\n    var newAssertion = new chai.Assertion();\n    transferFlags(this, newAssertion);\n    return newAssertion;\n  };\n};\n","/*!\n * Chai - compareByInspect utility\n * Copyright(c) 2011-2016 Jake Luer <jake@alogicalparadox.com>\n * MIT Licensed\n */\n\n/*!\n * Module dependancies\n */\n\nvar inspect = require('./inspect');\n\n/**\n * ### .compareByInspect(mixed, mixed)\n *\n * To be used as a compareFunction with Array.prototype.sort. Compares elements\n * using inspect instead of default behavior of using toString so that Symbols\n * and objects with irregular/missing toString can still be sorted without a\n * TypeError.\n *\n * @param {Mixed} first element to compare\n * @param {Mixed} second element to compare\n * @returns {Number} -1 if 'a' should come before 'b'; otherwise 1 \n * @name compareByInspect\n * @namespace Utils\n * @api public\n */\n\nmodule.exports = function compareByInspect(a, b) {\n  return inspect(a) < inspect(b) ? -1 : 1;\n};\n","/*!\n * Chai - getOwnEnumerableProperties utility\n * Copyright(c) 2011-2016 Jake Luer <jake@alogicalparadox.com>\n * MIT Licensed\n */\n\n/*!\n * Module dependancies\n */\n\nvar getOwnEnumerablePropertySymbols = require('./getOwnEnumerablePropertySymbols');\n\n/**\n * ### .getOwnEnumerableProperties(object)\n *\n * This allows the retrieval of directly-owned enumerable property names and\n * symbols of an object. This function is necessary because Object.keys only\n * returns enumerable property names, not enumerable property symbols.\n *\n * @param {Object} object\n * @returns {Array}\n * @namespace Utils\n * @name getOwnEnumerableProperties\n * @api public\n */\n\nmodule.exports = function getOwnEnumerableProperties(obj) {\n  return Object.keys(obj).concat(getOwnEnumerablePropertySymbols(obj));\n};\n","'use strict';\n\n/* !\n * Chai - checkError utility\n * Copyright(c) 2012-2016 Jake Luer <jake@alogicalparadox.com>\n * MIT Licensed\n */\n\n/**\n * ### .checkError\n *\n * Checks that an error conforms to a given set of criteria and/or retrieves information about it.\n *\n * @api public\n */\n\n/**\n * ### .compatibleInstance(thrown, errorLike)\n *\n * Checks if two instances are compatible (strict equal).\n * Returns false if errorLike is not an instance of Error, because instances\n * can only be compatible if they're both error instances.\n *\n * @name compatibleInstance\n * @param {Error} thrown error\n * @param {Error|ErrorConstructor} errorLike object to compare against\n * @namespace Utils\n * @api public\n */\n\nfunction compatibleInstance(thrown, errorLike) {\n  return errorLike instanceof Error && thrown === errorLike;\n}\n\n/**\n * ### .compatibleConstructor(thrown, errorLike)\n *\n * Checks if two constructors are compatible.\n * This function can receive either an error constructor or\n * an error instance as the `errorLike` argument.\n * Constructors are compatible if they're the same or if one is\n * an instance of another.\n *\n * @name compatibleConstructor\n * @param {Error} thrown error\n * @param {Error|ErrorConstructor} errorLike object to compare against\n * @namespace Utils\n * @api public\n */\n\nfunction compatibleConstructor(thrown, errorLike) {\n  if (errorLike instanceof Error) {\n    // If `errorLike` is an instance of any error we compare their constructors\n    return thrown.constructor === errorLike.constructor || thrown instanceof errorLike.constructor;\n  } else if (errorLike.prototype instanceof Error || errorLike === Error) {\n    // If `errorLike` is a constructor that inherits from Error, we compare `thrown` to `errorLike` directly\n    return thrown.constructor === errorLike || thrown instanceof errorLike;\n  }\n\n  return false;\n}\n\n/**\n * ### .compatibleMessage(thrown, errMatcher)\n *\n * Checks if an error's message is compatible with a matcher (String or RegExp).\n * If the message contains the String or passes the RegExp test,\n * it is considered compatible.\n *\n * @name compatibleMessage\n * @param {Error} thrown error\n * @param {String|RegExp} errMatcher to look for into the message\n * @namespace Utils\n * @api public\n */\n\nfunction compatibleMessage(thrown, errMatcher) {\n  var comparisonString = typeof thrown === 'string' ? thrown : thrown.message;\n  if (errMatcher instanceof RegExp) {\n    return errMatcher.test(comparisonString);\n  } else if (typeof errMatcher === 'string') {\n    return comparisonString.indexOf(errMatcher) !== -1; // eslint-disable-line no-magic-numbers\n  }\n\n  return false;\n}\n\n/**\n * ### .getFunctionName(constructorFn)\n *\n * Returns the name of a function.\n * This also includes a polyfill function if `constructorFn.name` is not defined.\n *\n * @name getFunctionName\n * @param {Function} constructorFn\n * @namespace Utils\n * @api private\n */\n\nvar functionNameMatch = /\\s*function(?:\\s|\\s*\\/\\*[^(?:*\\/)]+\\*\\/\\s*)*([^\\(\\/]+)/;\nfunction getFunctionName(constructorFn) {\n  var name = '';\n  if (typeof constructorFn.name === 'undefined') {\n    // Here we run a polyfill if constructorFn.name is not defined\n    var match = String(constructorFn).match(functionNameMatch);\n    if (match) {\n      name = match[1];\n    }\n  } else {\n    name = constructorFn.name;\n  }\n\n  return name;\n}\n\n/**\n * ### .getConstructorName(errorLike)\n *\n * Gets the constructor name for an Error instance or constructor itself.\n *\n * @name getConstructorName\n * @param {Error|ErrorConstructor} errorLike\n * @namespace Utils\n * @api public\n */\n\nfunction getConstructorName(errorLike) {\n  var constructorName = errorLike;\n  if (errorLike instanceof Error) {\n    constructorName = getFunctionName(errorLike.constructor);\n  } else if (typeof errorLike === 'function') {\n    // If `err` is not an instance of Error it is an error constructor itself or another function.\n    // If we've got a common function we get its name, otherwise we may need to create a new instance\n    // of the error just in case it's a poorly-constructed error. Please see chaijs/chai/issues/45 to know more.\n    constructorName = getFunctionName(errorLike).trim() ||\n        getFunctionName(new errorLike()); // eslint-disable-line new-cap\n  }\n\n  return constructorName;\n}\n\n/**\n * ### .getMessage(errorLike)\n *\n * Gets the error message from an error.\n * If `err` is a String itself, we return it.\n * If the error has no message, we return an empty string.\n *\n * @name getMessage\n * @param {Error|String} errorLike\n * @namespace Utils\n * @api public\n */\n\nfunction getMessage(errorLike) {\n  var msg = '';\n  if (errorLike && errorLike.message) {\n    msg = errorLike.message;\n  } else if (typeof errorLike === 'string') {\n    msg = errorLike;\n  }\n\n  return msg;\n}\n\nmodule.exports = {\n  compatibleInstance: compatibleInstance,\n  compatibleConstructor: compatibleConstructor,\n  compatibleMessage: compatibleMessage,\n  getMessage: getMessage,\n  getConstructorName: getConstructorName,\n};\n","/*!\n * Chai - isNaN utility\n * Copyright(c) 2012-2015 Sakthipriyan Vairamani <thechargingvolcano@gmail.com>\n * MIT Licensed\n */\n\n/**\n * ### .isNaN(value)\n *\n * Checks if the given value is NaN or not.\n *\n *     utils.isNaN(NaN); // true\n *\n * @param {Value} The value which has to be checked if it is NaN\n * @name isNaN\n * @api private\n */\n\nfunction isNaN(value) {\n  // Refer http://www.ecma-international.org/ecma-262/6.0/#sec-isnan-number\n  // section's NOTE.\n  return value !== value;\n}\n\n// If ECMAScript 6's Number.isNaN is present, prefer that.\nmodule.exports = Number.isNaN || isNaN;\n","/*!\n * chai\n * http://chaijs.com\n * Copyright(c) 2011-2014 Jake Luer <jake@alogicalparadox.com>\n * MIT Licensed\n */\n\nvar config = require('./config');\n\nmodule.exports = function (_chai, util) {\n  /*!\n   * Module dependencies.\n   */\n\n  var AssertionError = _chai.AssertionError\n    , flag = util.flag;\n\n  /*!\n   * Module export.\n   */\n\n  _chai.Assertion = Assertion;\n\n  /*!\n   * Assertion Constructor\n   *\n   * Creates object for chaining.\n   *\n   * `Assertion` objects contain metadata in the form of flags. Three flags can\n   * be assigned during instantiation by passing arguments to this constructor:\n   *\n   * - `object`: This flag contains the target of the assertion. For example, in\n   *   the assertion `expect(numKittens).to.equal(7);`, the `object` flag will\n   *   contain `numKittens` so that the `equal` assertion can reference it when\n   *   needed.\n   *\n   * - `message`: This flag contains an optional custom error message to be\n   *   prepended to the error message that's generated by the assertion when it\n   *   fails.\n   *\n   * - `ssfi`: This flag stands for \"start stack function indicator\". It\n   *   contains a function reference that serves as the starting point for\n   *   removing frames from the stack trace of the error that's created by the\n   *   assertion when it fails. The goal is to provide a cleaner stack trace to\n   *   end users by removing Chai's internal functions. Note that it only works\n   *   in environments that support `Error.captureStackTrace`, and only when\n   *   `Chai.config.includeStack` hasn't been set to `false`.\n   *\n   * - `lockSsfi`: This flag controls whether or not the given `ssfi` flag\n   *   should retain its current value, even as assertions are chained off of\n   *   this object. This is usually set to `true` when creating a new assertion\n   *   from within another assertion. It's also temporarily set to `true` before\n   *   an overwritten assertion gets called by the overwriting assertion.\n   *\n   * @param {Mixed} obj target of the assertion\n   * @param {String} msg (optional) custom error message\n   * @param {Function} ssfi (optional) starting point for removing stack frames\n   * @param {Boolean} lockSsfi (optional) whether or not the ssfi flag is locked\n   * @api private\n   */\n\n  function Assertion (obj, msg, ssfi, lockSsfi) {\n    flag(this, 'ssfi', ssfi || Assertion);\n    flag(this, 'lockSsfi', lockSsfi);\n    flag(this, 'object', obj);\n    flag(this, 'message', msg);\n\n    return util.proxify(this);\n  }\n\n  Object.defineProperty(Assertion, 'includeStack', {\n    get: function() {\n      console.warn('Assertion.includeStack is deprecated, use chai.config.includeStack instead.');\n      return config.includeStack;\n    },\n    set: function(value) {\n      console.warn('Assertion.includeStack is deprecated, use chai.config.includeStack instead.');\n      config.includeStack = value;\n    }\n  });\n\n  Object.defineProperty(Assertion, 'showDiff', {\n    get: function() {\n      console.warn('Assertion.showDiff is deprecated, use chai.config.showDiff instead.');\n      return config.showDiff;\n    },\n    set: function(value) {\n      console.warn('Assertion.showDiff is deprecated, use chai.config.showDiff instead.');\n      config.showDiff = value;\n    }\n  });\n\n  Assertion.addProperty = function (name, fn) {\n    util.addProperty(this.prototype, name, fn);\n  };\n\n  Assertion.addMethod = function (name, fn) {\n    util.addMethod(this.prototype, name, fn);\n  };\n\n  Assertion.addChainableMethod = function (name, fn, chainingBehavior) {\n    util.addChainableMethod(this.prototype, name, fn, chainingBehavior);\n  };\n\n  Assertion.overwriteProperty = function (name, fn) {\n    util.overwriteProperty(this.prototype, name, fn);\n  };\n\n  Assertion.overwriteMethod = function (name, fn) {\n    util.overwriteMethod(this.prototype, name, fn);\n  };\n\n  Assertion.overwriteChainableMethod = function (name, fn, chainingBehavior) {\n    util.overwriteChainableMethod(this.prototype, name, fn, chainingBehavior);\n  };\n\n  /**\n   * ### .assert(expression, message, negateMessage, expected, actual, showDiff)\n   *\n   * Executes an expression and check expectations. Throws AssertionError for reporting if test doesn't pass.\n   *\n   * @name assert\n   * @param {Philosophical} expression to be tested\n   * @param {String|Function} message or function that returns message to display if expression fails\n   * @param {String|Function} negatedMessage or function that returns negatedMessage to display if negated expression fails\n   * @param {Mixed} expected value (remember to check for negation)\n   * @param {Mixed} actual (optional) will default to `this.obj`\n   * @param {Boolean} showDiff (optional) when set to `true`, assert will display a diff in addition to the message if expression fails\n   * @api private\n   */\n\n  Assertion.prototype.assert = function (expr, msg, negateMsg, expected, _actual, showDiff) {\n    var ok = util.test(this, arguments);\n    if (false !== showDiff) showDiff = true;\n    if (undefined === expected && undefined === _actual) showDiff = false;\n    if (true !== config.showDiff) showDiff = false;\n\n    if (!ok) {\n      msg = util.getMessage(this, arguments);\n      var actual = util.getActual(this, arguments);\n      throw new AssertionError(msg, {\n          actual: actual\n        , expected: expected\n        , showDiff: showDiff\n      }, (config.includeStack) ? this.assert : flag(this, 'ssfi'));\n    }\n  };\n\n  /*!\n   * ### ._obj\n   *\n   * Quick reference to stored `actual` value for plugin developers.\n   *\n   * @api private\n   */\n\n  Object.defineProperty(Assertion.prototype, '_obj',\n    { get: function () {\n        return flag(this, 'object');\n      }\n    , set: function (val) {\n        flag(this, 'object', val);\n      }\n  });\n};\n","/*!\n * chai\n * http://chaijs.com\n * Copyright(c) 2011-2014 Jake Luer <jake@alogicalparadox.com>\n * MIT Licensed\n */\n\nmodule.exports = function (chai, _) {\n  var Assertion = chai.Assertion\n    , AssertionError = chai.AssertionError\n    , flag = _.flag;\n\n  /**\n   * ### Language Chains\n   *\n   * The following are provided as chainable getters to improve the readability\n   * of your assertions.\n   *\n   * **Chains**\n   *\n   * - to\n   * - be\n   * - been\n   * - is\n   * - that\n   * - which\n   * - and\n   * - has\n   * - have\n   * - with\n   * - at\n   * - of\n   * - same\n   * - but\n   * - does\n   *\n   * @name language chains\n   * @namespace BDD\n   * @api public\n   */\n\n  [ 'to', 'be', 'been'\n  , 'is', 'and', 'has', 'have'\n  , 'with', 'that', 'which', 'at'\n  , 'of', 'same', 'but', 'does' ].forEach(function (chain) {\n    Assertion.addProperty(chain);\n  });\n\n  /**\n   * ### .not\n   *\n   * Negates all assertions that follow in the chain.\n   *\n   *     expect(function () {}).to.not.throw();\n   *     expect({a: 1}).to.not.have.property('b');\n   *     expect([1, 2]).to.be.an('array').that.does.not.include(3);\n   *\n   * Just because you can negate any assertion with `.not` doesn't mean you\n   * should. With great power comes great responsibility. It's often best to\n   * assert that the one expected output was produced, rather than asserting\n   * that one of countless unexpected outputs wasn't produced. See individual\n   * assertions for specific guidance.\n   *\n   *     expect(2).to.equal(2); // Recommended\n   *     expect(2).to.not.equal(1); // Not recommended\n   *\n   * @name not\n   * @namespace BDD\n   * @api public\n   */\n\n  Assertion.addProperty('not', function () {\n    flag(this, 'negate', true);\n  });\n\n  /**\n   * ### .deep\n   *\n   * Causes all `.equal`, `.include`, `.members`, `.keys`, and `.property`\n   * assertions that follow in the chain to use deep equality instead of strict\n   * (`===`) equality. See the `deep-eql` project page for info on the deep\n   * equality algorithm: https://github.com/chaijs/deep-eql.\n   *\n   *     // Target object deeply (but not strictly) equals `{a: 1}`\n   *     expect({a: 1}).to.deep.equal({a: 1});\n   *     expect({a: 1}).to.not.equal({a: 1});\n   *\n   *     // Target array deeply (but not strictly) includes `{a: 1}`\n   *     expect([{a: 1}]).to.deep.include({a: 1});\n   *     expect([{a: 1}]).to.not.include({a: 1});\n   *\n   *     // Target object deeply (but not strictly) includes `x: {a: 1}`\n   *     expect({x: {a: 1}}).to.deep.include({x: {a: 1}});\n   *     expect({x: {a: 1}}).to.not.include({x: {a: 1}});\n   *\n   *     // Target array deeply (but not strictly) has member `{a: 1}`\n   *     expect([{a: 1}]).to.have.deep.members([{a: 1}]);\n   *     expect([{a: 1}]).to.not.have.members([{a: 1}]);\n   *\n   *     // Target set deeply (but not strictly) has key `{a: 1}`\n   *     expect(new Set([{a: 1}])).to.have.deep.keys([{a: 1}]);\n   *     expect(new Set([{a: 1}])).to.not.have.keys([{a: 1}]);\n   *\n   *     // Target object deeply (but not strictly) has property `x: {a: 1}`\n   *     expect({x: {a: 1}}).to.have.deep.property('x', {a: 1});\n   *     expect({x: {a: 1}}).to.not.have.property('x', {a: 1});\n   *\n   * @name deep\n   * @namespace BDD\n   * @api public\n   */\n\n  Assertion.addProperty('deep', function () {\n    flag(this, 'deep', true);\n  });\n\n  /**\n   * ### .nested\n   *\n   * Enables dot- and bracket-notation in all `.property` and `.include`\n   * assertions that follow in the chain.\n   *\n   *     expect({a: {b: ['x', 'y']}}).to.have.nested.property('a.b[1]');\n   *     expect({a: {b: ['x', 'y']}}).to.nested.include({'a.b[1]': 'y'});\n   *\n   * If `.` or `[]` are part of an actual property name, they can be escaped by\n   * adding two backslashes before them.\n   *\n   *     expect({'.a': {'[b]': 'x'}}).to.have.nested.property('\\\\.a.\\\\[b\\\\]');\n   *     expect({'.a': {'[b]': 'x'}}).to.nested.include({'\\\\.a.\\\\[b\\\\]': 'x'});\n   *\n   * `.nested` cannot be combined with `.own`.\n   *\n   * @name nested\n   * @namespace BDD\n   * @api public\n   */\n\n  Assertion.addProperty('nested', function () {\n    flag(this, 'nested', true);\n  });\n\n  /**\n   * ### .own\n   *\n   * Causes all `.property` and `.include` assertions that follow in the chain\n   * to ignore inherited properties.\n   *\n   *     Object.prototype.b = 2;\n   *\n   *     expect({a: 1}).to.have.own.property('a');\n   *     expect({a: 1}).to.have.property('b').but.not.own.property('b'); \n   *\n   *     expect({a: 1}).to.own.include({a: 1});\n   *     expect({a: 1}).to.include({b: 2}).but.not.own.include({b: 2});\n   *\n   * `.own` cannot be combined with `.nested`.\n   *\n   * @name own\n   * @namespace BDD\n   * @api public\n   */\n\n  Assertion.addProperty('own', function () {\n    flag(this, 'own', true);\n  });\n\n  /**\n   * ### .ordered\n   *\n   * Causes all `.members` assertions that follow in the chain to require that\n   * members be in the same order.\n   *\n   *     expect([1, 2]).to.have.ordered.members([1, 2])\n   *       .but.not.have.ordered.members([2, 1]);\n   *\n   * When `.include` and `.ordered` are combined, the ordering begins at the\n   * start of both arrays.\n   *\n   *     expect([1, 2, 3]).to.include.ordered.members([1, 2])\n   *       .but.not.include.ordered.members([2, 3]);\n   *\n   * @name ordered\n   * @namespace BDD\n   * @api public\n   */\n\n  Assertion.addProperty('ordered', function () {\n    flag(this, 'ordered', true);\n  });\n\n  /**\n   * ### .any\n   *\n   * Causes all `.keys` assertions that follow in the chain to only require that\n   * the target have at least one of the given keys. This is the opposite of\n   * `.all`, which requires that the target have all of the given keys.\n   *\n   *     expect({a: 1, b: 2}).to.not.have.any.keys('c', 'd');\n   *\n   * See the `.keys` doc for guidance on when to use `.any` or `.all`.\n   *\n   * @name any\n   * @namespace BDD\n   * @api public\n   */\n\n  Assertion.addProperty('any', function () {\n    flag(this, 'any', true);\n    flag(this, 'all', false);\n  });\n\n\n  /**\n   * ### .all\n   *\n   * Causes all `.keys` assertions that follow in the chain to require that the\n   * target have all of the given keys. This is the opposite of `.any`, which\n   * only requires that the target have at least one of the given keys.\n   *\n   *     expect({a: 1, b: 2}).to.have.all.keys('a', 'b');\n   *\n   * Note that `.all` is used by default when neither `.all` nor `.any` are\n   * added earlier in the chain. However, it's often best to add `.all` anyway\n   * because it improves readability.\n   *\n   * See the `.keys` doc for guidance on when to use `.any` or `.all`.\n   *\n   * @name all\n   * @namespace BDD\n   * @api public\n   */\n\n  Assertion.addProperty('all', function () {\n    flag(this, 'all', true);\n    flag(this, 'any', false);\n  });\n\n  /**\n   * ### .a(type[, msg])\n   *\n   * Asserts that the target's type is equal to the given string `type`. Types\n   * are case insensitive. See the `type-detect` project page for info on the\n   * type detection algorithm: https://github.com/chaijs/type-detect.\n   *\n   *     expect('foo').to.be.a('string');\n   *     expect({a: 1}).to.be.an('object');\n   *     expect(null).to.be.a('null');\n   *     expect(undefined).to.be.an('undefined');\n   *     expect(new Error).to.be.an('error');\n   *     expect(Promise.resolve()).to.be.a('promise');\n   *     expect(new Float32Array).to.be.a('float32array');\n   *     expect(Symbol()).to.be.a('symbol');\n   *\n   * `.a` supports objects that have a custom type set via `Symbol.toStringTag`.\n   *\n   *     var myObj = {\n   *       [Symbol.toStringTag]: 'myCustomType'\n   *     };\n   *\n   *     expect(myObj).to.be.a('myCustomType').but.not.an('object');\n   *\n   * It's often best to use `.a` to check a target's type before making more\n   * assertions on the same target. That way, you avoid unexpected behavior from\n   * any assertion that does different things based on the target's type.\n   *\n   *     expect([1, 2, 3]).to.be.an('array').that.includes(2);\n   *     expect([]).to.be.an('array').that.is.empty;\n   *\n   * Add `.not` earlier in the chain to negate `.a`. However, it's often best to\n   * assert that the target is the expected type, rather than asserting that it\n   * isn't one of many unexpected types.\n   *\n   *     expect('foo').to.be.a('string'); // Recommended\n   *     expect('foo').to.not.be.an('array'); // Not recommended\n   *\n   * `.a` accepts an optional `msg` argument which is a custom error message to\n   * show when the assertion fails. The message can also be given as the second\n   * argument to `expect`.\n   *\n   *     expect(1).to.be.a('string', 'nooo why fail??');\n   *     expect(1, 'nooo why fail??').to.be.a('string');\n   *\n   * `.a` can also be used as a language chain to improve the readability of\n   * your assertions. \n   *\n   *     expect({b: 2}).to.have.a.property('b');\n   *\n   * The alias `.an` can be used interchangeably with `.a`.\n   *\n   * @name a\n   * @alias an\n   * @param {String} type\n   * @param {String} msg _optional_\n   * @namespace BDD\n   * @api public\n   */\n\n  function an (type, msg) {\n    if (msg) flag(this, 'message', msg);\n    type = type.toLowerCase();\n    var obj = flag(this, 'object')\n      , article = ~[ 'a', 'e', 'i', 'o', 'u' ].indexOf(type.charAt(0)) ? 'an ' : 'a ';\n\n    this.assert(\n        type === _.type(obj).toLowerCase()\n      , 'expected #{this} to be ' + article + type\n      , 'expected #{this} not to be ' + article + type\n    );\n  }\n\n  Assertion.addChainableMethod('an', an);\n  Assertion.addChainableMethod('a', an);\n\n  /**\n   * ### .include(val[, msg])\n   *\n   * When the target is a string, `.include` asserts that the given string `val`\n   * is a substring of the target.\n   *\n   *     expect('foobar').to.include('foo');\n   *\n   * When the target is an array, `.include` asserts that the given `val` is a\n   * member of the target.\n   *\n   *     expect([1, 2, 3]).to.include(2);\n   *\n   * When the target is an object, `.include` asserts that the given object\n   * `val`'s properties are a subset of the target's properties.\n   *\n   *     expect({a: 1, b: 2, c: 3}).to.include({a: 1, b: 2});\n   *\n   * When the target is a Set or WeakSet, `.include` asserts that the given `val` is a\n   * member of the target. SameValueZero equality algorithm is used.\n   *\n   *     expect(new Set([1, 2])).to.include(2);\n   *\n   * When the target is a Map, `.include` asserts that the given `val` is one of\n   * the values of the target. SameValueZero equality algorithm is used.\n   *\n   *     expect(new Map([['a', 1], ['b', 2]])).to.include(2);\n   *\n   * Because `.include` does different things based on the target's type, it's\n   * important to check the target's type before using `.include`. See the `.a`\n   * doc for info on testing a target's type.\n   *\n   *     expect([1, 2, 3]).to.be.an('array').that.includes(2);\n   *\n   * By default, strict (`===`) equality is used to compare array members and\n   * object properties. Add `.deep` earlier in the chain to use deep equality\n   * instead (WeakSet targets are not supported). See the `deep-eql` project\n   * page for info on the deep equality algorithm: https://github.com/chaijs/deep-eql.\n   *\n   *     // Target array deeply (but not strictly) includes `{a: 1}`\n   *     expect([{a: 1}]).to.deep.include({a: 1});\n   *     expect([{a: 1}]).to.not.include({a: 1});\n   *\n   *     // Target object deeply (but not strictly) includes `x: {a: 1}`\n   *     expect({x: {a: 1}}).to.deep.include({x: {a: 1}});\n   *     expect({x: {a: 1}}).to.not.include({x: {a: 1}});\n   *\n   * By default, all of the target's properties are searched when working with\n   * objects. This includes properties that are inherited and/or non-enumerable.\n   * Add `.own` earlier in the chain to exclude the target's inherited\n   * properties from the search.\n   *\n   *     Object.prototype.b = 2;\n   *\n   *     expect({a: 1}).to.own.include({a: 1});\n   *     expect({a: 1}).to.include({b: 2}).but.not.own.include({b: 2});\n   *\n   * Note that a target object is always only searched for `val`'s own\n   * enumerable properties.\n   *\n   * `.deep` and `.own` can be combined.\n   *\n   *     expect({a: {b: 2}}).to.deep.own.include({a: {b: 2}});\n   *\n   * Add `.nested` earlier in the chain to enable dot- and bracket-notation when\n   * referencing nested properties.\n   *\n   *     expect({a: {b: ['x', 'y']}}).to.nested.include({'a.b[1]': 'y'});\n   *\n   * If `.` or `[]` are part of an actual property name, they can be escaped by\n   * adding two backslashes before them.\n   *\n   *     expect({'.a': {'[b]': 2}}).to.nested.include({'\\\\.a.\\\\[b\\\\]': 2});\n   *\n   * `.deep` and `.nested` can be combined.\n   *\n   *     expect({a: {b: [{c: 3}]}}).to.deep.nested.include({'a.b[0]': {c: 3}});\n   *\n   * `.own` and `.nested` cannot be combined.\n   *\n   * Add `.not` earlier in the chain to negate `.include`.\n   *\n   *     expect('foobar').to.not.include('taco');\n   *     expect([1, 2, 3]).to.not.include(4);\n   * \n   * However, it's dangerous to negate `.include` when the target is an object.\n   * The problem is that it creates uncertain expectations by asserting that the\n   * target object doesn't have all of `val`'s key/value pairs but may or may\n   * not have some of them. It's often best to identify the exact output that's\n   * expected, and then write an assertion that only accepts that exact output.\n   *\n   * When the target object isn't even expected to have `val`'s keys, it's\n   * often best to assert exactly that.\n   *\n   *     expect({c: 3}).to.not.have.any.keys('a', 'b'); // Recommended\n   *     expect({c: 3}).to.not.include({a: 1, b: 2}); // Not recommended\n   *\n   * When the target object is expected to have `val`'s keys, it's often best to\n   * assert that each of the properties has its expected value, rather than\n   * asserting that each property doesn't have one of many unexpected values.\n   *\n   *     expect({a: 3, b: 4}).to.include({a: 3, b: 4}); // Recommended\n   *     expect({a: 3, b: 4}).to.not.include({a: 1, b: 2}); // Not recommended\n   *\n   * `.include` accepts an optional `msg` argument which is a custom error\n   * message to show when the assertion fails. The message can also be given as\n   * the second argument to `expect`.\n   *\n   *     expect([1, 2, 3]).to.include(4, 'nooo why fail??');\n   *     expect([1, 2, 3], 'nooo why fail??').to.include(4);\n   *\n   * `.include` can also be used as a language chain, causing all `.members` and\n   * `.keys` assertions that follow in the chain to require the target to be a\n   * superset of the expected set, rather than an identical set. Note that\n   * `.members` ignores duplicates in the subset when `.include` is added.\n   *\n   *     // Target object's keys are a superset of ['a', 'b'] but not identical\n   *     expect({a: 1, b: 2, c: 3}).to.include.all.keys('a', 'b');\n   *     expect({a: 1, b: 2, c: 3}).to.not.have.all.keys('a', 'b');\n   *\n   *     // Target array is a superset of [1, 2] but not identical\n   *     expect([1, 2, 3]).to.include.members([1, 2]);\n   *     expect([1, 2, 3]).to.not.have.members([1, 2]);\n   *\n   *     // Duplicates in the subset are ignored\n   *     expect([1, 2, 3]).to.include.members([1, 2, 2, 2]);\n   *\n   * Note that adding `.any` earlier in the chain causes the `.keys` assertion\n   * to ignore `.include`.\n   *\n   *     // Both assertions are identical\n   *     expect({a: 1}).to.include.any.keys('a', 'b');\n   *     expect({a: 1}).to.have.any.keys('a', 'b');\n   *\n   * The aliases `.includes`, `.contain`, and `.contains` can be used\n   * interchangeably with `.include`.\n   *\n   * @name include\n   * @alias contain\n   * @alias includes\n   * @alias contains\n   * @param {Mixed} val\n   * @param {String} msg _optional_\n   * @namespace BDD\n   * @api public\n   */\n\n  function SameValueZero(a, b) {\n    return (_.isNaN(a) && _.isNaN(b)) || a === b;\n  }\n\n  function includeChainingBehavior () {\n    flag(this, 'contains', true);\n  }\n\n  function include (val, msg) {\n    if (msg) flag(this, 'message', msg);\n    \n    var obj = flag(this, 'object')\n      , objType = _.type(obj).toLowerCase()\n      , flagMsg = flag(this, 'message')\n      , negate = flag(this, 'negate')\n      , ssfi = flag(this, 'ssfi')\n      , isDeep = flag(this, 'deep')\n      , descriptor = isDeep ? 'deep ' : '';\n\n    flagMsg = flagMsg ? flagMsg + ': ' : '';\n\n    var included = false;\n\n    switch (objType) {\n      case 'string':\n        included = obj.indexOf(val) !== -1;\n        break;\n\n      case 'weakset':\n        if (isDeep) {\n          throw new AssertionError(\n            flagMsg + 'unable to use .deep.include with WeakSet',\n            undefined,\n            ssfi\n          );\n        }\n\n        included = obj.has(val);\n        break;\n\n      case 'map':\n        var isEql = isDeep ? _.eql : SameValueZero;\n        obj.forEach(function (item) {\n          included = included || isEql(item, val);\n        });\n        break;\n\n      case 'set':\n        if (isDeep) {\n          obj.forEach(function (item) {\n            included = included || _.eql(item, val);\n          });\n        } else {\n          included = obj.has(val);\n        }\n        break;\n\n      case 'array':\n        if (isDeep) {\n          included = obj.some(function (item) {\n            return _.eql(item, val);\n          })\n        } else {\n          included = obj.indexOf(val) !== -1;\n        }\n        break;\n\n      default:\n        // This block is for asserting a subset of properties in an object.\n        // `_.expectTypes` isn't used here because `.include` should work with\n        // objects with a custom `@@toStringTag`.\n        if (val !== Object(val)) {\n          throw new AssertionError(\n            flagMsg + 'object tested must be an array, a map, an object,'\n              + ' a set, a string, or a weakset, but ' + objType + ' given',\n            undefined,\n            ssfi\n          );\n        }\n\n        var props = Object.keys(val)\n          , firstErr = null\n          , numErrs = 0;\n  \n        props.forEach(function (prop) {\n          var propAssertion = new Assertion(obj);\n          _.transferFlags(this, propAssertion, true);\n          flag(propAssertion, 'lockSsfi', true);\n  \n          if (!negate || props.length === 1) {\n            propAssertion.property(prop, val[prop]);\n            return;\n          }\n  \n          try {\n            propAssertion.property(prop, val[prop]);\n          } catch (err) {\n            if (!_.checkError.compatibleConstructor(err, AssertionError)) {\n              throw err;\n            }\n            if (firstErr === null) firstErr = err;\n            numErrs++;\n          }\n        }, this);\n  \n        // When validating .not.include with multiple properties, we only want\n        // to throw an assertion error if all of the properties are included,\n        // in which case we throw the first property assertion error that we\n        // encountered.\n        if (negate && props.length > 1 && numErrs === props.length) {\n          throw firstErr;\n        }\n        return;\n    }\n\n    // Assert inclusion in collection or substring in a string.\n    this.assert(\n      included\n      , 'expected #{this} to ' + descriptor + 'include ' + _.inspect(val)\n      , 'expected #{this} to not ' + descriptor + 'include ' + _.inspect(val));\n  }\n\n  Assertion.addChainableMethod('include', include, includeChainingBehavior);\n  Assertion.addChainableMethod('contain', include, includeChainingBehavior);\n  Assertion.addChainableMethod('contains', include, includeChainingBehavior);\n  Assertion.addChainableMethod('includes', include, includeChainingBehavior);\n\n  /**\n   * ### .ok\n   *\n   * Asserts that the target is loosely (`==`) equal to `true`. However, it's\n   * often best to assert that the target is strictly (`===`) or deeply equal to\n   * its expected value.\n   *\n   *     expect(1).to.equal(1); // Recommended\n   *     expect(1).to.be.ok; // Not recommended\n   *\n   *     expect(true).to.be.true; // Recommended\n   *     expect(true).to.be.ok; // Not recommended\n   *\n   * Add `.not` earlier in the chain to negate `.ok`.\n   *\n   *     expect(0).to.equal(0); // Recommended\n   *     expect(0).to.not.be.ok; // Not recommended\n   *\n   *     expect(false).to.be.false; // Recommended\n   *     expect(false).to.not.be.ok; // Not recommended\n   *\n   *     expect(null).to.be.null; // Recommended\n   *     expect(null).to.not.be.ok; // Not recommended\n   *\n   *     expect(undefined).to.be.undefined; // Recommended\n   *     expect(undefined).to.not.be.ok; // Not recommended\n   *\n   * A custom error message can be given as the second argument to `expect`.\n   *\n   *     expect(false, 'nooo why fail??').to.be.ok;\n   *\n   * @name ok\n   * @namespace BDD\n   * @api public\n   */\n\n  Assertion.addProperty('ok', function () {\n    this.assert(\n        flag(this, 'object')\n      , 'expected #{this} to be truthy'\n      , 'expected #{this} to be falsy');\n  });\n\n  /**\n   * ### .true\n   *\n   * Asserts that the target is strictly (`===`) equal to `true`.\n   *\n   *     expect(true).to.be.true;\n   *\n   * Add `.not` earlier in the chain to negate `.true`. However, it's often best\n   * to assert that the target is equal to its expected value, rather than not\n   * equal to `true`.\n   *\n   *     expect(false).to.be.false; // Recommended\n   *     expect(false).to.not.be.true; // Not recommended\n   *\n   *     expect(1).to.equal(1); // Recommended\n   *     expect(1).to.not.be.true; // Not recommended\n   *\n   * A custom error message can be given as the second argument to `expect`.\n   *\n   *     expect(false, 'nooo why fail??').to.be.true;\n   *\n   * @name true\n   * @namespace BDD\n   * @api public\n   */\n\n  Assertion.addProperty('true', function () {\n    this.assert(\n        true === flag(this, 'object')\n      , 'expected #{this} to be true'\n      , 'expected #{this} to be false'\n      , flag(this, 'negate') ? false : true\n    );\n  });\n\n  /**\n   * ### .false\n   *\n   * Asserts that the target is strictly (`===`) equal to `false`.\n   *\n   *     expect(false).to.be.false;\n   *\n   * Add `.not` earlier in the chain to negate `.false`. However, it's often\n   * best to assert that the target is equal to its expected value, rather than\n   * not equal to `false`.\n   *\n   *     expect(true).to.be.true; // Recommended\n   *     expect(true).to.not.be.false; // Not recommended\n   *\n   *     expect(1).to.equal(1); // Recommended\n   *     expect(1).to.not.be.false; // Not recommended\n   *\n   * A custom error message can be given as the second argument to `expect`.\n   *\n   *     expect(true, 'nooo why fail??').to.be.false;\n   *\n   * @name false\n   * @namespace BDD\n   * @api public\n   */\n\n  Assertion.addProperty('false', function () {\n    this.assert(\n        false === flag(this, 'object')\n      , 'expected #{this} to be false'\n      , 'expected #{this} to be true'\n      , flag(this, 'negate') ? true : false\n    );\n  });\n\n  /**\n   * ### .null\n   *\n   * Asserts that the target is strictly (`===`) equal to `null`.\n   *\n   *     expect(null).to.be.null;\n   *\n   * Add `.not` earlier in the chain to negate `.null`. However, it's often best\n   * to assert that the target is equal to its expected value, rather than not\n   * equal to `null`.\n   *\n   *     expect(1).to.equal(1); // Recommended\n   *     expect(1).to.not.be.null; // Not recommended\n   *\n   * A custom error message can be given as the second argument to `expect`.\n   *\n   *     expect(42, 'nooo why fail??').to.be.null;\n   *\n   * @name null\n   * @namespace BDD\n   * @api public\n   */\n\n  Assertion.addProperty('null', function () {\n    this.assert(\n        null === flag(this, 'object')\n      , 'expected #{this} to be null'\n      , 'expected #{this} not to be null'\n    );\n  });\n\n  /**\n   * ### .undefined\n   *\n   * Asserts that the target is strictly (`===`) equal to `undefined`.\n   *\n   *     expect(undefined).to.be.undefined;\n   *\n   * Add `.not` earlier in the chain to negate `.undefined`. However, it's often\n   * best to assert that the target is equal to its expected value, rather than\n   * not equal to `undefined`.\n   *\n   *     expect(1).to.equal(1); // Recommended\n   *     expect(1).to.not.be.undefined; // Not recommended\n   *\n   * A custom error message can be given as the second argument to `expect`.\n   *\n   *     expect(42, 'nooo why fail??').to.be.undefined;\n   *\n   * @name undefined\n   * @namespace BDD\n   * @api public\n   */\n\n  Assertion.addProperty('undefined', function () {\n    this.assert(\n        undefined === flag(this, 'object')\n      , 'expected #{this} to be undefined'\n      , 'expected #{this} not to be undefined'\n    );\n  });\n\n  /**\n   * ### .NaN\n   *\n   * Asserts that the target is exactly `NaN`.\n   *\n   *     expect(NaN).to.be.NaN;\n   *\n   * Add `.not` earlier in the chain to negate `.NaN`. However, it's often best\n   * to assert that the target is equal to its expected value, rather than not\n   * equal to `NaN`.\n   *\n   *     expect('foo').to.equal('foo'); // Recommended\n   *     expect('foo').to.not.be.NaN; // Not recommended\n   *\n   * A custom error message can be given as the second argument to `expect`.\n   *\n   *     expect(42, 'nooo why fail??').to.be.NaN;\n   *\n   * @name NaN\n   * @namespace BDD\n   * @api public\n   */\n\n  Assertion.addProperty('NaN', function () {\n    this.assert(\n        _.isNaN(flag(this, 'object'))\n        , 'expected #{this} to be NaN'\n        , 'expected #{this} not to be NaN'\n    );\n  });\n\n  /**\n   * ### .exist\n   *\n   * Asserts that the target is not strictly (`===`) equal to either `null` or\n   * `undefined`. However, it's often best to assert that the target is equal to\n   * its expected value.\n   *\n   *     expect(1).to.equal(1); // Recommended\n   *     expect(1).to.exist; // Not recommended\n   *\n   *     expect(0).to.equal(0); // Recommended\n   *     expect(0).to.exist; // Not recommended\n   *\n   * Add `.not` earlier in the chain to negate `.exist`.\n   *\n   *     expect(null).to.be.null; // Recommended\n   *     expect(null).to.not.exist; // Not recommended\n   *\n   *     expect(undefined).to.be.undefined; // Recommended\n   *     expect(undefined).to.not.exist; // Not recommended\n   *\n   * A custom error message can be given as the second argument to `expect`.\n   *\n   *     expect(null, 'nooo why fail??').to.exist;\n   *\n   * @name exist\n   * @namespace BDD\n   * @api public\n   */\n\n  Assertion.addProperty('exist', function () {\n    var val = flag(this, 'object');\n    this.assert(\n        val !== null && val !== undefined\n      , 'expected #{this} to exist'\n      , 'expected #{this} to not exist'\n    );\n  });\n\n  /**\n   * ### .empty\n   *\n   * When the target is a string or array, `.empty` asserts that the target's\n   * `length` property is strictly (`===`) equal to `0`.\n   *\n   *     expect([]).to.be.empty;\n   *     expect('').to.be.empty;\n   *\n   * When the target is a map or set, `.empty` asserts that the target's `size`\n   * property is strictly equal to `0`.\n   *\n   *     expect(new Set()).to.be.empty;\n   *     expect(new Map()).to.be.empty;\n   *\n   * When the target is a non-function object, `.empty` asserts that the target\n   * doesn't have any own enumerable properties. Properties with Symbol-based\n   * keys are excluded from the count.\n   *\n   *     expect({}).to.be.empty;\n   *\n   * Because `.empty` does different things based on the target's type, it's\n   * important to check the target's type before using `.empty`. See the `.a`\n   * doc for info on testing a target's type.\n   *\n   *     expect([]).to.be.an('array').that.is.empty;\n   *\n   * Add `.not` earlier in the chain to negate `.empty`. However, it's often\n   * best to assert that the target contains its expected number of values,\n   * rather than asserting that it's not empty.\n   *\n   *     expect([1, 2, 3]).to.have.lengthOf(3); // Recommended\n   *     expect([1, 2, 3]).to.not.be.empty; // Not recommended\n   *\n   *     expect(new Set([1, 2, 3])).to.have.property('size', 3); // Recommended\n   *     expect(new Set([1, 2, 3])).to.not.be.empty; // Not recommended\n   *\n   *     expect(Object.keys({a: 1})).to.have.lengthOf(1); // Recommended\n   *     expect({a: 1}).to.not.be.empty; // Not recommended\n   *\n   * A custom error message can be given as the second argument to `expect`.\n   *\n   *     expect([1, 2, 3], 'nooo why fail??').to.be.empty;\n   *\n   * @name empty\n   * @namespace BDD\n   * @api public\n   */\n\n  Assertion.addProperty('empty', function () {\n    var val = flag(this, 'object')\n      , ssfi = flag(this, 'ssfi')\n      , flagMsg = flag(this, 'message')\n      , itemsCount;\n\n    flagMsg = flagMsg ? flagMsg + ': ' : '';\n\n    switch (_.type(val).toLowerCase()) {\n      case 'array':\n      case 'string':\n        itemsCount = val.length;\n        break;\n      case 'map':\n      case 'set':\n        itemsCount = val.size;\n        break;\n      case 'weakmap':\n      case 'weakset':\n        throw new AssertionError(\n          flagMsg + '.empty was passed a weak collection',\n          undefined,\n          ssfi\n        );\n      case 'function':\n        var msg = flagMsg + '.empty was passed a function ' + _.getName(val);\n        throw new AssertionError(msg.trim(), undefined, ssfi);\n      default:\n        if (val !== Object(val)) {\n          throw new AssertionError(\n            flagMsg + '.empty was passed non-string primitive ' + _.inspect(val),\n            undefined,\n            ssfi\n          );\n        }\n        itemsCount = Object.keys(val).length;\n    }\n\n    this.assert(\n        0 === itemsCount\n      , 'expected #{this} to be empty'\n      , 'expected #{this} not to be empty'\n    );\n  });\n\n  /**\n   * ### .arguments\n   *\n   * Asserts that the target is an `arguments` object.\n   *\n   *     function test () {\n   *       expect(arguments).to.be.arguments;\n   *     }\n   *\n   *     test();\n   *\n   * Add `.not` earlier in the chain to negate `.arguments`. However, it's often\n   * best to assert which type the target is expected to be, rather than\n   * asserting that its not an `arguments` object.\n   *\n   *     expect('foo').to.be.a('string'); // Recommended\n   *     expect('foo').to.not.be.arguments; // Not recommended\n   *\n   * A custom error message can be given as the second argument to `expect`.\n   *\n   *     expect({}, 'nooo why fail??').to.be.arguments;\n   *\n   * The alias `.Arguments` can be used interchangeably with `.arguments`.\n   *\n   * @name arguments\n   * @alias Arguments\n   * @namespace BDD\n   * @api public\n   */\n\n  function checkArguments () {\n    var obj = flag(this, 'object')\n      , type = _.type(obj);\n    this.assert(\n        'Arguments' === type\n      , 'expected #{this} to be arguments but got ' + type\n      , 'expected #{this} to not be arguments'\n    );\n  }\n\n  Assertion.addProperty('arguments', checkArguments);\n  Assertion.addProperty('Arguments', checkArguments);\n\n  /**\n   * ### .equal(val[, msg])\n   *\n   * Asserts that the target is strictly (`===`) equal to the given `val`.\n   *\n   *     expect(1).to.equal(1);\n   *     expect('foo').to.equal('foo');\n   * \n   * Add `.deep` earlier in the chain to use deep equality instead. See the\n   * `deep-eql` project page for info on the deep equality algorithm:\n   * https://github.com/chaijs/deep-eql.\n   *\n   *     // Target object deeply (but not strictly) equals `{a: 1}`\n   *     expect({a: 1}).to.deep.equal({a: 1});\n   *     expect({a: 1}).to.not.equal({a: 1});\n   *\n   *     // Target array deeply (but not strictly) equals `[1, 2]`\n   *     expect([1, 2]).to.deep.equal([1, 2]);\n   *     expect([1, 2]).to.not.equal([1, 2]);\n   *\n   * Add `.not` earlier in the chain to negate `.equal`. However, it's often\n   * best to assert that the target is equal to its expected value, rather than\n   * not equal to one of countless unexpected values.\n   *\n   *     expect(1).to.equal(1); // Recommended\n   *     expect(1).to.not.equal(2); // Not recommended\n   *\n   * `.equal` accepts an optional `msg` argument which is a custom error message\n   * to show when the assertion fails. The message can also be given as the\n   * second argument to `expect`.\n   *\n   *     expect(1).to.equal(2, 'nooo why fail??');\n   *     expect(1, 'nooo why fail??').to.equal(2);\n   *\n   * The aliases `.equals` and `eq` can be used interchangeably with `.equal`.\n   *\n   * @name equal\n   * @alias equals\n   * @alias eq\n   * @param {Mixed} val\n   * @param {String} msg _optional_\n   * @namespace BDD\n   * @api public\n   */\n\n  function assertEqual (val, msg) {\n    if (msg) flag(this, 'message', msg);\n    var obj = flag(this, 'object');\n    if (flag(this, 'deep')) {\n      return this.eql(val);\n    } else {\n      this.assert(\n          val === obj\n        , 'expected #{this} to equal #{exp}'\n        , 'expected #{this} to not equal #{exp}'\n        , val\n        , this._obj\n        , true\n      );\n    }\n  }\n\n  Assertion.addMethod('equal', assertEqual);\n  Assertion.addMethod('equals', assertEqual);\n  Assertion.addMethod('eq', assertEqual);\n\n  /**\n   * ### .eql(obj[, msg])\n   *\n   * Asserts that the target is deeply equal to the given `obj`. See the\n   * `deep-eql` project page for info on the deep equality algorithm:\n   * https://github.com/chaijs/deep-eql.\n   *\n   *     // Target object is deeply (but not strictly) equal to {a: 1}\n   *     expect({a: 1}).to.eql({a: 1}).but.not.equal({a: 1});\n   *\n   *     // Target array is deeply (but not strictly) equal to [1, 2]\n   *     expect([1, 2]).to.eql([1, 2]).but.not.equal([1, 2]);\n   *\n   * Add `.not` earlier in the chain to negate `.eql`. However, it's often best\n   * to assert that the target is deeply equal to its expected value, rather\n   * than not deeply equal to one of countless unexpected values.\n   *\n   *     expect({a: 1}).to.eql({a: 1}); // Recommended\n   *     expect({a: 1}).to.not.eql({b: 2}); // Not recommended\n   *\n   * `.eql` accepts an optional `msg` argument which is a custom error message\n   * to show when the assertion fails. The message can also be given as the\n   * second argument to `expect`.\n   *\n   *     expect({a: 1}).to.eql({b: 2}, 'nooo why fail??');\n   *     expect({a: 1}, 'nooo why fail??').to.eql({b: 2});\n   *\n   * The alias `.eqls` can be used interchangeably with `.eql`.\n   *\n   * The `.deep.equal` assertion is almost identical to `.eql` but with one\n   * difference: `.deep.equal` causes deep equality comparisons to also be used\n   * for any other assertions that follow in the chain.\n   *\n   * @name eql\n   * @alias eqls\n   * @param {Mixed} obj\n   * @param {String} msg _optional_\n   * @namespace BDD\n   * @api public\n   */\n\n  function assertEql(obj, msg) {\n    if (msg) flag(this, 'message', msg);\n    this.assert(\n        _.eql(obj, flag(this, 'object'))\n      , 'expected #{this} to deeply equal #{exp}'\n      , 'expected #{this} to not deeply equal #{exp}'\n      , obj\n      , this._obj\n      , true\n    );\n  }\n\n  Assertion.addMethod('eql', assertEql);\n  Assertion.addMethod('eqls', assertEql);\n\n  /**\n   * ### .above(n[, msg])\n   *\n   * Asserts that the target is a number or a date greater than the given number or date `n` respectively.\n   * However, it's often best to assert that the target is equal to its expected\n   * value.\n   *\n   *     expect(2).to.equal(2); // Recommended\n   *     expect(2).to.be.above(1); // Not recommended\n   *\n   * Add `.lengthOf` earlier in the chain to assert that the value of the\n   * target's `length` property is greater than the given number `n`.\n   *\n   *     expect('foo').to.have.lengthOf(3); // Recommended\n   *     expect('foo').to.have.lengthOf.above(2); // Not recommended\n   *\n   *     expect([1, 2, 3]).to.have.lengthOf(3); // Recommended\n   *     expect([1, 2, 3]).to.have.lengthOf.above(2); // Not recommended\n   *\n   * Add `.not` earlier in the chain to negate `.above`.\n   *\n   *     expect(2).to.equal(2); // Recommended\n   *     expect(1).to.not.be.above(2); // Not recommended\n   *\n   * `.above` accepts an optional `msg` argument which is a custom error message\n   * to show when the assertion fails. The message can also be given as the\n   * second argument to `expect`.\n   *\n   *     expect(1).to.be.above(2, 'nooo why fail??');\n   *     expect(1, 'nooo why fail??').to.be.above(2);\n   *\n   * The aliases `.gt` and `.greaterThan` can be used interchangeably with\n   * `.above`.\n   *\n   * @name above\n   * @alias gt\n   * @alias greaterThan\n   * @param {Number} n\n   * @param {String} msg _optional_\n   * @namespace BDD\n   * @api public\n   */\n\n  function assertAbove (n, msg) {\n    if (msg) flag(this, 'message', msg);\n    var obj = flag(this, 'object')\n      , doLength = flag(this, 'doLength')\n      , flagMsg = flag(this, 'message')\n      , msgPrefix = ((flagMsg) ? flagMsg + ': ' : '')\n      , ssfi = flag(this, 'ssfi')\n      , objType = _.type(obj).toLowerCase()\n      , nType = _.type(n).toLowerCase()\n      , shouldThrow = true;\n\n    if (doLength) {\n      new Assertion(obj, flagMsg, ssfi, true).to.have.property('length');\n    }\n    \n    if (!doLength && (objType === 'date' && nType !== 'date')) {\n      errorMessage = msgPrefix + 'the argument to above must be a date';\n    } else if (nType !== 'number' && (doLength || objType === 'number')) {\n      errorMessage = msgPrefix + 'the argument to above must be a number';\n    } else if (!doLength && (objType !== 'date' && objType !== 'number')) {\n      var printObj = (objType === 'string') ? \"'\" + obj + \"'\" : obj;\n      errorMessage = msgPrefix + 'expected ' + printObj + ' to be a number or a date';\n    } else {\n      shouldThrow = false;\n    }\n\n    if (shouldThrow) {\n      throw new AssertionError(errorMessage, undefined, ssfi);\n    }\n\n    if (doLength) {\n      var len = obj.length;\n      this.assert(\n          len > n\n        , 'expected #{this} to have a length above #{exp} but got #{act}'\n        , 'expected #{this} to not have a length above #{exp}'\n        , n\n        , len\n      );\n    } else {\n      this.assert(\n          obj > n\n        , 'expected #{this} to be above #{exp}'\n        , 'expected #{this} to be at most #{exp}'\n        , n\n      );\n    }\n  }\n\n  Assertion.addMethod('above', assertAbove);\n  Assertion.addMethod('gt', assertAbove);\n  Assertion.addMethod('greaterThan', assertAbove);\n\n  /**\n   * ### .least(n[, msg])\n   *\n   * Asserts that the target is a number or a date greater than or equal to the given\n   * number or date `n` respectively. However, it's often best to assert that the target is equal to\n   * its expected value.\n   *\n   *     expect(2).to.equal(2); // Recommended\n   *     expect(2).to.be.at.least(1); // Not recommended\n   *     expect(2).to.be.at.least(2); // Not recommended\n   *\n   * Add `.lengthOf` earlier in the chain to assert that the value of the\n   * target's `length` property is greater than or equal to the given number\n   * `n`.\n   *\n   *     expect('foo').to.have.lengthOf(3); // Recommended\n   *     expect('foo').to.have.lengthOf.at.least(2); // Not recommended\n   *\n   *     expect([1, 2, 3]).to.have.lengthOf(3); // Recommended\n   *     expect([1, 2, 3]).to.have.lengthOf.at.least(2); // Not recommended\n   *\n   * Add `.not` earlier in the chain to negate `.least`.\n   *\n   *     expect(1).to.equal(1); // Recommended\n   *     expect(1).to.not.be.at.least(2); // Not recommended\n   *\n   * `.least` accepts an optional `msg` argument which is a custom error message\n   * to show when the assertion fails. The message can also be given as the\n   * second argument to `expect`.\n   *\n   *     expect(1).to.be.at.least(2, 'nooo why fail??');\n   *     expect(1, 'nooo why fail??').to.be.at.least(2);\n   *\n   * The alias `.gte` can be used interchangeably with `.least`.\n   *\n   * @name least\n   * @alias gte\n   * @param {Number} n\n   * @param {String} msg _optional_\n   * @namespace BDD\n   * @api public\n   */\n\n  function assertLeast (n, msg) {\n    if (msg) flag(this, 'message', msg);\n    var obj = flag(this, 'object')\n      , doLength = flag(this, 'doLength')\n      , flagMsg = flag(this, 'message')\n      , msgPrefix = ((flagMsg) ? flagMsg + ': ' : '')\n      , ssfi = flag(this, 'ssfi')\n      , objType = _.type(obj).toLowerCase()\n      , nType = _.type(n).toLowerCase()\n      , shouldThrow = true;\n\n    if (doLength) {\n      new Assertion(obj, flagMsg, ssfi, true).to.have.property('length');\n    }\n\n    if (!doLength && (objType === 'date' && nType !== 'date')) {\n      errorMessage = msgPrefix + 'the argument to least must be a date';\n    } else if (nType !== 'number' && (doLength || objType === 'number')) {\n      errorMessage = msgPrefix + 'the argument to least must be a number';\n    } else if (!doLength && (objType !== 'date' && objType !== 'number')) {\n      var printObj = (objType === 'string') ? \"'\" + obj + \"'\" : obj;\n      errorMessage = msgPrefix + 'expected ' + printObj + ' to be a number or a date';\n    } else {\n      shouldThrow = false;\n    }\n\n    if (shouldThrow) {\n      throw new AssertionError(errorMessage, undefined, ssfi);\n    }\n\n    if (doLength) {\n      var len = obj.length;\n      this.assert(\n          len >= n\n        , 'expected #{this} to have a length at least #{exp} but got #{act}'\n        , 'expected #{this} to have a length below #{exp}'\n        , n\n        , len\n      );\n    } else {\n      this.assert(\n          obj >= n\n        , 'expected #{this} to be at least #{exp}'\n        , 'expected #{this} to be below #{exp}'\n        , n\n      );\n    }\n  }\n\n  Assertion.addMethod('least', assertLeast);\n  Assertion.addMethod('gte', assertLeast);\n\n  /**\n   * ### .below(n[, msg])\n   *\n   * Asserts that the target is a number or a date less than the given number or date `n` respectively.\n   * However, it's often best to assert that the target is equal to its expected\n   * value.\n   *\n   *     expect(1).to.equal(1); // Recommended\n   *     expect(1).to.be.below(2); // Not recommended\n   *\n   * Add `.lengthOf` earlier in the chain to assert that the value of the\n   * target's `length` property is less than the given number `n`.\n   *\n   *     expect('foo').to.have.lengthOf(3); // Recommended\n   *     expect('foo').to.have.lengthOf.below(4); // Not recommended\n   *\n   *     expect([1, 2, 3]).to.have.length(3); // Recommended\n   *     expect([1, 2, 3]).to.have.lengthOf.below(4); // Not recommended\n   *\n   * Add `.not` earlier in the chain to negate `.below`.\n   *\n   *     expect(2).to.equal(2); // Recommended\n   *     expect(2).to.not.be.below(1); // Not recommended\n   *\n   * `.below` accepts an optional `msg` argument which is a custom error message\n   * to show when the assertion fails. The message can also be given as the\n   * second argument to `expect`.\n   *\n   *     expect(2).to.be.below(1, 'nooo why fail??');\n   *     expect(2, 'nooo why fail??').to.be.below(1);\n   *\n   * The aliases `.lt` and `.lessThan` can be used interchangeably with\n   * `.below`.\n   *\n   * @name below\n   * @alias lt\n   * @alias lessThan\n   * @param {Number} n\n   * @param {String} msg _optional_\n   * @namespace BDD\n   * @api public\n   */\n\n  function assertBelow (n, msg) {\n    if (msg) flag(this, 'message', msg);\n    var obj = flag(this, 'object')\n      , doLength = flag(this, 'doLength')\n      , flagMsg = flag(this, 'message')\n      , msgPrefix = ((flagMsg) ? flagMsg + ': ' : '')\n      , ssfi = flag(this, 'ssfi')\n      , objType = _.type(obj).toLowerCase()\n      , nType = _.type(n).toLowerCase()\n      , shouldThrow = true;\n\n    if (doLength) {\n      new Assertion(obj, flagMsg, ssfi, true).to.have.property('length');\n    }\n\n    if (!doLength && (objType === 'date' && nType !== 'date')) {\n      errorMessage = msgPrefix + 'the argument to below must be a date';\n    } else if (nType !== 'number' && (doLength || objType === 'number')) {\n      errorMessage = msgPrefix + 'the argument to below must be a number';\n    } else if (!doLength && (objType !== 'date' && objType !== 'number')) {\n      var printObj = (objType === 'string') ? \"'\" + obj + \"'\" : obj;\n      errorMessage = msgPrefix + 'expected ' + printObj + ' to be a number or a date';\n    } else {\n      shouldThrow = false;\n    }\n\n    if (shouldThrow) {\n      throw new AssertionError(errorMessage, undefined, ssfi);\n    }\n\n    if (doLength) {\n      var len = obj.length;\n      this.assert(\n          len < n\n        , 'expected #{this} to have a length below #{exp} but got #{act}'\n        , 'expected #{this} to not have a length below #{exp}'\n        , n\n        , len\n      );\n    } else {\n      this.assert(\n          obj < n\n        , 'expected #{this} to be below #{exp}'\n        , 'expected #{this} to be at least #{exp}'\n        , n\n      );\n    }\n  }\n\n  Assertion.addMethod('below', assertBelow);\n  Assertion.addMethod('lt', assertBelow);\n  Assertion.addMethod('lessThan', assertBelow);\n\n  /**\n   * ### .most(n[, msg])\n   *\n   * Asserts that the target is a number or a date less than or equal to the given number\n   * or date `n` respectively. However, it's often best to assert that the target is equal to its\n   * expected value.\n   *\n   *     expect(1).to.equal(1); // Recommended\n   *     expect(1).to.be.at.most(2); // Not recommended\n   *     expect(1).to.be.at.most(1); // Not recommended\n   *\n   * Add `.lengthOf` earlier in the chain to assert that the value of the\n   * target's `length` property is less than or equal to the given number `n`.\n   *\n   *     expect('foo').to.have.lengthOf(3); // Recommended\n   *     expect('foo').to.have.lengthOf.at.most(4); // Not recommended\n   *\n   *     expect([1, 2, 3]).to.have.lengthOf(3); // Recommended\n   *     expect([1, 2, 3]).to.have.lengthOf.at.most(4); // Not recommended\n   *\n   * Add `.not` earlier in the chain to negate `.most`.\n   *\n   *     expect(2).to.equal(2); // Recommended\n   *     expect(2).to.not.be.at.most(1); // Not recommended\n   *\n   * `.most` accepts an optional `msg` argument which is a custom error message\n   * to show when the assertion fails. The message can also be given as the\n   * second argument to `expect`.\n   *\n   *     expect(2).to.be.at.most(1, 'nooo why fail??');\n   *     expect(2, 'nooo why fail??').to.be.at.most(1);\n   *\n   * The alias `.lte` can be used interchangeably with `.most`.\n   *\n   * @name most\n   * @alias lte\n   * @param {Number} n\n   * @param {String} msg _optional_\n   * @namespace BDD\n   * @api public\n   */\n\n  function assertMost (n, msg) {\n    if (msg) flag(this, 'message', msg);\n    var obj = flag(this, 'object')\n      , doLength = flag(this, 'doLength')\n      , flagMsg = flag(this, 'message')\n      , msgPrefix = ((flagMsg) ? flagMsg + ': ' : '')\n      , ssfi = flag(this, 'ssfi')\n      , objType = _.type(obj).toLowerCase()\n      , nType = _.type(n).toLowerCase()\n      , shouldThrow = true;\n\n    if (doLength) {\n      new Assertion(obj, flagMsg, ssfi, true).to.have.property('length');\n    }\n    \n    if (!doLength && (objType === 'date' && nType !== 'date')) {\n      errorMessage = msgPrefix + 'the argument to most must be a date';\n    } else if (nType !== 'number' && (doLength || objType === 'number')) {\n      errorMessage = msgPrefix + 'the argument to most must be a number';\n    } else if (!doLength && (objType !== 'date' && objType !== 'number')) {\n      var printObj = (objType === 'string') ? \"'\" + obj + \"'\" : obj;\n      errorMessage = msgPrefix + 'expected ' + printObj + ' to be a number or a date';\n    } else {\n      shouldThrow = false;\n    }\n\n    if (shouldThrow) {\n      throw new AssertionError(errorMessage, undefined, ssfi);\n    }\n\n    if (doLength) {\n      var len = obj.length;\n      this.assert(\n          len <= n\n        , 'expected #{this} to have a length at most #{exp} but got #{act}'\n        , 'expected #{this} to have a length above #{exp}'\n        , n\n        , len\n      );\n    } else {\n      this.assert(\n          obj <= n\n        , 'expected #{this} to be at most #{exp}'\n        , 'expected #{this} to be above #{exp}'\n        , n\n      );\n    }\n  }\n\n  Assertion.addMethod('most', assertMost);\n  Assertion.addMethod('lte', assertMost);\n\n  /**\n   * ### .within(start, finish[, msg])\n   *\n   * Asserts that the target is a number or a date greater than or equal to the given\n   * number or date `start`, and less than or equal to the given number or date `finish` respectively.\n   * However, it's often best to assert that the target is equal to its expected\n   * value.\n   *\n   *     expect(2).to.equal(2); // Recommended\n   *     expect(2).to.be.within(1, 3); // Not recommended\n   *     expect(2).to.be.within(2, 3); // Not recommended\n   *     expect(2).to.be.within(1, 2); // Not recommended\n   *\n   * Add `.lengthOf` earlier in the chain to assert that the value of the\n   * target's `length` property is greater than or equal to the given number\n   * `start`, and less than or equal to the given number `finish`.\n   *\n   *     expect('foo').to.have.lengthOf(3); // Recommended\n   *     expect('foo').to.have.lengthOf.within(2, 4); // Not recommended\n   *\n   *     expect([1, 2, 3]).to.have.lengthOf(3); // Recommended\n   *     expect([1, 2, 3]).to.have.lengthOf.within(2, 4); // Not recommended\n   *\n   * Add `.not` earlier in the chain to negate `.within`.\n   *\n   *     expect(1).to.equal(1); // Recommended\n   *     expect(1).to.not.be.within(2, 4); // Not recommended\n   *\n   * `.within` accepts an optional `msg` argument which is a custom error\n   * message to show when the assertion fails. The message can also be given as\n   * the second argument to `expect`.\n   *\n   *     expect(4).to.be.within(1, 3, 'nooo why fail??');\n   *     expect(4, 'nooo why fail??').to.be.within(1, 3);\n   *\n   * @name within\n   * @param {Number} start lower bound inclusive\n   * @param {Number} finish upper bound inclusive\n   * @param {String} msg _optional_\n   * @namespace BDD\n   * @api public\n   */\n\n  Assertion.addMethod('within', function (start, finish, msg) {\n    if (msg) flag(this, 'message', msg);\n    var obj = flag(this, 'object')\n      , doLength = flag(this, 'doLength')\n      , flagMsg = flag(this, 'message')\n      , msgPrefix = ((flagMsg) ? flagMsg + ': ' : '')\n      , ssfi = flag(this, 'ssfi')\n      , objType = _.type(obj).toLowerCase()\n      , startType = _.type(start).toLowerCase()\n      , finishType = _.type(finish).toLowerCase()\n      , shouldThrow = true\n      , range = (startType === 'date' && finishType === 'date')\n          ? start.toUTCString() + '..' + finish.toUTCString()\n          : start + '..' + finish;\n\n    if (doLength) {\n      new Assertion(obj, flagMsg, ssfi, true).to.have.property('length');\n    }\n\n    if (!doLength && (objType === 'date' && (startType !== 'date' || finishType !== 'date'))) {\n      errorMessage = msgPrefix + 'the arguments to within must be dates';\n    } else if ((startType !== 'number' || finishType !== 'number') && (doLength || objType === 'number')) {\n      errorMessage = msgPrefix + 'the arguments to within must be numbers';\n    } else if (!doLength && (objType !== 'date' && objType !== 'number')) {\n      var printObj = (objType === 'string') ? \"'\" + obj + \"'\" : obj;\n      errorMessage = msgPrefix + 'expected ' + printObj + ' to be a number or a date';\n    } else {\n      shouldThrow = false;\n    }\n\n    if (shouldThrow) {\n      throw new AssertionError(errorMessage, undefined, ssfi);\n    }\n\n    if (doLength) {\n      var len = obj.length;\n      this.assert(\n          len >= start && len <= finish\n        , 'expected #{this} to have a length within ' + range\n        , 'expected #{this} to not have a length within ' + range\n      );\n    } else {\n      this.assert(\n          obj >= start && obj <= finish\n        , 'expected #{this} to be within ' + range\n        , 'expected #{this} to not be within ' + range\n      );\n    }\n  });\n\n  /**\n   * ### .instanceof(constructor[, msg])\n   *\n   * Asserts that the target is an instance of the given `constructor`.\n   *\n   *     function Cat () { }\n   *\n   *     expect(new Cat()).to.be.an.instanceof(Cat);\n   *     expect([1, 2]).to.be.an.instanceof(Array);\n   *\n   * Add `.not` earlier in the chain to negate `.instanceof`.\n   *\n   *     expect({a: 1}).to.not.be.an.instanceof(Array);\n   *\n   * `.instanceof` accepts an optional `msg` argument which is a custom error\n   * message to show when the assertion fails. The message can also be given as\n   * the second argument to `expect`.\n   *\n   *     expect(1).to.be.an.instanceof(Array, 'nooo why fail??');\n   *     expect(1, 'nooo why fail??').to.be.an.instanceof(Array);\n   *\n   * Due to limitations in ES5, `.instanceof` may not always work as expected\n   * when using a transpiler such as Babel or TypeScript. In particular, it may\n   * produce unexpected results when subclassing built-in object such as\n   * `Array`, `Error`, and `Map`. See your transpiler's docs for details:\n   *\n   * - ([Babel](https://babeljs.io/docs/usage/caveats/#classes))\n   * - ([TypeScript](https://github.com/Microsoft/TypeScript/wiki/Breaking-Changes#extending-built-ins-like-error-array-and-map-may-no-longer-work))\n   *\n   * The alias `.instanceOf` can be used interchangeably with `.instanceof`.\n   *\n   * @name instanceof\n   * @param {Constructor} constructor\n   * @param {String} msg _optional_\n   * @alias instanceOf\n   * @namespace BDD\n   * @api public\n   */\n\n  function assertInstanceOf (constructor, msg) {\n    if (msg) flag(this, 'message', msg);\n\n    var target = flag(this, 'object')\n    var ssfi = flag(this, 'ssfi');\n    var flagMsg = flag(this, 'message');\n\n    try {\n      var isInstanceOf = target instanceof constructor;\n    } catch (err) {\n      if (err instanceof TypeError) {\n        flagMsg = flagMsg ? flagMsg + ': ' : '';\n        throw new AssertionError(\n          flagMsg + 'The instanceof assertion needs a constructor but '\n            + _.type(constructor) + ' was given.',\n          undefined,\n          ssfi\n        );\n      }\n      throw err;\n    }\n\n    var name = _.getName(constructor);\n    if (name === null) {\n      name = 'an unnamed constructor';\n    }\n\n    this.assert(\n        isInstanceOf\n      , 'expected #{this} to be an instance of ' + name\n      , 'expected #{this} to not be an instance of ' + name\n    );\n  };\n\n  Assertion.addMethod('instanceof', assertInstanceOf);\n  Assertion.addMethod('instanceOf', assertInstanceOf);\n\n  /**\n   * ### .property(name[, val[, msg]])\n   *\n   * Asserts that the target has a property with the given key `name`.\n   *\n   *     expect({a: 1}).to.have.property('a');\n   *\n   * When `val` is provided, `.property` also asserts that the property's value\n   * is equal to the given `val`.\n   *\n   *     expect({a: 1}).to.have.property('a', 1);\n   *\n   * By default, strict (`===`) equality is used. Add `.deep` earlier in the\n   * chain to use deep equality instead. See the `deep-eql` project page for\n   * info on the deep equality algorithm: https://github.com/chaijs/deep-eql.\n   *\n   *     // Target object deeply (but not strictly) has property `x: {a: 1}`\n   *     expect({x: {a: 1}}).to.have.deep.property('x', {a: 1});\n   *     expect({x: {a: 1}}).to.not.have.property('x', {a: 1});\n   *\n   * The target's enumerable and non-enumerable properties are always included\n   * in the search. By default, both own and inherited properties are included.\n   * Add `.own` earlier in the chain to exclude inherited properties from the\n   * search.\n   *\n   *     Object.prototype.b = 2;\n   *\n   *     expect({a: 1}).to.have.own.property('a');\n   *     expect({a: 1}).to.have.own.property('a', 1);\n   *     expect({a: 1}).to.have.property('b').but.not.own.property('b'); \n   *\n   * `.deep` and `.own` can be combined.\n   *\n   *     expect({x: {a: 1}}).to.have.deep.own.property('x', {a: 1});\n   *\n   * Add `.nested` earlier in the chain to enable dot- and bracket-notation when\n   * referencing nested properties.\n   *\n   *     expect({a: {b: ['x', 'y']}}).to.have.nested.property('a.b[1]');\n   *     expect({a: {b: ['x', 'y']}}).to.have.nested.property('a.b[1]', 'y');\n   *\n   * If `.` or `[]` are part of an actual property name, they can be escaped by\n   * adding two backslashes before them.\n   *\n   *     expect({'.a': {'[b]': 'x'}}).to.have.nested.property('\\\\.a.\\\\[b\\\\]');\n   *\n   * `.deep` and `.nested` can be combined.\n   *\n   *     expect({a: {b: [{c: 3}]}})\n   *       .to.have.deep.nested.property('a.b[0]', {c: 3});\n   *\n   * `.own` and `.nested` cannot be combined.\n   *\n   * Add `.not` earlier in the chain to negate `.property`.\n   *\n   *     expect({a: 1}).to.not.have.property('b');\n   * \n   * However, it's dangerous to negate `.property` when providing `val`. The\n   * problem is that it creates uncertain expectations by asserting that the\n   * target either doesn't have a property with the given key `name`, or that it\n   * does have a property with the given key `name` but its value isn't equal to\n   * the given `val`. It's often best to identify the exact output that's\n   * expected, and then write an assertion that only accepts that exact output.\n   *\n   * When the target isn't expected to have a property with the given key\n   * `name`, it's often best to assert exactly that.\n   *\n   *     expect({b: 2}).to.not.have.property('a'); // Recommended\n   *     expect({b: 2}).to.not.have.property('a', 1); // Not recommended\n   *\n   * When the target is expected to have a property with the given key `name`,\n   * it's often best to assert that the property has its expected value, rather\n   * than asserting that it doesn't have one of many unexpected values.\n   *\n   *     expect({a: 3}).to.have.property('a', 3); // Recommended\n   *     expect({a: 3}).to.not.have.property('a', 1); // Not recommended\n   *\n   * `.property` changes the target of any assertions that follow in the chain\n   * to be the value of the property from the original target object.\n   *\n   *     expect({a: 1}).to.have.property('a').that.is.a('number');\n   *\n   * `.property` accepts an optional `msg` argument which is a custom error\n   * message to show when the assertion fails. The message can also be given as\n   * the second argument to `expect`. When not providing `val`, only use the\n   * second form.\n   *\n   *     // Recommended\n   *     expect({a: 1}).to.have.property('a', 2, 'nooo why fail??');\n   *     expect({a: 1}, 'nooo why fail??').to.have.property('a', 2);\n   *     expect({a: 1}, 'nooo why fail??').to.have.property('b');\n   *\n   *     // Not recommended\n   *     expect({a: 1}).to.have.property('b', undefined, 'nooo why fail??');\n   * \n   * The above assertion isn't the same thing as not providing `val`. Instead,\n   * it's asserting that the target object has a `b` property that's equal to\n   * `undefined`.\n   *\n   * The assertions `.ownProperty` and `.haveOwnProperty` can be used\n   * interchangeably with `.own.property`.\n   *\n   * @name property\n   * @param {String} name\n   * @param {Mixed} val (optional)\n   * @param {String} msg _optional_\n   * @returns value of property for chaining\n   * @namespace BDD\n   * @api public\n   */\n\n  function assertProperty (name, val, msg) {\n    if (msg) flag(this, 'message', msg);\n\n    var isNested = flag(this, 'nested')\n      , isOwn = flag(this, 'own')\n      , flagMsg = flag(this, 'message')\n      , obj = flag(this, 'object')\n      , ssfi = flag(this, 'ssfi');\n\n    if (isNested && isOwn) {\n      flagMsg = flagMsg ? flagMsg + ': ' : '';\n      throw new AssertionError(\n        flagMsg + 'The \"nested\" and \"own\" flags cannot be combined.',\n        undefined,\n        ssfi\n      );\n    }\n\n    if (obj === null || obj === undefined) {\n      flagMsg = flagMsg ? flagMsg + ': ' : '';\n      throw new AssertionError(\n        flagMsg + 'Target cannot be null or undefined.',\n        undefined,\n        ssfi\n      );\n    }\n\n    var isDeep = flag(this, 'deep')\n      , negate = flag(this, 'negate')\n      , pathInfo = isNested ? _.getPathInfo(obj, name) : null\n      , value = isNested ? pathInfo.value : obj[name];\n\n    var descriptor = '';\n    if (isDeep) descriptor += 'deep ';\n    if (isOwn) descriptor += 'own ';\n    if (isNested) descriptor += 'nested ';\n    descriptor += 'property ';\n\n    var hasProperty;\n    if (isOwn) hasProperty = Object.prototype.hasOwnProperty.call(obj, name);\n    else if (isNested) hasProperty = pathInfo.exists;\n    else hasProperty = _.hasProperty(obj, name);\n\n    // When performing a negated assertion for both name and val, merely having\n    // a property with the given name isn't enough to cause the assertion to\n    // fail. It must both have a property with the given name, and the value of\n    // that property must equal the given val. Therefore, skip this assertion in\n    // favor of the next.\n    if (!negate || arguments.length === 1) {\n      this.assert(\n          hasProperty\n        , 'expected #{this} to have ' + descriptor + _.inspect(name)\n        , 'expected #{this} to not have ' + descriptor + _.inspect(name));\n    }\n\n    if (arguments.length > 1) {\n      this.assert(\n          hasProperty && (isDeep ? _.eql(val, value) : val === value)\n        , 'expected #{this} to have ' + descriptor + _.inspect(name) + ' of #{exp}, but got #{act}'\n        , 'expected #{this} to not have ' + descriptor + _.inspect(name) + ' of #{act}'\n        , val\n        , value\n      );\n    }\n\n    flag(this, 'object', value);\n  }\n\n  Assertion.addMethod('property', assertProperty);\n\n  function assertOwnProperty (name, value, msg) {\n    flag(this, 'own', true);\n    assertProperty.apply(this, arguments);\n  }\n\n  Assertion.addMethod('ownProperty', assertOwnProperty);\n  Assertion.addMethod('haveOwnProperty', assertOwnProperty);\n\n  /**\n   * ### .ownPropertyDescriptor(name[, descriptor[, msg]])\n   *\n   * Asserts that the target has its own property descriptor with the given key\n   * `name`. Enumerable and non-enumerable properties are included in the\n   * search.\n   *\n   *     expect({a: 1}).to.have.ownPropertyDescriptor('a');\n   *\n   * When `descriptor` is provided, `.ownPropertyDescriptor` also asserts that\n   * the property's descriptor is deeply equal to the given `descriptor`. See\n   * the `deep-eql` project page for info on the deep equality algorithm:\n   * https://github.com/chaijs/deep-eql.\n   *\n   *     expect({a: 1}).to.have.ownPropertyDescriptor('a', {\n   *       configurable: true,\n   *       enumerable: true,\n   *       writable: true,\n   *       value: 1,\n   *     });\n   *\n   * Add `.not` earlier in the chain to negate `.ownPropertyDescriptor`.\n   *\n   *     expect({a: 1}).to.not.have.ownPropertyDescriptor('b');\n   * \n   * However, it's dangerous to negate `.ownPropertyDescriptor` when providing\n   * a `descriptor`. The problem is that it creates uncertain expectations by\n   * asserting that the target either doesn't have a property descriptor with\n   * the given key `name`, or that it does have a property descriptor with the\n   * given key `name` but its not deeply equal to the given `descriptor`. It's\n   * often best to identify the exact output that's expected, and then write an\n   * assertion that only accepts that exact output.\n   *\n   * When the target isn't expected to have a property descriptor with the given\n   * key `name`, it's often best to assert exactly that.\n   *\n   *     // Recommended\n   *     expect({b: 2}).to.not.have.ownPropertyDescriptor('a');\n   *\n   *     // Not recommended\n   *     expect({b: 2}).to.not.have.ownPropertyDescriptor('a', {\n   *       configurable: true,\n   *       enumerable: true,\n   *       writable: true,\n   *       value: 1,\n   *     });\n   *\n   * When the target is expected to have a property descriptor with the given\n   * key `name`, it's often best to assert that the property has its expected\n   * descriptor, rather than asserting that it doesn't have one of many\n   * unexpected descriptors.\n   *\n   *     // Recommended\n   *     expect({a: 3}).to.have.ownPropertyDescriptor('a', {\n   *       configurable: true,\n   *       enumerable: true,\n   *       writable: true,\n   *       value: 3,\n   *     });\n   *\n   *     // Not recommended\n   *     expect({a: 3}).to.not.have.ownPropertyDescriptor('a', {\n   *       configurable: true,\n   *       enumerable: true,\n   *       writable: true,\n   *       value: 1,\n   *     });\n   *\n   * `.ownPropertyDescriptor` changes the target of any assertions that follow\n   * in the chain to be the value of the property descriptor from the original\n   * target object.\n   *\n   *     expect({a: 1}).to.have.ownPropertyDescriptor('a')\n   *       .that.has.property('enumerable', true);\n   *\n   * `.ownPropertyDescriptor` accepts an optional `msg` argument which is a\n   * custom error message to show when the assertion fails. The message can also\n   * be given as the second argument to `expect`. When not providing\n   * `descriptor`, only use the second form.\n   *\n   *     // Recommended\n   *     expect({a: 1}).to.have.ownPropertyDescriptor('a', {\n   *       configurable: true,\n   *       enumerable: true,\n   *       writable: true,\n   *       value: 2,\n   *     }, 'nooo why fail??');\n   *\n   *     // Recommended\n   *     expect({a: 1}, 'nooo why fail??').to.have.ownPropertyDescriptor('a', {\n   *       configurable: true,\n   *       enumerable: true,\n   *       writable: true,\n   *       value: 2,\n   *     });\n   * \n   *     // Recommended\n   *     expect({a: 1}, 'nooo why fail??').to.have.ownPropertyDescriptor('b');\n   *\n   *     // Not recommended\n   *     expect({a: 1})\n   *       .to.have.ownPropertyDescriptor('b', undefined, 'nooo why fail??');\n   *\n   * The above assertion isn't the same thing as not providing `descriptor`.\n   * Instead, it's asserting that the target object has a `b` property\n   * descriptor that's deeply equal to `undefined`.\n   *\n   * The alias `.haveOwnPropertyDescriptor` can be used interchangeably with\n   * `.ownPropertyDescriptor`.\n   *\n   * @name ownPropertyDescriptor\n   * @alias haveOwnPropertyDescriptor\n   * @param {String} name\n   * @param {Object} descriptor _optional_\n   * @param {String} msg _optional_\n   * @namespace BDD\n   * @api public\n   */\n\n  function assertOwnPropertyDescriptor (name, descriptor, msg) {\n    if (typeof descriptor === 'string') {\n      msg = descriptor;\n      descriptor = null;\n    }\n    if (msg) flag(this, 'message', msg);\n    var obj = flag(this, 'object');\n    var actualDescriptor = Object.getOwnPropertyDescriptor(Object(obj), name);\n    if (actualDescriptor && descriptor) {\n      this.assert(\n          _.eql(descriptor, actualDescriptor)\n        , 'expected the own property descriptor for ' + _.inspect(name) + ' on #{this} to match ' + _.inspect(descriptor) + ', got ' + _.inspect(actualDescriptor)\n        , 'expected the own property descriptor for ' + _.inspect(name) + ' on #{this} to not match ' + _.inspect(descriptor)\n        , descriptor\n        , actualDescriptor\n        , true\n      );\n    } else {\n      this.assert(\n          actualDescriptor\n        , 'expected #{this} to have an own property descriptor for ' + _.inspect(name)\n        , 'expected #{this} to not have an own property descriptor for ' + _.inspect(name)\n      );\n    }\n    flag(this, 'object', actualDescriptor);\n  }\n\n  Assertion.addMethod('ownPropertyDescriptor', assertOwnPropertyDescriptor);\n  Assertion.addMethod('haveOwnPropertyDescriptor', assertOwnPropertyDescriptor);\n\n  /**\n   * ### .lengthOf(n[, msg])\n   *\n   * Asserts that the target's `length` property is equal to the given number\n   * `n`.\n   *\n   *     expect([1, 2, 3]).to.have.lengthOf(3);\n   *     expect('foo').to.have.lengthOf(3);\n   *\n   * Add `.not` earlier in the chain to negate `.lengthOf`. However, it's often\n   * best to assert that the target's `length` property is equal to its expected\n   * value, rather than not equal to one of many unexpected values.\n   *\n   *     expect('foo').to.have.lengthOf(3); // Recommended\n   *     expect('foo').to.not.have.lengthOf(4); // Not recommended\n   *\n   * `.lengthOf` accepts an optional `msg` argument which is a custom error\n   * message to show when the assertion fails. The message can also be given as\n   * the second argument to `expect`.\n   *\n   *     expect([1, 2, 3]).to.have.lengthOf(2, 'nooo why fail??');\n   *     expect([1, 2, 3], 'nooo why fail??').to.have.lengthOf(2);\n   *\n   * `.lengthOf` can also be used as a language chain, causing all `.above`,\n   * `.below`, `.least`, `.most`, and `.within` assertions that follow in the\n   * chain to use the target's `length` property as the target. However, it's\n   * often best to assert that the target's `length` property is equal to its\n   * expected length, rather than asserting that its `length` property falls\n   * within some range of values.\n   *\n   *     // Recommended\n   *     expect([1, 2, 3]).to.have.lengthOf(3);\n   *\n   *     // Not recommended\n   *     expect([1, 2, 3]).to.have.lengthOf.above(2);\n   *     expect([1, 2, 3]).to.have.lengthOf.below(4);\n   *     expect([1, 2, 3]).to.have.lengthOf.at.least(3);\n   *     expect([1, 2, 3]).to.have.lengthOf.at.most(3);\n   *     expect([1, 2, 3]).to.have.lengthOf.within(2,4);\n   *\n   * Due to a compatibility issue, the alias `.length` can't be chained directly\n   * off of an uninvoked method such as `.a`. Therefore, `.length` can't be used\n   * interchangeably with `.lengthOf` in every situation. It's recommended to\n   * always use `.lengthOf` instead of `.length`.\n   *\n   *     expect([1, 2, 3]).to.have.a.length(3); // incompatible; throws error\n   *     expect([1, 2, 3]).to.have.a.lengthOf(3);  // passes as expected\n   *\n   * @name lengthOf\n   * @alias length\n   * @param {Number} n\n   * @param {String} msg _optional_\n   * @namespace BDD\n   * @api public\n   */\n\n  function assertLengthChain () {\n    flag(this, 'doLength', true);\n  }\n\n  function assertLength (n, msg) {\n    if (msg) flag(this, 'message', msg);\n    var obj = flag(this, 'object')\n      , flagMsg = flag(this, 'message')\n      , ssfi = flag(this, 'ssfi');\n    new Assertion(obj, flagMsg, ssfi, true).to.have.property('length');\n    var len = obj.length;\n\n    this.assert(\n        len == n\n      , 'expected #{this} to have a length of #{exp} but got #{act}'\n      , 'expected #{this} to not have a length of #{act}'\n      , n\n      , len\n    );\n  }\n\n  Assertion.addChainableMethod('length', assertLength, assertLengthChain);\n  Assertion.addChainableMethod('lengthOf', assertLength, assertLengthChain);\n\n  /**\n   * ### .match(re[, msg])\n   *\n   * Asserts that the target matches the given regular expression `re`.\n   *\n   *     expect('foobar').to.match(/^foo/);\n   *\n   * Add `.not` earlier in the chain to negate `.match`.\n   *\n   *     expect('foobar').to.not.match(/taco/);\n   *\n   * `.match` accepts an optional `msg` argument which is a custom error message\n   * to show when the assertion fails. The message can also be given as the\n   * second argument to `expect`.\n   *\n   *     expect('foobar').to.match(/taco/, 'nooo why fail??');\n   *     expect('foobar', 'nooo why fail??').to.match(/taco/);\n   *\n   * The alias `.matches` can be used interchangeably with `.match`.\n   *\n   * @name match\n   * @alias matches\n   * @param {RegExp} re\n   * @param {String} msg _optional_\n   * @namespace BDD\n   * @api public\n   */\n  function assertMatch(re, msg) {\n    if (msg) flag(this, 'message', msg);\n    var obj = flag(this, 'object');\n    this.assert(\n        re.exec(obj)\n      , 'expected #{this} to match ' + re\n      , 'expected #{this} not to match ' + re\n    );\n  }\n\n  Assertion.addMethod('match', assertMatch);\n  Assertion.addMethod('matches', assertMatch);\n\n  /**\n   * ### .string(str[, msg])\n   *\n   * Asserts that the target string contains the given substring `str`.\n   *\n   *     expect('foobar').to.have.string('bar');\n   *\n   * Add `.not` earlier in the chain to negate `.string`.\n   *\n   *     expect('foobar').to.not.have.string('taco');\n   *\n   * `.string` accepts an optional `msg` argument which is a custom error\n   * message to show when the assertion fails. The message can also be given as\n   * the second argument to `expect`.\n   *\n   *     expect('foobar').to.have.string(/taco/, 'nooo why fail??');\n   *     expect('foobar', 'nooo why fail??').to.have.string(/taco/);\n   *\n   * @name string\n   * @param {String} str\n   * @param {String} msg _optional_\n   * @namespace BDD\n   * @api public\n   */\n\n  Assertion.addMethod('string', function (str, msg) {\n    if (msg) flag(this, 'message', msg);\n    var obj = flag(this, 'object')\n      , flagMsg = flag(this, 'message')\n      , ssfi = flag(this, 'ssfi');\n    new Assertion(obj, flagMsg, ssfi, true).is.a('string');\n\n    this.assert(\n        ~obj.indexOf(str)\n      , 'expected #{this} to contain ' + _.inspect(str)\n      , 'expected #{this} to not contain ' + _.inspect(str)\n    );\n  });\n\n  /**\n   * ### .keys(key1[, key2[, ...]])\n   *\n   * Asserts that the target object, array, map, or set has the given keys. Only\n   * the target's own inherited properties are included in the search. \n   *\n   * When the target is an object or array, keys can be provided as one or more\n   * string arguments, a single array argument, or a single object argument. In\n   * the latter case, only the keys in the given object matter; the values are\n   * ignored.\n   *\n   *     expect({a: 1, b: 2}).to.have.all.keys('a', 'b');\n   *     expect(['x', 'y']).to.have.all.keys(0, 1);\n   *\n   *     expect({a: 1, b: 2}).to.have.all.keys(['a', 'b']);\n   *     expect(['x', 'y']).to.have.all.keys([0, 1]);\n   *\n   *     expect({a: 1, b: 2}).to.have.all.keys({a: 4, b: 5}); // ignore 4 and 5\n   *     expect(['x', 'y']).to.have.all.keys({0: 4, 1: 5}); // ignore 4 and 5\n   *\n   * When the target is a map or set, each key must be provided as a separate\n   * argument.\n   *\n   *     expect(new Map([['a', 1], ['b', 2]])).to.have.all.keys('a', 'b');\n   *     expect(new Set(['a', 'b'])).to.have.all.keys('a', 'b');\n   *\n   * Because `.keys` does different things based on the target's type, it's\n   * important to check the target's type before using `.keys`. See the `.a` doc\n   * for info on testing a target's type.\n   *\n   *     expect({a: 1, b: 2}).to.be.an('object').that.has.all.keys('a', 'b');\n   *\n   * By default, strict (`===`) equality is used to compare keys of maps and\n   * sets. Add `.deep` earlier in the chain to use deep equality instead. See\n   * the `deep-eql` project page for info on the deep equality algorithm:\n   * https://github.com/chaijs/deep-eql.\n   *\n   *     // Target set deeply (but not strictly) has key `{a: 1}`\n   *     expect(new Set([{a: 1}])).to.have.all.deep.keys([{a: 1}]);\n   *     expect(new Set([{a: 1}])).to.not.have.all.keys([{a: 1}]);\n   *\n   * By default, the target must have all of the given keys and no more. Add\n   * `.any` earlier in the chain to only require that the target have at least\n   * one of the given keys. Also, add `.not` earlier in the chain to negate\n   * `.keys`. It's often best to add `.any` when negating `.keys`, and to use\n   * `.all` when asserting `.keys` without negation.\n   *\n   * When negating `.keys`, `.any` is preferred because `.not.any.keys` asserts\n   * exactly what's expected of the output, whereas `.not.all.keys` creates\n   * uncertain expectations.\n   *\n   *     // Recommended; asserts that target doesn't have any of the given keys\n   *     expect({a: 1, b: 2}).to.not.have.any.keys('c', 'd');\n   *\n   *     // Not recommended; asserts that target doesn't have all of the given\n   *     // keys but may or may not have some of them\n   *     expect({a: 1, b: 2}).to.not.have.all.keys('c', 'd');\n   *\n   * When asserting `.keys` without negation, `.all` is preferred because\n   * `.all.keys` asserts exactly what's expected of the output, whereas\n   * `.any.keys` creates uncertain expectations.\n   *\n   *     // Recommended; asserts that target has all the given keys\n   *     expect({a: 1, b: 2}).to.have.all.keys('a', 'b');\n   *\n   *     // Not recommended; asserts that target has at least one of the given\n   *     // keys but may or may not have more of them\n   *     expect({a: 1, b: 2}).to.have.any.keys('a', 'b');\n   *\n   * Note that `.all` is used by default when neither `.all` nor `.any` appear\n   * earlier in the chain. However, it's often best to add `.all` anyway because\n   * it improves readability.\n   *\n   *     // Both assertions are identical\n   *     expect({a: 1, b: 2}).to.have.all.keys('a', 'b'); // Recommended\n   *     expect({a: 1, b: 2}).to.have.keys('a', 'b'); // Not recommended\n   *\n   * Add `.include` earlier in the chain to require that the target's keys be a\n   * superset of the expected keys, rather than identical sets.\n   *\n   *     // Target object's keys are a superset of ['a', 'b'] but not identical\n   *     expect({a: 1, b: 2, c: 3}).to.include.all.keys('a', 'b');\n   *     expect({a: 1, b: 2, c: 3}).to.not.have.all.keys('a', 'b');\n   *\n   * However, if `.any` and `.include` are combined, only the `.any` takes\n   * effect. The `.include` is ignored in this case.\n   *\n   *     // Both assertions are identical\n   *     expect({a: 1}).to.have.any.keys('a', 'b');\n   *     expect({a: 1}).to.include.any.keys('a', 'b');\n   *\n   * A custom error message can be given as the second argument to `expect`.\n   *\n   *     expect({a: 1}, 'nooo why fail??').to.have.key('b');\n   *\n   * The alias `.key` can be used interchangeably with `.keys`.\n   *\n   * @name keys\n   * @alias key\n   * @param {...String|Array|Object} keys\n   * @namespace BDD\n   * @api public\n   */\n\n  function assertKeys (keys) {\n    var obj = flag(this, 'object')\n      , objType = _.type(obj)\n      , keysType = _.type(keys)\n      , ssfi = flag(this, 'ssfi')\n      , isDeep = flag(this, 'deep')\n      , str\n      , deepStr = ''\n      , ok = true\n      , flagMsg = flag(this, 'message');\n\n    flagMsg = flagMsg ? flagMsg + ': ' : '';\n    var mixedArgsMsg = flagMsg + 'when testing keys against an object or an array you must give a single Array|Object|String argument or multiple String arguments';\n\n    if (objType === 'Map' || objType === 'Set') {\n      deepStr = isDeep ? 'deeply ' : '';\n      actual = [];\n\n      // Map and Set '.keys' aren't supported in IE 11. Therefore, use .forEach.\n      obj.forEach(function (val, key) { actual.push(key) });\n\n      if (keysType !== 'Array') {\n        keys = Array.prototype.slice.call(arguments);\n      }\n\n    } else {\n      actual = _.getOwnEnumerableProperties(obj);\n\n      switch (keysType) {\n        case 'Array':\n          if (arguments.length > 1) {\n            throw new AssertionError(mixedArgsMsg, undefined, ssfi);\n          }\n          break;\n        case 'Object':\n          if (arguments.length > 1) {\n            throw new AssertionError(mixedArgsMsg, undefined, ssfi);\n          }\n          keys = Object.keys(keys);\n          break;\n        default:\n          keys = Array.prototype.slice.call(arguments);\n      }\n\n      // Only stringify non-Symbols because Symbols would become \"Symbol()\"\n      keys = keys.map(function (val) {\n        return typeof val === 'symbol' ? val : String(val);\n      });\n    }\n\n    if (!keys.length) {\n      throw new AssertionError(flagMsg + 'keys required', undefined, ssfi);\n    }\n\n    var len = keys.length\n      , any = flag(this, 'any')\n      , all = flag(this, 'all')\n      , expected = keys\n      , actual;\n\n    if (!any && !all) {\n      all = true;\n    }\n\n    // Has any\n    if (any) {\n      ok = expected.some(function(expectedKey) {\n        return actual.some(function(actualKey) {\n          if (isDeep) {\n            return _.eql(expectedKey, actualKey);\n          } else {\n            return expectedKey === actualKey;\n          }\n        });\n      });\n    }\n\n    // Has all\n    if (all) {\n      ok = expected.every(function(expectedKey) {\n        return actual.some(function(actualKey) {\n          if (isDeep) {\n            return _.eql(expectedKey, actualKey);\n          } else {\n            return expectedKey === actualKey;\n          }\n        });\n      });\n\n      if (!flag(this, 'contains')) {\n        ok = ok && keys.length == actual.length;\n      }\n    }\n\n    // Key string\n    if (len > 1) {\n      keys = keys.map(function(key) {\n        return _.inspect(key);\n      });\n      var last = keys.pop();\n      if (all) {\n        str = keys.join(', ') + ', and ' + last;\n      }\n      if (any) {\n        str = keys.join(', ') + ', or ' + last;\n      }\n    } else {\n      str = _.inspect(keys[0]);\n    }\n\n    // Form\n    str = (len > 1 ? 'keys ' : 'key ') + str;\n\n    // Have / include\n    str = (flag(this, 'contains') ? 'contain ' : 'have ') + str;\n\n    // Assertion\n    this.assert(\n        ok\n      , 'expected #{this} to ' + deepStr + str\n      , 'expected #{this} to not ' + deepStr + str\n      , expected.slice(0).sort(_.compareByInspect)\n      , actual.sort(_.compareByInspect)\n      , true\n    );\n  }\n\n  Assertion.addMethod('keys', assertKeys);\n  Assertion.addMethod('key', assertKeys);\n\n  /**\n   * ### .throw([errorLike], [errMsgMatcher], [msg])\n   *\n   * When no arguments are provided, `.throw` invokes the target function and\n   * asserts that an error is thrown.\n   * \n   *     var badFn = function () { throw new TypeError('Illegal salmon!'); };\n   *\n   *     expect(badFn).to.throw();\n   *\n   * When one argument is provided, and it's an error constructor, `.throw`\n   * invokes the target function and asserts that an error is thrown that's an\n   * instance of that error constructor.\n   *\n   *     var badFn = function () { throw new TypeError('Illegal salmon!'); };\n   *\n   *     expect(badFn).to.throw(TypeError);\n   *\n   * When one argument is provided, and it's an error instance, `.throw` invokes\n   * the target function and asserts that an error is thrown that's strictly\n   * (`===`) equal to that error instance.\n   *\n   *     var err = new TypeError('Illegal salmon!');\n   *     var badFn = function () { throw err; };\n   *\n   *     expect(badFn).to.throw(err);\n   *\n   * When one argument is provided, and it's a string, `.throw` invokes the\n   * target function and asserts that an error is thrown with a message that\n   * contains that string.\n   *\n   *     var badFn = function () { throw new TypeError('Illegal salmon!'); };\n   *\n   *     expect(badFn).to.throw('salmon');\n   *\n   * When one argument is provided, and it's a regular expression, `.throw`\n   * invokes the target function and asserts that an error is thrown with a\n   * message that matches that regular expression.\n   *\n   *     var badFn = function () { throw new TypeError('Illegal salmon!'); };\n   *\n   *     expect(badFn).to.throw(/salmon/);\n   *\n   * When two arguments are provided, and the first is an error instance or\n   * constructor, and the second is a string or regular expression, `.throw`\n   * invokes the function and asserts that an error is thrown that fulfills both\n   * conditions as described above.\n   *\n   *     var err = new TypeError('Illegal salmon!');\n   *     var badFn = function () { throw err; };\n   *\n   *     expect(badFn).to.throw(TypeError, 'salmon');\n   *     expect(badFn).to.throw(TypeError, /salmon/);\n   *     expect(badFn).to.throw(err, 'salmon');\n   *     expect(badFn).to.throw(err, /salmon/);\n   *\n   * Add `.not` earlier in the chain to negate `.throw`.\n   *     \n   *     var goodFn = function () {};\n   *\n   *     expect(goodFn).to.not.throw();\n   * \n   * However, it's dangerous to negate `.throw` when providing any arguments.\n   * The problem is that it creates uncertain expectations by asserting that the\n   * target either doesn't throw an error, or that it throws an error but of a\n   * different type than the given type, or that it throws an error of the given\n   * type but with a message that doesn't include the given string. It's often\n   * best to identify the exact output that's expected, and then write an\n   * assertion that only accepts that exact output.\n   *\n   * When the target isn't expected to throw an error, it's often best to assert\n   * exactly that.\n   *\n   *     var goodFn = function () {};\n   *\n   *     expect(goodFn).to.not.throw(); // Recommended\n   *     expect(goodFn).to.not.throw(ReferenceError, 'x'); // Not recommended\n   *\n   * When the target is expected to throw an error, it's often best to assert\n   * that the error is of its expected type, and has a message that includes an\n   * expected string, rather than asserting that it doesn't have one of many\n   * unexpected types, and doesn't have a message that includes some string.\n   *\n   *     var badFn = function () { throw new TypeError('Illegal salmon!'); };\n   *\n   *     expect(badFn).to.throw(TypeError, 'salmon'); // Recommended\n   *     expect(badFn).to.not.throw(ReferenceError, 'x'); // Not recommended\n   *\n   * `.throw` changes the target of any assertions that follow in the chain to\n   * be the error object that's thrown.\n   *\n   *     var err = new TypeError('Illegal salmon!');\n   *     err.code = 42;\n   *     var badFn = function () { throw err; };\n   *\n   *     expect(badFn).to.throw(TypeError).with.property('code', 42);\n   *\n   * `.throw` accepts an optional `msg` argument which is a custom error message\n   * to show when the assertion fails. The message can also be given as the\n   * second argument to `expect`. When not providing two arguments, always use\n   * the second form.\n   *\n   *     var goodFn = function () {};\n   *\n   *     expect(goodFn).to.throw(TypeError, 'x', 'nooo why fail??');\n   *     expect(goodFn, 'nooo why fail??').to.throw();\n   *\n   * Due to limitations in ES5, `.throw` may not always work as expected when\n   * using a transpiler such as Babel or TypeScript. In particular, it may\n   * produce unexpected results when subclassing the built-in `Error` object and\n   * then passing the subclassed constructor to `.throw`. See your transpiler's\n   * docs for details:\n   *\n   * - ([Babel](https://babeljs.io/docs/usage/caveats/#classes))\n   * - ([TypeScript](https://github.com/Microsoft/TypeScript/wiki/Breaking-Changes#extending-built-ins-like-error-array-and-map-may-no-longer-work))\n   *\n   * Beware of some common mistakes when using the `throw` assertion. One common\n   * mistake is to accidentally invoke the function yourself instead of letting\n   * the `throw` assertion invoke the function for you. For example, when\n   * testing if a function named `fn` throws, provide `fn` instead of `fn()` as\n   * the target for the assertion.\n   *\n   *     expect(fn).to.throw();     // Good! Tests `fn` as desired\n   *     expect(fn()).to.throw();   // Bad! Tests result of `fn()`, not `fn`\n   *\n   * If you need to assert that your function `fn` throws when passed certain\n   * arguments, then wrap a call to `fn` inside of another function.\n   *\n   *     expect(function () { fn(42); }).to.throw();  // Function expression\n   *     expect(() => fn(42)).to.throw();             // ES6 arrow function\n   *\n   * Another common mistake is to provide an object method (or any stand-alone\n   * function that relies on `this`) as the target of the assertion. Doing so is\n   * problematic because the `this` context will be lost when the function is\n   * invoked by `.throw`; there's no way for it to know what `this` is supposed\n   * to be. There are two ways around this problem. One solution is to wrap the\n   * method or function call inside of another function. Another solution is to\n   * use `bind`.\n   *\n   *     expect(function () { cat.meow(); }).to.throw();  // Function expression\n   *     expect(() => cat.meow()).to.throw();             // ES6 arrow function\n   *     expect(cat.meow.bind(cat)).to.throw();           // Bind\n   *\n   * Finally, it's worth mentioning that it's a best practice in JavaScript to\n   * only throw `Error` and derivatives of `Error` such as `ReferenceError`,\n   * `TypeError`, and user-defined objects that extend `Error`. No other type of\n   * value will generate a stack trace when initialized. With that said, the\n   * `throw` assertion does technically support any type of value being thrown,\n   * not just `Error` and its derivatives.\n   *\n   * The aliases `.throws` and `.Throw` can be used interchangeably with\n   * `.throw`.\n   *\n   * @name throw\n   * @alias throws\n   * @alias Throw\n   * @param {Error|ErrorConstructor} errorLike\n   * @param {String|RegExp} errMsgMatcher error message\n   * @param {String} msg _optional_\n   * @see https://developer.mozilla.org/en/JavaScript/Reference/Global_Objects/Error#Error_types\n   * @returns error for chaining (null if no error)\n   * @namespace BDD\n   * @api public\n   */\n\n  function assertThrows (errorLike, errMsgMatcher, msg) {\n    if (msg) flag(this, 'message', msg);\n    var obj = flag(this, 'object')\n      , ssfi = flag(this, 'ssfi')\n      , flagMsg = flag(this, 'message')\n      , negate = flag(this, 'negate') || false;\n    new Assertion(obj, flagMsg, ssfi, true).is.a('function');\n\n    if (errorLike instanceof RegExp || typeof errorLike === 'string') {\n      errMsgMatcher = errorLike;\n      errorLike = null;\n    }\n\n    var caughtErr;\n    try {\n      obj();\n    } catch (err) {\n      caughtErr = err;\n    }\n\n    // If we have the negate flag enabled and at least one valid argument it means we do expect an error\n    // but we want it to match a given set of criteria\n    var everyArgIsUndefined = errorLike === undefined && errMsgMatcher === undefined;\n\n    // If we've got the negate flag enabled and both args, we should only fail if both aren't compatible\n    // See Issue #551 and PR #683@GitHub\n    var everyArgIsDefined = Boolean(errorLike && errMsgMatcher);\n    var errorLikeFail = false;\n    var errMsgMatcherFail = false;\n\n    // Checking if error was thrown\n    if (everyArgIsUndefined || !everyArgIsUndefined && !negate) {\n      // We need this to display results correctly according to their types\n      var errorLikeString = 'an error';\n      if (errorLike instanceof Error) {\n        errorLikeString = '#{exp}';\n      } else if (errorLike) {\n        errorLikeString = _.checkError.getConstructorName(errorLike);\n      }\n\n      this.assert(\n          caughtErr\n        , 'expected #{this} to throw ' + errorLikeString\n        , 'expected #{this} to not throw an error but #{act} was thrown'\n        , errorLike && errorLike.toString()\n        , (caughtErr instanceof Error ?\n            caughtErr.toString() : (typeof caughtErr === 'string' ? caughtErr : caughtErr &&\n                                    _.checkError.getConstructorName(caughtErr)))\n      );\n    }\n\n    if (errorLike && caughtErr) {\n      // We should compare instances only if `errorLike` is an instance of `Error`\n      if (errorLike instanceof Error) {\n        var isCompatibleInstance = _.checkError.compatibleInstance(caughtErr, errorLike);\n\n        if (isCompatibleInstance === negate) {\n          // These checks were created to ensure we won't fail too soon when we've got both args and a negate\n          // See Issue #551 and PR #683@GitHub\n          if (everyArgIsDefined && negate) {\n            errorLikeFail = true;\n          } else {\n            this.assert(\n                negate\n              , 'expected #{this} to throw #{exp} but #{act} was thrown'\n              , 'expected #{this} to not throw #{exp}' + (caughtErr && !negate ? ' but #{act} was thrown' : '')\n              , errorLike.toString()\n              , caughtErr.toString()\n            );\n          }\n        }\n      }\n\n      var isCompatibleConstructor = _.checkError.compatibleConstructor(caughtErr, errorLike);\n      if (isCompatibleConstructor === negate) {\n        if (everyArgIsDefined && negate) {\n            errorLikeFail = true;\n        } else {\n          this.assert(\n              negate\n            , 'expected #{this} to throw #{exp} but #{act} was thrown'\n            , 'expected #{this} to not throw #{exp}' + (caughtErr ? ' but #{act} was thrown' : '')\n            , (errorLike instanceof Error ? errorLike.toString() : errorLike && _.checkError.getConstructorName(errorLike))\n            , (caughtErr instanceof Error ? caughtErr.toString() : caughtErr && _.checkError.getConstructorName(caughtErr))\n          );\n        }\n      }\n    }\n\n    if (caughtErr && errMsgMatcher !== undefined && errMsgMatcher !== null) {\n      // Here we check compatible messages\n      var placeholder = 'including';\n      if (errMsgMatcher instanceof RegExp) {\n        placeholder = 'matching'\n      }\n\n      var isCompatibleMessage = _.checkError.compatibleMessage(caughtErr, errMsgMatcher);\n      if (isCompatibleMessage === negate) {\n        if (everyArgIsDefined && negate) {\n            errMsgMatcherFail = true;\n        } else {\n          this.assert(\n            negate\n            , 'expected #{this} to throw error ' + placeholder + ' #{exp} but got #{act}'\n            , 'expected #{this} to throw error not ' + placeholder + ' #{exp}'\n            ,  errMsgMatcher\n            ,  _.checkError.getMessage(caughtErr)\n          );\n        }\n      }\n    }\n\n    // If both assertions failed and both should've matched we throw an error\n    if (errorLikeFail && errMsgMatcherFail) {\n      this.assert(\n        negate\n        , 'expected #{this} to throw #{exp} but #{act} was thrown'\n        , 'expected #{this} to not throw #{exp}' + (caughtErr ? ' but #{act} was thrown' : '')\n        , (errorLike instanceof Error ? errorLike.toString() : errorLike && _.checkError.getConstructorName(errorLike))\n        , (caughtErr instanceof Error ? caughtErr.toString() : caughtErr && _.checkError.getConstructorName(caughtErr))\n      );\n    }\n\n    flag(this, 'object', caughtErr);\n  };\n\n  Assertion.addMethod('throw', assertThrows);\n  Assertion.addMethod('throws', assertThrows);\n  Assertion.addMethod('Throw', assertThrows);\n\n  /**\n   * ### .respondTo(method[, msg])\n   *\n   * When the target is a non-function object, `.respondTo` asserts that the\n   * target has a method with the given name `method`. The method can be own or\n   * inherited, and it can be enumerable or non-enumerable.\n   *\n   *     function Cat () {}\n   *     Cat.prototype.meow = function () {};\n   *\n   *     expect(new Cat()).to.respondTo('meow');\n   *\n   * When the target is a function, `.respondTo` asserts that the target's\n   * `prototype` property has a method with the given name `method`. Again, the\n   * method can be own or inherited, and it can be enumerable or non-enumerable.\n   *\n   *     function Cat () {}\n   *     Cat.prototype.meow = function () {};\n   *\n   *     expect(Cat).to.respondTo('meow');\n   *\n   * Add `.itself` earlier in the chain to force `.respondTo` to treat the\n   * target as a non-function object, even if it's a function. Thus, it asserts\n   * that the target has a method with the given name `method`, rather than\n   * asserting that the target's `prototype` property has a method with the\n   * given name `method`.\n   *\n   *     function Cat () {}\n   *     Cat.prototype.meow = function () {};\n   *     Cat.hiss = function () {};\n   *\n   *     expect(Cat).itself.to.respondTo('hiss').but.not.respondTo('meow');\n   *\n   * When not adding `.itself`, it's important to check the target's type before\n   * using `.respondTo`. See the `.a` doc for info on checking a target's type.\n   *\n   *     function Cat () {}\n   *     Cat.prototype.meow = function () {};\n   *\n   *     expect(new Cat()).to.be.an('object').that.respondsTo('meow');\n   *\n   * Add `.not` earlier in the chain to negate `.respondTo`.\n   *\n   *     function Dog () {}\n   *     Dog.prototype.bark = function () {};\n   *\n   *     expect(new Dog()).to.not.respondTo('meow');\n   *\n   * `.respondTo` accepts an optional `msg` argument which is a custom error\n   * message to show when the assertion fails. The message can also be given as\n   * the second argument to `expect`.\n   *\n   *     expect({}).to.respondTo('meow', 'nooo why fail??');\n   *     expect({}, 'nooo why fail??').to.respondTo('meow');\n   *\n   * The alias `.respondsTo` can be used interchangeably with `.respondTo`.\n   *\n   * @name respondTo\n   * @alias respondsTo\n   * @param {String} method\n   * @param {String} msg _optional_\n   * @namespace BDD\n   * @api public\n   */\n\n  function respondTo (method, msg) {\n    if (msg) flag(this, 'message', msg);\n    var obj = flag(this, 'object')\n      , itself = flag(this, 'itself')\n      , context = ('function' === typeof obj && !itself)\n        ? obj.prototype[method]\n        : obj[method];\n\n    this.assert(\n        'function' === typeof context\n      , 'expected #{this} to respond to ' + _.inspect(method)\n      , 'expected #{this} to not respond to ' + _.inspect(method)\n    );\n  }\n\n  Assertion.addMethod('respondTo', respondTo);\n  Assertion.addMethod('respondsTo', respondTo);\n\n  /**\n   * ### .itself\n   *\n   * Forces all `.respondTo` assertions that follow in the chain to behave as if\n   * the target is a non-function object, even if it's a function. Thus, it\n   * causes `.respondTo` to assert that the target has a method with the given\n   * name, rather than asserting that the target's `prototype` property has a\n   * method with the given name.\n   *\n   *     function Cat () {}\n   *     Cat.prototype.meow = function () {};\n   *     Cat.hiss = function () {};\n   *\n   *     expect(Cat).itself.to.respondTo('hiss').but.not.respondTo('meow');\n   *\n   * @name itself\n   * @namespace BDD\n   * @api public\n   */\n\n  Assertion.addProperty('itself', function () {\n    flag(this, 'itself', true);\n  });\n\n  /**\n   * ### .satisfy(matcher[, msg])\n   *\n   * Invokes the given `matcher` function with the target being passed as the\n   * first argument, and asserts that the value returned is truthy.\n   *\n   *     expect(1).to.satisfy(function(num) {\n   *       return num > 0; \n   *     });\n   *\n   * Add `.not` earlier in the chain to negate `.satisfy`.\n   *\n   *     expect(1).to.not.satisfy(function(num) {\n   *       return num > 2;\n   *     });\n   *\n   * `.satisfy` accepts an optional `msg` argument which is a custom error\n   * message to show when the assertion fails. The message can also be given as\n   * the second argument to `expect`.\n   *\n   *     expect(1).to.satisfy(function(num) {\n   *       return num > 2;\n   *     }, 'nooo why fail??');\n   *\n   *     expect(1, 'nooo why fail??').to.satisfy(function(num) {\n   *       return num > 2;\n   *     });\n   *\n   * The alias `.satisfies` can be used interchangeably with `.satisfy`.\n   *\n   * @name satisfy\n   * @alias satisfies\n   * @param {Function} matcher\n   * @param {String} msg _optional_\n   * @namespace BDD\n   * @api public\n   */\n\n  function satisfy (matcher, msg) {\n    if (msg) flag(this, 'message', msg);\n    var obj = flag(this, 'object');\n    var result = matcher(obj);\n    this.assert(\n        result\n      , 'expected #{this} to satisfy ' + _.objDisplay(matcher)\n      , 'expected #{this} to not satisfy' + _.objDisplay(matcher)\n      , flag(this, 'negate') ? false : true\n      , result\n    );\n  }\n\n  Assertion.addMethod('satisfy', satisfy);\n  Assertion.addMethod('satisfies', satisfy);\n\n  /**\n   * ### .closeTo(expected, delta[, msg])\n   *\n   * Asserts that the target is a number that's within a given +/- `delta` range\n   * of the given number `expected`. However, it's often best to assert that the\n   * target is equal to its expected value.\n   *\n   *     // Recommended\n   *     expect(1.5).to.equal(1.5);\n   *\n   *     // Not recommended\n   *     expect(1.5).to.be.closeTo(1, 0.5);\n   *     expect(1.5).to.be.closeTo(2, 0.5);\n   *     expect(1.5).to.be.closeTo(1, 1);\n   *\n   * Add `.not` earlier in the chain to negate `.closeTo`.\n   *\n   *     expect(1.5).to.equal(1.5); // Recommended\n   *     expect(1.5).to.not.be.closeTo(3, 1); // Not recommended\n   *\n   * `.closeTo` accepts an optional `msg` argument which is a custom error\n   * message to show when the assertion fails. The message can also be given as\n   * the second argument to `expect`.\n   *\n   *     expect(1.5).to.be.closeTo(3, 1, 'nooo why fail??');\n   *     expect(1.5, 'nooo why fail??').to.be.closeTo(3, 1);\n   *\n   * The alias `.approximately` can be used interchangeably with `.closeTo`.\n   *\n   * @name closeTo\n   * @alias approximately\n   * @param {Number} expected\n   * @param {Number} delta\n   * @param {String} msg _optional_\n   * @namespace BDD\n   * @api public\n   */\n\n  function closeTo(expected, delta, msg) {\n    if (msg) flag(this, 'message', msg);\n    var obj = flag(this, 'object')\n      , flagMsg = flag(this, 'message')\n      , ssfi = flag(this, 'ssfi');\n\n    new Assertion(obj, flagMsg, ssfi, true).is.a('number');\n    if (typeof expected !== 'number' || typeof delta !== 'number') {\n      flagMsg = flagMsg ? flagMsg + ': ' : '';\n      throw new AssertionError(\n          flagMsg + 'the arguments to closeTo or approximately must be numbers',\n          undefined,\n          ssfi\n      );\n    }\n\n    this.assert(\n        Math.abs(obj - expected) <= delta\n      , 'expected #{this} to be close to ' + expected + ' +/- ' + delta\n      , 'expected #{this} not to be close to ' + expected + ' +/- ' + delta\n    );\n  }\n\n  Assertion.addMethod('closeTo', closeTo);\n  Assertion.addMethod('approximately', closeTo);\n\n  // Note: Duplicates are ignored if testing for inclusion instead of sameness.\n  function isSubsetOf(subset, superset, cmp, contains, ordered) {\n    if (!contains) {\n      if (subset.length !== superset.length) return false;\n      superset = superset.slice();\n    }\n\n    return subset.every(function(elem, idx) {\n      if (ordered) return cmp ? cmp(elem, superset[idx]) : elem === superset[idx];\n\n      if (!cmp) {\n        var matchIdx = superset.indexOf(elem);\n        if (matchIdx === -1) return false;\n\n        // Remove match from superset so not counted twice if duplicate in subset.\n        if (!contains) superset.splice(matchIdx, 1);\n        return true;\n      }\n\n      return superset.some(function(elem2, matchIdx) {\n        if (!cmp(elem, elem2)) return false;\n\n        // Remove match from superset so not counted twice if duplicate in subset.\n        if (!contains) superset.splice(matchIdx, 1);\n        return true;\n      });\n    });\n  }\n\n  /**\n   * ### .members(set[, msg])\n   *\n   * Asserts that the target array has the same members as the given array\n   * `set`.\n   *\n   *     expect([1, 2, 3]).to.have.members([2, 1, 3]);\n   *     expect([1, 2, 2]).to.have.members([2, 1, 2]);\n   *\n   * By default, members are compared using strict (`===`) equality. Add `.deep`\n   * earlier in the chain to use deep equality instead. See the `deep-eql`\n   * project page for info on the deep equality algorithm:\n   * https://github.com/chaijs/deep-eql.\n   *\n   *     // Target array deeply (but not strictly) has member `{a: 1}`\n   *     expect([{a: 1}]).to.have.deep.members([{a: 1}]);\n   *     expect([{a: 1}]).to.not.have.members([{a: 1}]);\n   *\n   * By default, order doesn't matter. Add `.ordered` earlier in the chain to\n   * require that members appear in the same order.\n   *\n   *     expect([1, 2, 3]).to.have.ordered.members([1, 2, 3]);\n   *     expect([1, 2, 3]).to.have.members([2, 1, 3])\n   *       .but.not.ordered.members([2, 1, 3]);\n   *\n   * By default, both arrays must be the same size. Add `.include` earlier in\n   * the chain to require that the target's members be a superset of the\n   * expected members. Note that duplicates are ignored in the subset when\n   * `.include` is added.\n   *\n   *     // Target array is a superset of [1, 2] but not identical\n   *     expect([1, 2, 3]).to.include.members([1, 2]);\n   *     expect([1, 2, 3]).to.not.have.members([1, 2]);\n   *\n   *     // Duplicates in the subset are ignored\n   *     expect([1, 2, 3]).to.include.members([1, 2, 2, 2]);\n   *\n   * `.deep`, `.ordered`, and `.include` can all be combined. However, if\n   * `.include` and `.ordered` are combined, the ordering begins at the start of\n   * both arrays.\n   *\n   *     expect([{a: 1}, {b: 2}, {c: 3}])\n   *       .to.include.deep.ordered.members([{a: 1}, {b: 2}])\n   *       .but.not.include.deep.ordered.members([{b: 2}, {c: 3}]);\n   *\n   * Add `.not` earlier in the chain to negate `.members`. However, it's\n   * dangerous to do so. The problem is that it creates uncertain expectations\n   * by asserting that the target array doesn't have all of the same members as\n   * the given array `set` but may or may not have some of them. It's often best\n   * to identify the exact output that's expected, and then write an assertion\n   * that only accepts that exact output.\n   *\n   *     expect([1, 2]).to.not.include(3).and.not.include(4); // Recommended\n   *     expect([1, 2]).to.not.have.members([3, 4]); // Not recommended\n   *\n   * `.members` accepts an optional `msg` argument which is a custom error\n   * message to show when the assertion fails. The message can also be given as\n   * the second argument to `expect`.\n   *\n   *     expect([1, 2]).to.have.members([1, 2, 3], 'nooo why fail??');\n   *     expect([1, 2], 'nooo why fail??').to.have.members([1, 2, 3]);\n   *\n   * @name members\n   * @param {Array} set\n   * @param {String} msg _optional_\n   * @namespace BDD\n   * @api public\n   */\n\n  Assertion.addMethod('members', function (subset, msg) {\n    if (msg) flag(this, 'message', msg);\n    var obj = flag(this, 'object')\n      , flagMsg = flag(this, 'message')\n      , ssfi = flag(this, 'ssfi');\n\n    new Assertion(obj, flagMsg, ssfi, true).to.be.an('array');\n    new Assertion(subset, flagMsg, ssfi, true).to.be.an('array');\n\n    var contains = flag(this, 'contains');\n    var ordered = flag(this, 'ordered');\n\n    var subject, failMsg, failNegateMsg, lengthCheck;\n\n    if (contains) {\n      subject = ordered ? 'an ordered superset' : 'a superset';\n      failMsg = 'expected #{this} to be ' + subject + ' of #{exp}';\n      failNegateMsg = 'expected #{this} to not be ' + subject + ' of #{exp}';\n    } else {\n      subject = ordered ? 'ordered members' : 'members';\n      failMsg = 'expected #{this} to have the same ' + subject + ' as #{exp}';\n      failNegateMsg = 'expected #{this} to not have the same ' + subject + ' as #{exp}';\n    }\n\n    var cmp = flag(this, 'deep') ? _.eql : undefined;\n\n    this.assert(\n        isSubsetOf(subset, obj, cmp, contains, ordered)\n      , failMsg\n      , failNegateMsg\n      , subset\n      , obj\n      , true\n    );\n  });\n\n  /**\n   * ### .oneOf(list[, msg])\n   *\n   * Asserts that the target is a member of the given array `list`. However,\n   * it's often best to assert that the target is equal to its expected value.\n   *\n   *     expect(1).to.equal(1); // Recommended\n   *     expect(1).to.be.oneOf([1, 2, 3]); // Not recommended\n   *\n   * Comparisons are performed using strict (`===`) equality.\n   *\n   * Add `.not` earlier in the chain to negate `.oneOf`.\n   *\n   *     expect(1).to.equal(1); // Recommended\n   *     expect(1).to.not.be.oneOf([2, 3, 4]); // Not recommended\n   *\n   * `.oneOf` accepts an optional `msg` argument which is a custom error message\n   * to show when the assertion fails. The message can also be given as the\n   * second argument to `expect`.\n   *\n   *     expect(1).to.be.oneOf([2, 3, 4], 'nooo why fail??');\n   *     expect(1, 'nooo why fail??').to.be.oneOf([2, 3, 4]);\n   *\n   * @name oneOf\n   * @param {Array<*>} list\n   * @param {String} msg _optional_\n   * @namespace BDD\n   * @api public\n   */\n\n  function oneOf (list, msg) {\n    if (msg) flag(this, 'message', msg);\n    var expected = flag(this, 'object')\n      , flagMsg = flag(this, 'message')\n      , ssfi = flag(this, 'ssfi');\n    new Assertion(list, flagMsg, ssfi, true).to.be.an('array');\n\n    this.assert(\n        list.indexOf(expected) > -1\n      , 'expected #{this} to be one of #{exp}'\n      , 'expected #{this} to not be one of #{exp}'\n      , list\n      , expected\n    );\n  }\n\n  Assertion.addMethod('oneOf', oneOf);\n\n\n  /**\n   * ### .change(subject[, prop[, msg]])\n   *\n   * When one argument is provided, `.change` asserts that the given function\n   * `subject` returns a different value when it's invoked before the target\n   * function compared to when it's invoked afterward. However, it's often best\n   * to assert that `subject` is equal to its expected value.\n   *\n   *     var dots = ''\n   *       , addDot = function () { dots += '.'; }\n   *       , getDots = function () { return dots; };\n   *\n   *     // Recommended\n   *     expect(getDots()).to.equal('');\n   *     addDot();\n   *     expect(getDots()).to.equal('.');\n   *\n   *     // Not recommended\n   *     expect(addDot).to.change(getDots);\n   *\n   * When two arguments are provided, `.change` asserts that the value of the\n   * given object `subject`'s `prop` property is different before invoking the\n   * target function compared to afterward.\n   *\n   *     var myObj = {dots: ''}\n   *       , addDot = function () { myObj.dots += '.'; };\n   *\n   *     // Recommended\n   *     expect(myObj).to.have.property('dots', '');\n   *     addDot();\n   *     expect(myObj).to.have.property('dots', '.');\n   *\n   *     // Not recommended\n   *     expect(addDot).to.change(myObj, 'dots');\n   *\n   * Strict (`===`) equality is used to compare before and after values.\n   *\n   * Add `.not` earlier in the chain to negate `.change`.\n   *\n   *     var dots = ''\n   *       , noop = function () {}\n   *       , getDots = function () { return dots; };\n   *\n   *     expect(noop).to.not.change(getDots);\n   *\n   *     var myObj = {dots: ''}\n   *       , noop = function () {};\n   *\n   *     expect(noop).to.not.change(myObj, 'dots');\n   *\n   * `.change` accepts an optional `msg` argument which is a custom error\n   * message to show when the assertion fails. The message can also be given as\n   * the second argument to `expect`. When not providing two arguments, always\n   * use the second form.\n   *\n   *     var myObj = {dots: ''}\n   *       , addDot = function () { myObj.dots += '.'; };\n   *\n   *     expect(addDot).to.not.change(myObj, 'dots', 'nooo why fail??');\n   *\n   *     var dots = ''\n   *       , addDot = function () { dots += '.'; }\n   *       , getDots = function () { return dots; };\n   *\n   *     expect(addDot, 'nooo why fail??').to.not.change(getDots);\n   *\n   * `.change` also causes all `.by` assertions that follow in the chain to\n   * assert how much a numeric subject was increased or decreased by. However,\n   * it's dangerous to use `.change.by`. The problem is that it creates\n   * uncertain expectations by asserting that the subject either increases by\n   * the given delta, or that it decreases by the given delta. It's often best\n   * to identify the exact output that's expected, and then write an assertion\n   * that only accepts that exact output.\n   *\n   *     var myObj = {val: 1}\n   *       , addTwo = function () { myObj.val += 2; }\n   *       , subtractTwo = function () { myObj.val -= 2; };\n   *\n   *     expect(addTwo).to.increase(myObj, 'val').by(2); // Recommended\n   *     expect(addTwo).to.change(myObj, 'val').by(2); // Not recommended\n   *\n   *     expect(subtractTwo).to.decrease(myObj, 'val').by(2); // Recommended\n   *     expect(subtractTwo).to.change(myObj, 'val').by(2); // Not recommended\n   *\n   * The alias `.changes` can be used interchangeably with `.change`.\n   *\n   * @name change\n   * @alias changes\n   * @param {String} subject\n   * @param {String} prop name _optional_\n   * @param {String} msg _optional_\n   * @namespace BDD\n   * @api public\n   */\n\n  function assertChanges (subject, prop, msg) {\n    if (msg) flag(this, 'message', msg);\n    var fn = flag(this, 'object')\n      , flagMsg = flag(this, 'message')\n      , ssfi = flag(this, 'ssfi');\n    new Assertion(fn, flagMsg, ssfi, true).is.a('function');\n\n    var initial;\n    if (!prop) {\n      new Assertion(subject, flagMsg, ssfi, true).is.a('function');\n      initial = subject();\n    } else {\n      new Assertion(subject, flagMsg, ssfi, true).to.have.property(prop);\n      initial = subject[prop];\n    }\n\n    fn();\n\n    var final = prop === undefined || prop === null ? subject() : subject[prop];\n    var msgObj = prop === undefined || prop === null ? initial : '.' + prop;\n\n    // This gets flagged because of the .by(delta) assertion\n    flag(this, 'deltaMsgObj', msgObj);\n    flag(this, 'initialDeltaValue', initial);\n    flag(this, 'finalDeltaValue', final);\n    flag(this, 'deltaBehavior', 'change');\n    flag(this, 'realDelta', final !== initial);\n\n    this.assert(\n      initial !== final\n      , 'expected ' + msgObj + ' to change'\n      , 'expected ' + msgObj + ' to not change'\n    );\n  }\n\n  Assertion.addMethod('change', assertChanges);\n  Assertion.addMethod('changes', assertChanges);\n\n  /**\n   * ### .increase(subject[, prop[, msg]])\n   *\n   * When one argument is provided, `.increase` asserts that the given function\n   * `subject` returns a greater number when it's invoked after invoking the\n   * target function compared to when it's invoked beforehand. `.increase` also\n   * causes all `.by` assertions that follow in the chain to assert how much\n   * greater of a number is returned. It's often best to assert that the return\n   * value increased by the expected amount, rather than asserting it increased\n   * by any amount.\n   *\n   *     var val = 1\n   *       , addTwo = function () { val += 2; }\n   *       , getVal = function () { return val; };\n   *\n   *     expect(addTwo).to.increase(getVal).by(2); // Recommended\n   *     expect(addTwo).to.increase(getVal); // Not recommended\n   *\n   * When two arguments are provided, `.increase` asserts that the value of the\n   * given object `subject`'s `prop` property is greater after invoking the\n   * target function compared to beforehand.\n   *\n   *     var myObj = {val: 1}\n   *       , addTwo = function () { myObj.val += 2; };\n   *\n   *     expect(addTwo).to.increase(myObj, 'val').by(2); // Recommended\n   *     expect(addTwo).to.increase(myObj, 'val'); // Not recommended\n   *\n   * Add `.not` earlier in the chain to negate `.increase`. However, it's\n   * dangerous to do so. The problem is that it creates uncertain expectations\n   * by asserting that the subject either decreases, or that it stays the same.\n   * It's often best to identify the exact output that's expected, and then\n   * write an assertion that only accepts that exact output.\n   *\n   * When the subject is expected to decrease, it's often best to assert that it\n   * decreased by the expected amount.\n   *\n   *     var myObj = {val: 1}\n   *       , subtractTwo = function () { myObj.val -= 2; };\n   *\n   *     expect(subtractTwo).to.decrease(myObj, 'val').by(2); // Recommended\n   *     expect(subtractTwo).to.not.increase(myObj, 'val'); // Not recommended\n   * \n   * When the subject is expected to stay the same, it's often best to assert\n   * exactly that.\n   *\n   *     var myObj = {val: 1}\n   *       , noop = function () {};\n   *\n   *     expect(noop).to.not.change(myObj, 'val'); // Recommended\n   *     expect(noop).to.not.increase(myObj, 'val'); // Not recommended\n   *\n   * `.increase` accepts an optional `msg` argument which is a custom error\n   * message to show when the assertion fails. The message can also be given as\n   * the second argument to `expect`. When not providing two arguments, always\n   * use the second form.\n   *\n   *     var myObj = {val: 1}\n   *       , noop = function () {};\n   *\n   *     expect(noop).to.increase(myObj, 'val', 'nooo why fail??');\n   *\n   *     var val = 1\n   *       , noop = function () {}\n   *       , getVal = function () { return val; };\n   *\n   *     expect(noop, 'nooo why fail??').to.increase(getVal);\n   *\n   * The alias `.increases` can be used interchangeably with `.increase`.\n   *\n   * @name increase\n   * @alias increases\n   * @param {String|Function} subject\n   * @param {String} prop name _optional_\n   * @param {String} msg _optional_\n   * @namespace BDD\n   * @api public\n   */\n\n  function assertIncreases (subject, prop, msg) {\n    if (msg) flag(this, 'message', msg);\n    var fn = flag(this, 'object')\n      , flagMsg = flag(this, 'message')\n      , ssfi = flag(this, 'ssfi');\n    new Assertion(fn, flagMsg, ssfi, true).is.a('function');\n\n    var initial;\n    if (!prop) {\n      new Assertion(subject, flagMsg, ssfi, true).is.a('function');\n      initial = subject();\n    } else {\n      new Assertion(subject, flagMsg, ssfi, true).to.have.property(prop);\n      initial = subject[prop];\n    }\n\n    // Make sure that the target is a number\n    new Assertion(initial, flagMsg, ssfi, true).is.a('number');\n\n    fn();\n\n    var final = prop === undefined || prop === null ? subject() : subject[prop];\n    var msgObj = prop === undefined || prop === null ? initial : '.' + prop;\n\n    flag(this, 'deltaMsgObj', msgObj);\n    flag(this, 'initialDeltaValue', initial);\n    flag(this, 'finalDeltaValue', final);\n    flag(this, 'deltaBehavior', 'increase');\n    flag(this, 'realDelta', final - initial);\n\n    this.assert(\n      final - initial > 0\n      , 'expected ' + msgObj + ' to increase'\n      , 'expected ' + msgObj + ' to not increase'\n    );\n  }\n\n  Assertion.addMethod('increase', assertIncreases);\n  Assertion.addMethod('increases', assertIncreases);\n\n  /**\n   * ### .decrease(subject[, prop[, msg]])\n   *\n   * When one argument is provided, `.decrease` asserts that the given function\n   * `subject` returns a lesser number when it's invoked after invoking the\n   * target function compared to when it's invoked beforehand. `.decrease` also\n   * causes all `.by` assertions that follow in the chain to assert how much\n   * lesser of a number is returned. It's often best to assert that the return\n   * value decreased by the expected amount, rather than asserting it decreased\n   * by any amount.\n   *\n   *     var val = 1\n   *       , subtractTwo = function () { val -= 2; }\n   *       , getVal = function () { return val; };\n   *\n   *     expect(subtractTwo).to.decrease(getVal).by(2); // Recommended\n   *     expect(subtractTwo).to.decrease(getVal); // Not recommended\n   *\n   * When two arguments are provided, `.decrease` asserts that the value of the\n   * given object `subject`'s `prop` property is lesser after invoking the\n   * target function compared to beforehand. \n   *\n   *     var myObj = {val: 1}\n   *       , subtractTwo = function () { myObj.val -= 2; };\n   *\n   *     expect(subtractTwo).to.decrease(myObj, 'val').by(2); // Recommended\n   *     expect(subtractTwo).to.decrease(myObj, 'val'); // Not recommended\n   *\n   * Add `.not` earlier in the chain to negate `.decrease`. However, it's\n   * dangerous to do so. The problem is that it creates uncertain expectations\n   * by asserting that the subject either increases, or that it stays the same.\n   * It's often best to identify the exact output that's expected, and then\n   * write an assertion that only accepts that exact output.\n   *\n   * When the subject is expected to increase, it's often best to assert that it\n   * increased by the expected amount.\n   *\n   *     var myObj = {val: 1}\n   *       , addTwo = function () { myObj.val += 2; };\n   *\n   *     expect(addTwo).to.increase(myObj, 'val').by(2); // Recommended\n   *     expect(addTwo).to.not.decrease(myObj, 'val'); // Not recommended\n   * \n   * When the subject is expected to stay the same, it's often best to assert\n   * exactly that.\n   *\n   *     var myObj = {val: 1}\n   *       , noop = function () {};\n   *\n   *     expect(noop).to.not.change(myObj, 'val'); // Recommended\n   *     expect(noop).to.not.decrease(myObj, 'val'); // Not recommended\n   *\n   * `.decrease` accepts an optional `msg` argument which is a custom error\n   * message to show when the assertion fails. The message can also be given as\n   * the second argument to `expect`. When not providing two arguments, always\n   * use the second form.\n   *\n   *     var myObj = {val: 1}\n   *       , noop = function () {};\n   *\n   *     expect(noop).to.decrease(myObj, 'val', 'nooo why fail??');\n   *\n   *     var val = 1\n   *       , noop = function () {}\n   *       , getVal = function () { return val; };\n   *\n   *     expect(noop, 'nooo why fail??').to.decrease(getVal);\n   *\n   * The alias `.decreases` can be used interchangeably with `.decrease`.\n   *\n   * @name decrease\n   * @alias decreases\n   * @param {String|Function} subject\n   * @param {String} prop name _optional_\n   * @param {String} msg _optional_\n   * @namespace BDD\n   * @api public\n   */\n\n  function assertDecreases (subject, prop, msg) {\n    if (msg) flag(this, 'message', msg);\n    var fn = flag(this, 'object')\n      , flagMsg = flag(this, 'message')\n      , ssfi = flag(this, 'ssfi');\n    new Assertion(fn, flagMsg, ssfi, true).is.a('function');\n\n    var initial;\n    if (!prop) {\n      new Assertion(subject, flagMsg, ssfi, true).is.a('function');\n      initial = subject();\n    } else {\n      new Assertion(subject, flagMsg, ssfi, true).to.have.property(prop);\n      initial = subject[prop];\n    }\n\n    // Make sure that the target is a number\n    new Assertion(initial, flagMsg, ssfi, true).is.a('number');\n\n    fn();\n\n    var final = prop === undefined || prop === null ? subject() : subject[prop];\n    var msgObj = prop === undefined || prop === null ? initial : '.' + prop;\n\n    flag(this, 'deltaMsgObj', msgObj);\n    flag(this, 'initialDeltaValue', initial);\n    flag(this, 'finalDeltaValue', final);\n    flag(this, 'deltaBehavior', 'decrease');\n    flag(this, 'realDelta', initial - final);\n\n    this.assert(\n      final - initial < 0\n      , 'expected ' + msgObj + ' to decrease'\n      , 'expected ' + msgObj + ' to not decrease'\n    );\n  }\n\n  Assertion.addMethod('decrease', assertDecreases);\n  Assertion.addMethod('decreases', assertDecreases);\n\n  /**\n   * ### .by(delta[, msg])\n   *\n   * When following an `.increase` assertion in the chain, `.by` asserts that\n   * the subject of the `.increase` assertion increased by the given `delta`.\n   *\n   *     var myObj = {val: 1}\n   *       , addTwo = function () { myObj.val += 2; };\n   *\n   *     expect(addTwo).to.increase(myObj, 'val').by(2);\n   *\n   * When following a `.decrease` assertion in the chain, `.by` asserts that the\n   * subject of the `.decrease` assertion decreased by the given `delta`.\n   *\n   *     var myObj = {val: 1}\n   *       , subtractTwo = function () { myObj.val -= 2; };\n   *\n   *     expect(subtractTwo).to.decrease(myObj, 'val').by(2);\n   *\n   * When following a `.change` assertion in the chain, `.by` asserts that the\n   * subject of the `.change` assertion either increased or decreased by the\n   * given `delta`. However, it's dangerous to use `.change.by`. The problem is\n   * that it creates uncertain expectations. It's often best to identify the\n   * exact output that's expected, and then write an assertion that only accepts\n   * that exact output.\n   *\n   *     var myObj = {val: 1}\n   *       , addTwo = function () { myObj.val += 2; }\n   *       , subtractTwo = function () { myObj.val -= 2; };\n   *\n   *     expect(addTwo).to.increase(myObj, 'val').by(2); // Recommended\n   *     expect(addTwo).to.change(myObj, 'val').by(2); // Not recommended\n   *\n   *     expect(subtractTwo).to.decrease(myObj, 'val').by(2); // Recommended\n   *     expect(subtractTwo).to.change(myObj, 'val').by(2); // Not recommended\n   *\n   * Add `.not` earlier in the chain to negate `.by`. However, it's often best\n   * to assert that the subject changed by its expected delta, rather than\n   * asserting that it didn't change by one of countless unexpected deltas.\n   *\n   *     var myObj = {val: 1}\n   *       , addTwo = function () { myObj.val += 2; };\n   *\n   *     // Recommended\n   *     expect(addTwo).to.increase(myObj, 'val').by(2);\n   *\n   *     // Not recommended\n   *     expect(addTwo).to.increase(myObj, 'val').but.not.by(3);\n   *\n   * `.by` accepts an optional `msg` argument which is a custom error message to\n   * show when the assertion fails. The message can also be given as the second\n   * argument to `expect`.\n   *\n   *     var myObj = {val: 1}\n   *       , addTwo = function () { myObj.val += 2; };\n   *\n   *     expect(addTwo).to.increase(myObj, 'val').by(3, 'nooo why fail??');\n   *     expect(addTwo, 'nooo why fail??').to.increase(myObj, 'val').by(3);\n   *\n   * @name by\n   * @param {Number} delta\n   * @param {String} msg _optional_\n   * @namespace BDD\n   * @api public\n   */\n\n  function assertDelta(delta, msg) {\n    if (msg) flag(this, 'message', msg);\n\n    var msgObj = flag(this, 'deltaMsgObj');\n    var initial = flag(this, 'initialDeltaValue');\n    var final = flag(this, 'finalDeltaValue');\n    var behavior = flag(this, 'deltaBehavior');\n    var realDelta = flag(this, 'realDelta');\n\n    var expression;\n    if (behavior === 'change') {\n      expression = Math.abs(final - initial) === Math.abs(delta);\n    } else {\n      expression = realDelta === Math.abs(delta);\n    }\n\n    this.assert(\n      expression\n      , 'expected ' + msgObj + ' to ' + behavior + ' by ' + delta\n      , 'expected ' + msgObj + ' to not ' + behavior + ' by ' + delta\n    );\n  }\n\n  Assertion.addMethod('by', assertDelta);\n\n  /**\n   * ### .extensible\n   *\n   * Asserts that the target is extensible, which means that new properties can\n   * be added to it. Primitives are never extensible.\n   *\n   *     expect({a: 1}).to.be.extensible;\n   *\n   * Add `.not` earlier in the chain to negate `.extensible`.\n   *\n   *     var nonExtensibleObject = Object.preventExtensions({})\n   *       , sealedObject = Object.seal({})\n   *       , frozenObject = Object.freeze({});\n   *\n   *     expect(nonExtensibleObject).to.not.be.extensible;\n   *     expect(sealedObject).to.not.be.extensible;\n   *     expect(frozenObject).to.not.be.extensible;\n   *     expect(1).to.not.be.extensible;\n   *\n   * A custom error message can be given as the second argument to `expect`.\n   *\n   *     expect(1, 'nooo why fail??').to.be.extensible;\n   *\n   * @name extensible\n   * @namespace BDD\n   * @api public\n   */\n\n  Assertion.addProperty('extensible', function() {\n    var obj = flag(this, 'object');\n\n    // In ES5, if the argument to this method is a primitive, then it will cause a TypeError.\n    // In ES6, a non-object argument will be treated as if it was a non-extensible ordinary object, simply return false.\n    // https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/isExtensible\n    // The following provides ES6 behavior for ES5 environments.\n\n    var isExtensible = obj === Object(obj) && Object.isExtensible(obj);\n\n    this.assert(\n      isExtensible\n      , 'expected #{this} to be extensible'\n      , 'expected #{this} to not be extensible'\n    );\n  });\n\n  /**\n   * ### .sealed\n   *\n   * Asserts that the target is sealed, which means that new properties can't be\n   * added to it, and its existing properties can't be reconfigured or deleted.\n   * However, it's possible that its existing properties can still be reassigned\n   * to different values. Primitives are always sealed.\n   *\n   *     var sealedObject = Object.seal({});\n   *     var frozenObject = Object.freeze({});\n   *\n   *     expect(sealedObject).to.be.sealed;\n   *     expect(frozenObject).to.be.sealed;\n   *     expect(1).to.be.sealed;\n   *\n   * Add `.not` earlier in the chain to negate `.sealed`.\n   *\n   *     expect({a: 1}).to.not.be.sealed;\n   *\n   * A custom error message can be given as the second argument to `expect`.\n   *\n   *     expect({a: 1}, 'nooo why fail??').to.be.sealed;\n   *\n   * @name sealed\n   * @namespace BDD\n   * @api public\n   */\n\n  Assertion.addProperty('sealed', function() {\n    var obj = flag(this, 'object');\n\n    // In ES5, if the argument to this method is a primitive, then it will cause a TypeError.\n    // In ES6, a non-object argument will be treated as if it was a sealed ordinary object, simply return true.\n    // See https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/isSealed\n    // The following provides ES6 behavior for ES5 environments.\n\n    var isSealed = obj === Object(obj) ? Object.isSealed(obj) : true;\n\n    this.assert(\n      isSealed\n      , 'expected #{this} to be sealed'\n      , 'expected #{this} to not be sealed'\n    );\n  });\n\n  /**\n   * ### .frozen\n   *\n   * Asserts that the target is frozen, which means that new properties can't be\n   * added to it, and its existing properties can't be reassigned to different\n   * values, reconfigured, or deleted. Primitives are always frozen.\n   *\n   *     var frozenObject = Object.freeze({});\n   *\n   *     expect(frozenObject).to.be.frozen;\n   *     expect(1).to.be.frozen;\n   *\n   * Add `.not` earlier in the chain to negate `.frozen`.\n   *\n   *     expect({a: 1}).to.not.be.frozen;\n   *\n   * A custom error message can be given as the second argument to `expect`.\n   *\n   *     expect({a: 1}, 'nooo why fail??').to.be.frozen;\n   *\n   * @name frozen\n   * @namespace BDD\n   * @api public\n   */\n\n  Assertion.addProperty('frozen', function() {\n    var obj = flag(this, 'object');\n\n    // In ES5, if the argument to this method is a primitive, then it will cause a TypeError.\n    // In ES6, a non-object argument will be treated as if it was a frozen ordinary object, simply return true.\n    // See https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/isFrozen\n    // The following provides ES6 behavior for ES5 environments.\n\n    var isFrozen = obj === Object(obj) ? Object.isFrozen(obj) : true;\n\n    this.assert(\n      isFrozen\n      , 'expected #{this} to be frozen'\n      , 'expected #{this} to not be frozen'\n    );\n  });\n\n  /**\n   * ### .finite\n   *\n   * Asserts that the target is a number, and isn't `NaN` or positive/negative\n   * `Infinity`.\n   *\n   *     expect(1).to.be.finite;\n   *\n   * Add `.not` earlier in the chain to negate `.finite`. However, it's\n   * dangerous to do so. The problem is that it creates uncertain expectations\n   * by asserting that the subject either isn't a number, or that it's `NaN`, or\n   * that it's positive `Infinity`, or that it's negative `Infinity`. It's often\n   * best to identify the exact output that's expected, and then write an\n   * assertion that only accepts that exact output.\n   *\n   * When the target isn't expected to be a number, it's often best to assert\n   * that it's the expected type, rather than asserting that it isn't one of\n   * many unexpected types.\n   *\n   *     expect('foo').to.be.a('string'); // Recommended\n   *     expect('foo').to.not.be.finite; // Not recommended\n   *\n   * When the target is expected to be `NaN`, it's often best to assert exactly\n   * that.\n   *\n   *     expect(NaN).to.be.NaN; // Recommended\n   *     expect(NaN).to.not.be.finite; // Not recommended\n   *\n   * When the target is expected to be positive infinity, it's often best to\n   * assert exactly that.\n   *\n   *     expect(Infinity).to.equal(Infinity); // Recommended\n   *     expect(Infinity).to.not.be.finite; // Not recommended\n   *\n   * When the target is expected to be negative infinity, it's often best to\n   * assert exactly that.\n   *\n   *     expect(-Infinity).to.equal(-Infinity); // Recommended\n   *     expect(-Infinity).to.not.be.finite; // Not recommended\n   *\n   * A custom error message can be given as the second argument to `expect`.\n   *\n   *     expect('foo', 'nooo why fail??').to.be.finite;\n   *\n   * @name finite\n   * @namespace BDD\n   * @api public\n   */\n\n  Assertion.addProperty('finite', function(msg) {\n    var obj = flag(this, 'object');\n\n    this.assert(\n        typeof obj === \"number\" && isFinite(obj)\n      , 'expected #{this} to be a finite number'\n      , 'expected #{this} to not be a finite number'\n    );\n  });\n};\n","/*!\n * chai\n * Copyright(c) 2011-2014 Jake Luer <jake@alogicalparadox.com>\n * MIT Licensed\n */\n\nmodule.exports = function (chai, util) {\n  chai.expect = function (val, message) {\n    return new chai.Assertion(val, message);\n  };\n\n  /**\n   * ### .fail(actual, expected, [message], [operator])\n   *\n   * Throw a failure.\n   *\n   * @name fail\n   * @param {Mixed} actual\n   * @param {Mixed} expected\n   * @param {String} message\n   * @param {String} operator\n   * @namespace BDD\n   * @api public\n   */\n\n  chai.expect.fail = function (actual, expected, message, operator) {\n    message = message || 'expect.fail()';\n    throw new chai.AssertionError(message, {\n        actual: actual\n      , expected: expected\n      , operator: operator\n    }, chai.expect.fail);\n  };\n};\n","/*!\n * chai\n * Copyright(c) 2011-2014 Jake Luer <jake@alogicalparadox.com>\n * MIT Licensed\n */\n\nmodule.exports = function (chai, util) {\n  var Assertion = chai.Assertion;\n\n  function loadShould () {\n    // explicitly define this method as function as to have it's name to include as `ssfi`\n    function shouldGetter() {\n      if (this instanceof String\n          || this instanceof Number\n          || this instanceof Boolean\n          || typeof Symbol === 'function' && this instanceof Symbol) {\n        return new Assertion(this.valueOf(), null, shouldGetter);\n      }\n      return new Assertion(this, null, shouldGetter);\n    }\n    function shouldSetter(value) {\n      // See https://github.com/chaijs/chai/issues/86: this makes\n      // `whatever.should = someValue` actually set `someValue`, which is\n      // especially useful for `global.should = require('chai').should()`.\n      //\n      // Note that we have to use [[DefineProperty]] instead of [[Put]]\n      // since otherwise we would trigger this very setter!\n      Object.defineProperty(this, 'should', {\n        value: value,\n        enumerable: true,\n        configurable: true,\n        writable: true\n      });\n    }\n    // modify Object.prototype to have `should`\n    Object.defineProperty(Object.prototype, 'should', {\n      set: shouldSetter\n      , get: shouldGetter\n      , configurable: true\n    });\n\n    var should = {};\n\n    /**\n     * ### .fail(actual, expected, [message], [operator])\n     *\n     * Throw a failure.\n     *\n     * @name fail\n     * @param {Mixed} actual\n     * @param {Mixed} expected\n     * @param {String} message\n     * @param {String} operator\n     * @namespace BDD\n     * @api public\n     */\n\n    should.fail = function (actual, expected, message, operator) {\n      message = message || 'should.fail()';\n      throw new chai.AssertionError(message, {\n          actual: actual\n        , expected: expected\n        , operator: operator\n      }, should.fail);\n    };\n\n    /**\n     * ### .equal(actual, expected, [message])\n     *\n     * Asserts non-strict equality (`==`) of `actual` and `expected`.\n     *\n     *     should.equal(3, '3', '== coerces values to strings');\n     *\n     * @name equal\n     * @param {Mixed} actual\n     * @param {Mixed} expected\n     * @param {String} message\n     * @namespace Should\n     * @api public\n     */\n\n    should.equal = function (val1, val2, msg) {\n      new Assertion(val1, msg).to.equal(val2);\n    };\n\n    /**\n     * ### .throw(function, [constructor/string/regexp], [string/regexp], [message])\n     *\n     * Asserts that `function` will throw an error that is an instance of\n     * `constructor`, or alternately that it will throw an error with message\n     * matching `regexp`.\n     *\n     *     should.throw(fn, 'function throws a reference error');\n     *     should.throw(fn, /function throws a reference error/);\n     *     should.throw(fn, ReferenceError);\n     *     should.throw(fn, ReferenceError, 'function throws a reference error');\n     *     should.throw(fn, ReferenceError, /function throws a reference error/);\n     *\n     * @name throw\n     * @alias Throw\n     * @param {Function} function\n     * @param {ErrorConstructor} constructor\n     * @param {RegExp} regexp\n     * @param {String} message\n     * @see https://developer.mozilla.org/en/JavaScript/Reference/Global_Objects/Error#Error_types\n     * @namespace Should\n     * @api public\n     */\n\n    should.Throw = function (fn, errt, errs, msg) {\n      new Assertion(fn, msg).to.Throw(errt, errs);\n    };\n\n    /**\n     * ### .exist\n     *\n     * Asserts that the target is neither `null` nor `undefined`.\n     *\n     *     var foo = 'hi';\n     *\n     *     should.exist(foo, 'foo exists');\n     *\n     * @name exist\n     * @namespace Should\n     * @api public\n     */\n\n    should.exist = function (val, msg) {\n      new Assertion(val, msg).to.exist;\n    }\n\n    // negation\n    should.not = {}\n\n    /**\n     * ### .not.equal(actual, expected, [message])\n     *\n     * Asserts non-strict inequality (`!=`) of `actual` and `expected`.\n     *\n     *     should.not.equal(3, 4, 'these numbers are not equal');\n     *\n     * @name not.equal\n     * @param {Mixed} actual\n     * @param {Mixed} expected\n     * @param {String} message\n     * @namespace Should\n     * @api public\n     */\n\n    should.not.equal = function (val1, val2, msg) {\n      new Assertion(val1, msg).to.not.equal(val2);\n    };\n\n    /**\n     * ### .throw(function, [constructor/regexp], [message])\n     *\n     * Asserts that `function` will _not_ throw an error that is an instance of\n     * `constructor`, or alternately that it will not throw an error with message\n     * matching `regexp`.\n     *\n     *     should.not.throw(fn, Error, 'function does not throw');\n     *\n     * @name not.throw\n     * @alias not.Throw\n     * @param {Function} function\n     * @param {ErrorConstructor} constructor\n     * @param {RegExp} regexp\n     * @param {String} message\n     * @see https://developer.mozilla.org/en/JavaScript/Reference/Global_Objects/Error#Error_types\n     * @namespace Should\n     * @api public\n     */\n\n    should.not.Throw = function (fn, errt, errs, msg) {\n      new Assertion(fn, msg).to.not.Throw(errt, errs);\n    };\n\n    /**\n     * ### .not.exist\n     *\n     * Asserts that the target is neither `null` nor `undefined`.\n     *\n     *     var bar = null;\n     *\n     *     should.not.exist(bar, 'bar does not exist');\n     *\n     * @name not.exist\n     * @namespace Should\n     * @api public\n     */\n\n    should.not.exist = function (val, msg) {\n      new Assertion(val, msg).to.not.exist;\n    }\n\n    should['throw'] = should['Throw'];\n    should.not['throw'] = should.not['Throw'];\n\n    return should;\n  };\n\n  chai.should = loadShould;\n  chai.Should = loadShould;\n};\n","/*!\n * chai\n * Copyright(c) 2011-2014 Jake Luer <jake@alogicalparadox.com>\n * MIT Licensed\n */\n\n\nmodule.exports = function (chai, util) {\n\n  /*!\n   * Chai dependencies.\n   */\n\n  var Assertion = chai.Assertion\n    , flag = util.flag;\n\n  /*!\n   * Module export.\n   */\n\n  /**\n   * ### assert(expression, message)\n   *\n   * Write your own test expressions.\n   *\n   *     assert('foo' !== 'bar', 'foo is not bar');\n   *     assert(Array.isArray([]), 'empty arrays are arrays');\n   *\n   * @param {Mixed} expression to test for truthiness\n   * @param {String} message to display on error\n   * @name assert\n   * @namespace Assert\n   * @api public\n   */\n\n  var assert = chai.assert = function (express, errmsg) {\n    var test = new Assertion(null, null, chai.assert, true);\n    test.assert(\n        express\n      , errmsg\n      , '[ negation message unavailable ]'\n    );\n  };\n\n  /**\n   * ### .fail(actual, expected, [message], [operator])\n   *\n   * Throw a failure. Node.js `assert` module-compatible.\n   *\n   * @name fail\n   * @param {Mixed} actual\n   * @param {Mixed} expected\n   * @param {String} message\n   * @param {String} operator\n   * @namespace Assert\n   * @api public\n   */\n\n  assert.fail = function (actual, expected, message, operator) {\n    message = message || 'assert.fail()';\n    throw new chai.AssertionError(message, {\n        actual: actual\n      , expected: expected\n      , operator: operator\n    }, assert.fail);\n  };\n\n  /**\n   * ### .isOk(object, [message])\n   *\n   * Asserts that `object` is truthy.\n   *\n   *     assert.isOk('everything', 'everything is ok');\n   *     assert.isOk(false, 'this will fail');\n   *\n   * @name isOk\n   * @alias ok\n   * @param {Mixed} object to test\n   * @param {String} message\n   * @namespace Assert\n   * @api public\n   */\n\n  assert.isOk = function (val, msg) {\n    new Assertion(val, msg, assert.isOk, true).is.ok;\n  };\n\n  /**\n   * ### .isNotOk(object, [message])\n   *\n   * Asserts that `object` is falsy.\n   *\n   *     assert.isNotOk('everything', 'this will fail');\n   *     assert.isNotOk(false, 'this will pass');\n   *\n   * @name isNotOk\n   * @alias notOk\n   * @param {Mixed} object to test\n   * @param {String} message\n   * @namespace Assert\n   * @api public\n   */\n\n  assert.isNotOk = function (val, msg) {\n    new Assertion(val, msg, assert.isNotOk, true).is.not.ok;\n  };\n\n  /**\n   * ### .equal(actual, expected, [message])\n   *\n   * Asserts non-strict equality (`==`) of `actual` and `expected`.\n   *\n   *     assert.equal(3, '3', '== coerces values to strings');\n   *\n   * @name equal\n   * @param {Mixed} actual\n   * @param {Mixed} expected\n   * @param {String} message\n   * @namespace Assert\n   * @api public\n   */\n\n  assert.equal = function (act, exp, msg) {\n    var test = new Assertion(act, msg, assert.equal, true);\n\n    test.assert(\n        exp == flag(test, 'object')\n      , 'expected #{this} to equal #{exp}'\n      , 'expected #{this} to not equal #{act}'\n      , exp\n      , act\n      , true\n    );\n  };\n\n  /**\n   * ### .notEqual(actual, expected, [message])\n   *\n   * Asserts non-strict inequality (`!=`) of `actual` and `expected`.\n   *\n   *     assert.notEqual(3, 4, 'these numbers are not equal');\n   *\n   * @name notEqual\n   * @param {Mixed} actual\n   * @param {Mixed} expected\n   * @param {String} message\n   * @namespace Assert\n   * @api public\n   */\n\n  assert.notEqual = function (act, exp, msg) {\n    var test = new Assertion(act, msg, assert.notEqual, true);\n\n    test.assert(\n        exp != flag(test, 'object')\n      , 'expected #{this} to not equal #{exp}'\n      , 'expected #{this} to equal #{act}'\n      , exp\n      , act\n      , true\n    );\n  };\n\n  /**\n   * ### .strictEqual(actual, expected, [message])\n   *\n   * Asserts strict equality (`===`) of `actual` and `expected`.\n   *\n   *     assert.strictEqual(true, true, 'these booleans are strictly equal');\n   *\n   * @name strictEqual\n   * @param {Mixed} actual\n   * @param {Mixed} expected\n   * @param {String} message\n   * @namespace Assert\n   * @api public\n   */\n\n  assert.strictEqual = function (act, exp, msg) {\n    new Assertion(act, msg, assert.strictEqual, true).to.equal(exp);\n  };\n\n  /**\n   * ### .notStrictEqual(actual, expected, [message])\n   *\n   * Asserts strict inequality (`!==`) of `actual` and `expected`.\n   *\n   *     assert.notStrictEqual(3, '3', 'no coercion for strict equality');\n   *\n   * @name notStrictEqual\n   * @param {Mixed} actual\n   * @param {Mixed} expected\n   * @param {String} message\n   * @namespace Assert\n   * @api public\n   */\n\n  assert.notStrictEqual = function (act, exp, msg) {\n    new Assertion(act, msg, assert.notStrictEqual, true).to.not.equal(exp);\n  };\n\n  /**\n   * ### .deepEqual(actual, expected, [message])\n   *\n   * Asserts that `actual` is deeply equal to `expected`.\n   *\n   *     assert.deepEqual({ tea: 'green' }, { tea: 'green' });\n   *\n   * @name deepEqual\n   * @param {Mixed} actual\n   * @param {Mixed} expected\n   * @param {String} message\n   * @alias deepStrictEqual\n   * @namespace Assert\n   * @api public\n   */\n\n  assert.deepEqual = assert.deepStrictEqual = function (act, exp, msg) {\n    new Assertion(act, msg, assert.deepEqual, true).to.eql(exp);\n  };\n\n  /**\n   * ### .notDeepEqual(actual, expected, [message])\n   *\n   * Assert that `actual` is not deeply equal to `expected`.\n   *\n   *     assert.notDeepEqual({ tea: 'green' }, { tea: 'jasmine' });\n   *\n   * @name notDeepEqual\n   * @param {Mixed} actual\n   * @param {Mixed} expected\n   * @param {String} message\n   * @namespace Assert\n   * @api public\n   */\n\n  assert.notDeepEqual = function (act, exp, msg) {\n    new Assertion(act, msg, assert.notDeepEqual, true).to.not.eql(exp);\n  };\n\n   /**\n   * ### .isAbove(valueToCheck, valueToBeAbove, [message])\n   *\n   * Asserts `valueToCheck` is strictly greater than (>) `valueToBeAbove`.\n   *\n   *     assert.isAbove(5, 2, '5 is strictly greater than 2');\n   *\n   * @name isAbove\n   * @param {Mixed} valueToCheck\n   * @param {Mixed} valueToBeAbove\n   * @param {String} message\n   * @namespace Assert\n   * @api public\n   */\n\n  assert.isAbove = function (val, abv, msg) {\n    new Assertion(val, msg, assert.isAbove, true).to.be.above(abv);\n  };\n\n   /**\n   * ### .isAtLeast(valueToCheck, valueToBeAtLeast, [message])\n   *\n   * Asserts `valueToCheck` is greater than or equal to (>=) `valueToBeAtLeast`.\n   *\n   *     assert.isAtLeast(5, 2, '5 is greater or equal to 2');\n   *     assert.isAtLeast(3, 3, '3 is greater or equal to 3');\n   *\n   * @name isAtLeast\n   * @param {Mixed} valueToCheck\n   * @param {Mixed} valueToBeAtLeast\n   * @param {String} message\n   * @namespace Assert\n   * @api public\n   */\n\n  assert.isAtLeast = function (val, atlst, msg) {\n    new Assertion(val, msg, assert.isAtLeast, true).to.be.least(atlst);\n  };\n\n   /**\n   * ### .isBelow(valueToCheck, valueToBeBelow, [message])\n   *\n   * Asserts `valueToCheck` is strictly less than (<) `valueToBeBelow`.\n   *\n   *     assert.isBelow(3, 6, '3 is strictly less than 6');\n   *\n   * @name isBelow\n   * @param {Mixed} valueToCheck\n   * @param {Mixed} valueToBeBelow\n   * @param {String} message\n   * @namespace Assert\n   * @api public\n   */\n\n  assert.isBelow = function (val, blw, msg) {\n    new Assertion(val, msg, assert.isBelow, true).to.be.below(blw);\n  };\n\n   /**\n   * ### .isAtMost(valueToCheck, valueToBeAtMost, [message])\n   *\n   * Asserts `valueToCheck` is less than or equal to (<=) `valueToBeAtMost`.\n   *\n   *     assert.isAtMost(3, 6, '3 is less than or equal to 6');\n   *     assert.isAtMost(4, 4, '4 is less than or equal to 4');\n   *\n   * @name isAtMost\n   * @param {Mixed} valueToCheck\n   * @param {Mixed} valueToBeAtMost\n   * @param {String} message\n   * @namespace Assert\n   * @api public\n   */\n\n  assert.isAtMost = function (val, atmst, msg) {\n    new Assertion(val, msg, assert.isAtMost, true).to.be.most(atmst);\n  };\n\n  /**\n   * ### .isTrue(value, [message])\n   *\n   * Asserts that `value` is true.\n   *\n   *     var teaServed = true;\n   *     assert.isTrue(teaServed, 'the tea has been served');\n   *\n   * @name isTrue\n   * @param {Mixed} value\n   * @param {String} message\n   * @namespace Assert\n   * @api public\n   */\n\n  assert.isTrue = function (val, msg) {\n    new Assertion(val, msg, assert.isTrue, true).is['true'];\n  };\n\n  /**\n   * ### .isNotTrue(value, [message])\n   *\n   * Asserts that `value` is not true.\n   *\n   *     var tea = 'tasty chai';\n   *     assert.isNotTrue(tea, 'great, time for tea!');\n   *\n   * @name isNotTrue\n   * @param {Mixed} value\n   * @param {String} message\n   * @namespace Assert\n   * @api public\n   */\n\n  assert.isNotTrue = function (val, msg) {\n    new Assertion(val, msg, assert.isNotTrue, true).to.not.equal(true);\n  };\n\n  /**\n   * ### .isFalse(value, [message])\n   *\n   * Asserts that `value` is false.\n   *\n   *     var teaServed = false;\n   *     assert.isFalse(teaServed, 'no tea yet? hmm...');\n   *\n   * @name isFalse\n   * @param {Mixed} value\n   * @param {String} message\n   * @namespace Assert\n   * @api public\n   */\n\n  assert.isFalse = function (val, msg) {\n    new Assertion(val, msg, assert.isFalse, true).is['false'];\n  };\n\n  /**\n   * ### .isNotFalse(value, [message])\n   *\n   * Asserts that `value` is not false.\n   *\n   *     var tea = 'tasty chai';\n   *     assert.isNotFalse(tea, 'great, time for tea!');\n   *\n   * @name isNotFalse\n   * @param {Mixed} value\n   * @param {String} message\n   * @namespace Assert\n   * @api public\n   */\n\n  assert.isNotFalse = function (val, msg) {\n    new Assertion(val, msg, assert.isNotFalse, true).to.not.equal(false);\n  };\n\n  /**\n   * ### .isNull(value, [message])\n   *\n   * Asserts that `value` is null.\n   *\n   *     assert.isNull(err, 'there was no error');\n   *\n   * @name isNull\n   * @param {Mixed} value\n   * @param {String} message\n   * @namespace Assert\n   * @api public\n   */\n\n  assert.isNull = function (val, msg) {\n    new Assertion(val, msg, assert.isNull, true).to.equal(null);\n  };\n\n  /**\n   * ### .isNotNull(value, [message])\n   *\n   * Asserts that `value` is not null.\n   *\n   *     var tea = 'tasty chai';\n   *     assert.isNotNull(tea, 'great, time for tea!');\n   *\n   * @name isNotNull\n   * @param {Mixed} value\n   * @param {String} message\n   * @namespace Assert\n   * @api public\n   */\n\n  assert.isNotNull = function (val, msg) {\n    new Assertion(val, msg, assert.isNotNull, true).to.not.equal(null);\n  };\n\n  /**\n   * ### .isNaN\n   *\n   * Asserts that value is NaN.\n   *\n   *     assert.isNaN(NaN, 'NaN is NaN');\n   *\n   * @name isNaN\n   * @param {Mixed} value\n   * @param {String} message\n   * @namespace Assert\n   * @api public\n   */\n\n  assert.isNaN = function (val, msg) {\n    new Assertion(val, msg, assert.isNaN, true).to.be.NaN;\n  };\n\n  /**\n   * ### .isNotNaN\n   *\n   * Asserts that value is not NaN.\n   *\n   *     assert.isNotNaN(4, '4 is not NaN');\n   *\n   * @name isNotNaN\n   * @param {Mixed} value\n   * @param {String} message\n   * @namespace Assert\n   * @api public\n   */\n  assert.isNotNaN = function (val, msg) {\n    new Assertion(val, msg, assert.isNotNaN, true).not.to.be.NaN;\n  };\n\n  /**\n   * ### .exists\n   *\n   * Asserts that the target is neither `null` nor `undefined`.\n   *\n   *     var foo = 'hi';\n   *\n   *     assert.exists(foo, 'foo is neither `null` nor `undefined`');\n   *\n   * @name exists\n   * @param {Mixed} value\n   * @param {String} message\n   * @namespace Assert\n   * @api public\n   */\n\n  assert.exists = function (val, msg) {\n    new Assertion(val, msg, assert.exists, true).to.exist;\n  };\n\n  /**\n   * ### .notExists\n   *\n   * Asserts that the target is either `null` or `undefined`.\n   *\n   *     var bar = null\n   *       , baz;\n   *\n   *     assert.notExists(bar);\n   *     assert.notExists(baz, 'baz is either null or undefined');\n   *\n   * @name notExists\n   * @param {Mixed} value\n   * @param {String} message\n   * @namespace Assert\n   * @api public\n   */\n\n  assert.notExists = function (val, msg) {\n    new Assertion(val, msg, assert.notExists, true).to.not.exist;\n  };\n\n  /**\n   * ### .isUndefined(value, [message])\n   *\n   * Asserts that `value` is `undefined`.\n   *\n   *     var tea;\n   *     assert.isUndefined(tea, 'no tea defined');\n   *\n   * @name isUndefined\n   * @param {Mixed} value\n   * @param {String} message\n   * @namespace Assert\n   * @api public\n   */\n\n  assert.isUndefined = function (val, msg) {\n    new Assertion(val, msg, assert.isUndefined, true).to.equal(undefined);\n  };\n\n  /**\n   * ### .isDefined(value, [message])\n   *\n   * Asserts that `value` is not `undefined`.\n   *\n   *     var tea = 'cup of chai';\n   *     assert.isDefined(tea, 'tea has been defined');\n   *\n   * @name isDefined\n   * @param {Mixed} value\n   * @param {String} message\n   * @namespace Assert\n   * @api public\n   */\n\n  assert.isDefined = function (val, msg) {\n    new Assertion(val, msg, assert.isDefined, true).to.not.equal(undefined);\n  };\n\n  /**\n   * ### .isFunction(value, [message])\n   *\n   * Asserts that `value` is a function.\n   *\n   *     function serveTea() { return 'cup of tea'; };\n   *     assert.isFunction(serveTea, 'great, we can have tea now');\n   *\n   * @name isFunction\n   * @param {Mixed} value\n   * @param {String} message\n   * @namespace Assert\n   * @api public\n   */\n\n  assert.isFunction = function (val, msg) {\n    new Assertion(val, msg, assert.isFunction, true).to.be.a('function');\n  };\n\n  /**\n   * ### .isNotFunction(value, [message])\n   *\n   * Asserts that `value` is _not_ a function.\n   *\n   *     var serveTea = [ 'heat', 'pour', 'sip' ];\n   *     assert.isNotFunction(serveTea, 'great, we have listed the steps');\n   *\n   * @name isNotFunction\n   * @param {Mixed} value\n   * @param {String} message\n   * @namespace Assert\n   * @api public\n   */\n\n  assert.isNotFunction = function (val, msg) {\n    new Assertion(val, msg, assert.isNotFunction, true).to.not.be.a('function');\n  };\n\n  /**\n   * ### .isObject(value, [message])\n   *\n   * Asserts that `value` is an object of type 'Object' (as revealed by `Object.prototype.toString`).\n   * _The assertion does not match subclassed objects._\n   *\n   *     var selection = { name: 'Chai', serve: 'with spices' };\n   *     assert.isObject(selection, 'tea selection is an object');\n   *\n   * @name isObject\n   * @param {Mixed} value\n   * @param {String} message\n   * @namespace Assert\n   * @api public\n   */\n\n  assert.isObject = function (val, msg) {\n    new Assertion(val, msg, assert.isObject, true).to.be.a('object');\n  };\n\n  /**\n   * ### .isNotObject(value, [message])\n   *\n   * Asserts that `value` is _not_ an object of type 'Object' (as revealed by `Object.prototype.toString`).\n   *\n   *     var selection = 'chai'\n   *     assert.isNotObject(selection, 'tea selection is not an object');\n   *     assert.isNotObject(null, 'null is not an object');\n   *\n   * @name isNotObject\n   * @param {Mixed} value\n   * @param {String} message\n   * @namespace Assert\n   * @api public\n   */\n\n  assert.isNotObject = function (val, msg) {\n    new Assertion(val, msg, assert.isNotObject, true).to.not.be.a('object');\n  };\n\n  /**\n   * ### .isArray(value, [message])\n   *\n   * Asserts that `value` is an array.\n   *\n   *     var menu = [ 'green', 'chai', 'oolong' ];\n   *     assert.isArray(menu, 'what kind of tea do we want?');\n   *\n   * @name isArray\n   * @param {Mixed} value\n   * @param {String} message\n   * @namespace Assert\n   * @api public\n   */\n\n  assert.isArray = function (val, msg) {\n    new Assertion(val, msg, assert.isArray, true).to.be.an('array');\n  };\n\n  /**\n   * ### .isNotArray(value, [message])\n   *\n   * Asserts that `value` is _not_ an array.\n   *\n   *     var menu = 'green|chai|oolong';\n   *     assert.isNotArray(menu, 'what kind of tea do we want?');\n   *\n   * @name isNotArray\n   * @param {Mixed} value\n   * @param {String} message\n   * @namespace Assert\n   * @api public\n   */\n\n  assert.isNotArray = function (val, msg) {\n    new Assertion(val, msg, assert.isNotArray, true).to.not.be.an('array');\n  };\n\n  /**\n   * ### .isString(value, [message])\n   *\n   * Asserts that `value` is a string.\n   *\n   *     var teaOrder = 'chai';\n   *     assert.isString(teaOrder, 'order placed');\n   *\n   * @name isString\n   * @param {Mixed} value\n   * @param {String} message\n   * @namespace Assert\n   * @api public\n   */\n\n  assert.isString = function (val, msg) {\n    new Assertion(val, msg, assert.isString, true).to.be.a('string');\n  };\n\n  /**\n   * ### .isNotString(value, [message])\n   *\n   * Asserts that `value` is _not_ a string.\n   *\n   *     var teaOrder = 4;\n   *     assert.isNotString(teaOrder, 'order placed');\n   *\n   * @name isNotString\n   * @param {Mixed} value\n   * @param {String} message\n   * @namespace Assert\n   * @api public\n   */\n\n  assert.isNotString = function (val, msg) {\n    new Assertion(val, msg, assert.isNotString, true).to.not.be.a('string');\n  };\n\n  /**\n   * ### .isNumber(value, [message])\n   *\n   * Asserts that `value` is a number.\n   *\n   *     var cups = 2;\n   *     assert.isNumber(cups, 'how many cups');\n   *\n   * @name isNumber\n   * @param {Number} value\n   * @param {String} message\n   * @namespace Assert\n   * @api public\n   */\n\n  assert.isNumber = function (val, msg) {\n    new Assertion(val, msg, assert.isNumber, true).to.be.a('number');\n  };\n\n  /**\n   * ### .isNotNumber(value, [message])\n   *\n   * Asserts that `value` is _not_ a number.\n   *\n   *     var cups = '2 cups please';\n   *     assert.isNotNumber(cups, 'how many cups');\n   *\n   * @name isNotNumber\n   * @param {Mixed} value\n   * @param {String} message\n   * @namespace Assert\n   * @api public\n   */\n\n  assert.isNotNumber = function (val, msg) {\n    new Assertion(val, msg, assert.isNotNumber, true).to.not.be.a('number');\n  };\n\n   /**\n   * ### .isFinite(value, [message])\n   *\n   * Asserts that `value` is a finite number. Unlike `.isNumber`, this will fail for `NaN` and `Infinity`.\n   *\n   *     var cups = 2;\n   *     assert.isFinite(cups, 'how many cups');\n   *\n   *     assert.isFinite(NaN); // throws\n   *\n   * @name isFinite\n   * @param {Number} value\n   * @param {String} message\n   * @namespace Assert\n   * @api public\n   */\n\n  assert.isFinite = function (val, msg) {\n    new Assertion(val, msg, assert.isFinite, true).to.be.finite;\n  };\n\n  /**\n   * ### .isBoolean(value, [message])\n   *\n   * Asserts that `value` is a boolean.\n   *\n   *     var teaReady = true\n   *       , teaServed = false;\n   *\n   *     assert.isBoolean(teaReady, 'is the tea ready');\n   *     assert.isBoolean(teaServed, 'has tea been served');\n   *\n   * @name isBoolean\n   * @param {Mixed} value\n   * @param {String} message\n   * @namespace Assert\n   * @api public\n   */\n\n  assert.isBoolean = function (val, msg) {\n    new Assertion(val, msg, assert.isBoolean, true).to.be.a('boolean');\n  };\n\n  /**\n   * ### .isNotBoolean(value, [message])\n   *\n   * Asserts that `value` is _not_ a boolean.\n   *\n   *     var teaReady = 'yep'\n   *       , teaServed = 'nope';\n   *\n   *     assert.isNotBoolean(teaReady, 'is the tea ready');\n   *     assert.isNotBoolean(teaServed, 'has tea been served');\n   *\n   * @name isNotBoolean\n   * @param {Mixed} value\n   * @param {String} message\n   * @namespace Assert\n   * @api public\n   */\n\n  assert.isNotBoolean = function (val, msg) {\n    new Assertion(val, msg, assert.isNotBoolean, true).to.not.be.a('boolean');\n  };\n\n  /**\n   * ### .typeOf(value, name, [message])\n   *\n   * Asserts that `value`'s type is `name`, as determined by\n   * `Object.prototype.toString`.\n   *\n   *     assert.typeOf({ tea: 'chai' }, 'object', 'we have an object');\n   *     assert.typeOf(['chai', 'jasmine'], 'array', 'we have an array');\n   *     assert.typeOf('tea', 'string', 'we have a string');\n   *     assert.typeOf(/tea/, 'regexp', 'we have a regular expression');\n   *     assert.typeOf(null, 'null', 'we have a null');\n   *     assert.typeOf(undefined, 'undefined', 'we have an undefined');\n   *\n   * @name typeOf\n   * @param {Mixed} value\n   * @param {String} name\n   * @param {String} message\n   * @namespace Assert\n   * @api public\n   */\n\n  assert.typeOf = function (val, type, msg) {\n    new Assertion(val, msg, assert.typeOf, true).to.be.a(type);\n  };\n\n  /**\n   * ### .notTypeOf(value, name, [message])\n   *\n   * Asserts that `value`'s type is _not_ `name`, as determined by\n   * `Object.prototype.toString`.\n   *\n   *     assert.notTypeOf('tea', 'number', 'strings are not numbers');\n   *\n   * @name notTypeOf\n   * @param {Mixed} value\n   * @param {String} typeof name\n   * @param {String} message\n   * @namespace Assert\n   * @api public\n   */\n\n  assert.notTypeOf = function (val, type, msg) {\n    new Assertion(val, msg, assert.notTypeOf, true).to.not.be.a(type);\n  };\n\n  /**\n   * ### .instanceOf(object, constructor, [message])\n   *\n   * Asserts that `value` is an instance of `constructor`.\n   *\n   *     var Tea = function (name) { this.name = name; }\n   *       , chai = new Tea('chai');\n   *\n   *     assert.instanceOf(chai, Tea, 'chai is an instance of tea');\n   *\n   * @name instanceOf\n   * @param {Object} object\n   * @param {Constructor} constructor\n   * @param {String} message\n   * @namespace Assert\n   * @api public\n   */\n\n  assert.instanceOf = function (val, type, msg) {\n    new Assertion(val, msg, assert.instanceOf, true).to.be.instanceOf(type);\n  };\n\n  /**\n   * ### .notInstanceOf(object, constructor, [message])\n   *\n   * Asserts `value` is not an instance of `constructor`.\n   *\n   *     var Tea = function (name) { this.name = name; }\n   *       , chai = new String('chai');\n   *\n   *     assert.notInstanceOf(chai, Tea, 'chai is not an instance of tea');\n   *\n   * @name notInstanceOf\n   * @param {Object} object\n   * @param {Constructor} constructor\n   * @param {String} message\n   * @namespace Assert\n   * @api public\n   */\n\n  assert.notInstanceOf = function (val, type, msg) {\n    new Assertion(val, msg, assert.notInstanceOf, true)\n      .to.not.be.instanceOf(type);\n  };\n\n  /**\n   * ### .include(haystack, needle, [message])\n   *\n   * Asserts that `haystack` includes `needle`. Can be used to assert the\n   * inclusion of a value in an array, a substring in a string, or a subset of\n   * properties in an object.\n   *\n   *     assert.include([1,2,3], 2, 'array contains value');\n   *     assert.include('foobar', 'foo', 'string contains substring');\n   *     assert.include({ foo: 'bar', hello: 'universe' }, { foo: 'bar' }, 'object contains property');\n   *\n   * Strict equality (===) is used. When asserting the inclusion of a value in\n   * an array, the array is searched for an element that's strictly equal to the\n   * given value. When asserting a subset of properties in an object, the object\n   * is searched for the given property keys, checking that each one is present\n   * and stricty equal to the given property value. For instance:\n   *\n   *     var obj1 = {a: 1}\n   *       , obj2 = {b: 2};\n   *     assert.include([obj1, obj2], obj1);\n   *     assert.include({foo: obj1, bar: obj2}, {foo: obj1});\n   *     assert.include({foo: obj1, bar: obj2}, {foo: obj1, bar: obj2});\n   *\n   * @name include\n   * @param {Array|String} haystack\n   * @param {Mixed} needle\n   * @param {String} message\n   * @namespace Assert\n   * @api public\n   */\n\n  assert.include = function (exp, inc, msg) {\n    new Assertion(exp, msg, assert.include, true).include(inc);\n  };\n\n  /**\n   * ### .notInclude(haystack, needle, [message])\n   *\n   * Asserts that `haystack` does not include `needle`. Can be used to assert\n   * the absence of a value in an array, a substring in a string, or a subset of\n   * properties in an object.\n   *\n   *     assert.notInclude([1,2,3], 4, 'array doesn't contain value');\n   *     assert.notInclude('foobar', 'baz', 'string doesn't contain substring');\n   *     assert.notInclude({ foo: 'bar', hello: 'universe' }, { foo: 'baz' }, 'object doesn't contain property');\n   *\n   * Strict equality (===) is used. When asserting the absence of a value in an\n   * array, the array is searched to confirm the absence of an element that's\n   * strictly equal to the given value. When asserting a subset of properties in\n   * an object, the object is searched to confirm that at least one of the given\n   * property keys is either not present or not strictly equal to the given\n   * property value. For instance:\n   *\n   *     var obj1 = {a: 1}\n   *       , obj2 = {b: 2};\n   *     assert.notInclude([obj1, obj2], {a: 1});\n   *     assert.notInclude({foo: obj1, bar: obj2}, {foo: {a: 1}});\n   *     assert.notInclude({foo: obj1, bar: obj2}, {foo: obj1, bar: {b: 2}});\n   *\n   * @name notInclude\n   * @param {Array|String} haystack\n   * @param {Mixed} needle\n   * @param {String} message\n   * @namespace Assert\n   * @api public\n   */\n\n  assert.notInclude = function (exp, inc, msg) {\n    new Assertion(exp, msg, assert.notInclude, true).not.include(inc);\n  };\n\n  /**\n   * ### .deepInclude(haystack, needle, [message])\n   *\n   * Asserts that `haystack` includes `needle`. Can be used to assert the\n   * inclusion of a value in an array or a subset of properties in an object.\n   * Deep equality is used.\n   *\n   *     var obj1 = {a: 1}\n   *       , obj2 = {b: 2};\n   *     assert.deepInclude([obj1, obj2], {a: 1});\n   *     assert.deepInclude({foo: obj1, bar: obj2}, {foo: {a: 1}});\n   *     assert.deepInclude({foo: obj1, bar: obj2}, {foo: {a: 1}, bar: {b: 2}});\n   *\n   * @name deepInclude\n   * @param {Array|String} haystack\n   * @param {Mixed} needle\n   * @param {String} message\n   * @namespace Assert\n   * @api public\n   */\n\n  assert.deepInclude = function (exp, inc, msg) {\n    new Assertion(exp, msg, assert.deepInclude, true).deep.include(inc);\n  };\n\n  /**\n   * ### .notDeepInclude(haystack, needle, [message])\n   *\n   * Asserts that `haystack` does not include `needle`. Can be used to assert\n   * the absence of a value in an array or a subset of properties in an object.\n   * Deep equality is used.\n   *\n   *     var obj1 = {a: 1}\n   *       , obj2 = {b: 2};\n   *     assert.notDeepInclude([obj1, obj2], {a: 9});\n   *     assert.notDeepInclude({foo: obj1, bar: obj2}, {foo: {a: 9}});\n   *     assert.notDeepInclude({foo: obj1, bar: obj2}, {foo: {a: 1}, bar: {b: 9}});\n   *\n   * @name notDeepInclude\n   * @param {Array|String} haystack\n   * @param {Mixed} needle\n   * @param {String} message\n   * @namespace Assert\n   * @api public\n   */\n\n  assert.notDeepInclude = function (exp, inc, msg) {\n    new Assertion(exp, msg, assert.notDeepInclude, true).not.deep.include(inc);\n  };\n\n  /**\n   * ### .nestedInclude(haystack, needle, [message])\n   * \n   * Asserts that 'haystack' includes 'needle'. \n   * Can be used to assert the inclusion of a subset of properties in an \n   * object.\n   * Enables the use of dot- and bracket-notation for referencing nested \n   * properties.\n   * '[]' and '.' in property names can be escaped using double backslashes.\n   * \n   *     assert.nestedInclude({'.a': {'b': 'x'}}, {'\\\\.a.[b]': 'x'});\n   *     assert.nestedInclude({'a': {'[b]': 'x'}}, {'a.\\\\[b\\\\]': 'x'});\n   * \n   * @name nestedInclude\n   * @param {Object} haystack\n   * @param {Object} needle\n   * @param {String} message\n   * @namespace Assert\n   * @api public \n   */ \n\n  assert.nestedInclude = function (exp, inc, msg) {\n    new Assertion(exp, msg, assert.nestedInclude, true).nested.include(inc);\n  };\n\n  /**\n   * ### .notNestedInclude(haystack, needle, [message])\n   * \n   * Asserts that 'haystack' does not include 'needle'. \n   * Can be used to assert the absence of a subset of properties in an \n   * object.\n   * Enables the use of dot- and bracket-notation for referencing nested \n   * properties. \n   * '[]' and '.' in property names can be escaped using double backslashes.\n   * \n   *     assert.notNestedInclude({'.a': {'b': 'x'}}, {'\\\\.a.b': 'y'});\n   *     assert.notNestedInclude({'a': {'[b]': 'x'}}, {'a.\\\\[b\\\\]': 'y'});\n   * \n   * @name notNestedInclude\n   * @param {Object} haystack\n   * @param {Object} needle\n   * @param {String} message\n   * @namespace Assert\n   * @api public \n   */ \n\n  assert.notNestedInclude = function (exp, inc, msg) {\n    new Assertion(exp, msg, assert.notNestedInclude, true)\n      .not.nested.include(inc);\n  };\n\n  /**\n   * ### .deepNestedInclude(haystack, needle, [message])\n   * \n   * Asserts that 'haystack' includes 'needle'.\n   * Can be used to assert the inclusion of a subset of properties in an \n   * object while checking for deep equality.\n   * Enables the use of dot- and bracket-notation for referencing nested \n   * properties.\n   * '[]' and '.' in property names can be escaped using double backslashes.\n   * \n   *     assert.deepNestedInclude({a: {b: [{x: 1}]}}, {'a.b[0]': {x: 1}});\n   *     assert.deepNestedInclude({'.a': {'[b]': {x: 1}}}, {'\\\\.a.\\\\[b\\\\]': {x: 1}});\n   *    \n   * @name deepNestedInclude\n   * @param {Object} haystack\n   * @param {Object} needle\n   * @param {String} message\n   * @namespace Assert\n   * @api public \n   */\n\n  assert.deepNestedInclude = function(exp, inc, msg) {\n    new Assertion(exp, msg, assert.deepNestedInclude, true)\n      .deep.nested.include(inc);\n  };\n\n  /**\n   * ### .notDeepNestedInclude(haystack, needle, [message])\n   * \n   * Asserts that 'haystack' does not include 'needle'.\n   * Can be used to assert the absence of a subset of properties in an \n   * object while checking for deep equality.\n   * Enables the use of dot- and bracket-notation for referencing nested \n   * properties.\n   * '[]' and '.' in property names can be escaped using double backslashes.\n   * \n   *     assert.notDeepNestedInclude({a: {b: [{x: 1}]}}, {'a.b[0]': {y: 1}})\n   *     assert.notDeepNestedInclude({'.a': {'[b]': {x: 1}}}, {'\\\\.a.\\\\[b\\\\]': {y: 2}});\n   *    \n   * @name notDeepNestedInclude\n   * @param {Object} haystack\n   * @param {Object} needle\n   * @param {String} message\n   * @namespace Assert\n   * @api public \n   */\n\n  assert.notDeepNestedInclude = function(exp, inc, msg) {\n    new Assertion(exp, msg, assert.notDeepNestedInclude, true)\n      .not.deep.nested.include(inc);\n  };\n\n  /**\n   * ### .ownInclude(haystack, needle, [message])\n   * \n   * Asserts that 'haystack' includes 'needle'.\n   * Can be used to assert the inclusion of a subset of properties in an \n   * object while ignoring inherited properties.\n   * \n   *     assert.ownInclude({ a: 1 }, { a: 1 });\n   * \n   * @name ownInclude\n   * @param {Object} haystack\n   * @param {Object} needle\n   * @param {String} message\n   * @namespace Assert\n   * @api public\n   */\n\n  assert.ownInclude = function(exp, inc, msg) {\n    new Assertion(exp, msg, assert.ownInclude, true).own.include(inc);\n  };\n\n  /**\n   * ### .notOwnInclude(haystack, needle, [message])\n   * \n   * Asserts that 'haystack' includes 'needle'.\n   * Can be used to assert the absence of a subset of properties in an \n   * object while ignoring inherited properties.\n   * \n   *     Object.prototype.b = 2;\n   * \n   *     assert.notOwnInclude({ a: 1 }, { b: 2 });\n   * \n   * @name notOwnInclude\n   * @param {Object} haystack\n   * @param {Object} needle\n   * @param {String} message\n   * @namespace Assert\n   * @api public\n   */\n\n  assert.notOwnInclude = function(exp, inc, msg) {\n    new Assertion(exp, msg, assert.notOwnInclude, true).not.own.include(inc);\n  };\n\n  /**\n   * ### .deepOwnInclude(haystack, needle, [message])\n   * \n   * Asserts that 'haystack' includes 'needle'.\n   * Can be used to assert the inclusion of a subset of properties in an \n   * object while ignoring inherited properties and checking for deep equality.\n   * \n   *      assert.deepOwnInclude({a: {b: 2}}, {a: {b: 2}});\n   *      \n   * @name deepOwnInclude\n   * @param {Object} haystack\n   * @param {Object} needle\n   * @param {String} message\n   * @namespace Assert\n   * @api public\n   */\n\n  assert.deepOwnInclude = function(exp, inc, msg) {\n    new Assertion(exp, msg, assert.deepOwnInclude, true)\n      .deep.own.include(inc);\n  };\n\n   /**\n   * ### .notDeepOwnInclude(haystack, needle, [message])\n   * \n   * Asserts that 'haystack' includes 'needle'.\n   * Can be used to assert the absence of a subset of properties in an \n   * object while ignoring inherited properties and checking for deep equality.\n   * \n   *      assert.notDeepOwnInclude({a: {b: 2}}, {a: {c: 3}});\n   *      \n   * @name notDeepOwnInclude\n   * @param {Object} haystack\n   * @param {Object} needle\n   * @param {String} message\n   * @namespace Assert\n   * @api public\n   */\n\n  assert.notDeepOwnInclude = function(exp, inc, msg) {\n    new Assertion(exp, msg, assert.notDeepOwnInclude, true)\n      .not.deep.own.include(inc);\n  };\n\n  /**\n   * ### .match(value, regexp, [message])\n   *\n   * Asserts that `value` matches the regular expression `regexp`.\n   *\n   *     assert.match('foobar', /^foo/, 'regexp matches');\n   *\n   * @name match\n   * @param {Mixed} value\n   * @param {RegExp} regexp\n   * @param {String} message\n   * @namespace Assert\n   * @api public\n   */\n\n  assert.match = function (exp, re, msg) {\n    new Assertion(exp, msg, assert.match, true).to.match(re);\n  };\n\n  /**\n   * ### .notMatch(value, regexp, [message])\n   *\n   * Asserts that `value` does not match the regular expression `regexp`.\n   *\n   *     assert.notMatch('foobar', /^foo/, 'regexp does not match');\n   *\n   * @name notMatch\n   * @param {Mixed} value\n   * @param {RegExp} regexp\n   * @param {String} message\n   * @namespace Assert\n   * @api public\n   */\n\n  assert.notMatch = function (exp, re, msg) {\n    new Assertion(exp, msg, assert.notMatch, true).to.not.match(re);\n  };\n\n  /**\n   * ### .property(object, property, [message])\n   *\n   * Asserts that `object` has a direct or inherited property named by\n   * `property`.\n   *\n   *     assert.property({ tea: { green: 'matcha' }}, 'tea');\n   *     assert.property({ tea: { green: 'matcha' }}, 'toString');\n   *\n   * @name property\n   * @param {Object} object\n   * @param {String} property\n   * @param {String} message\n   * @namespace Assert\n   * @api public\n   */\n\n  assert.property = function (obj, prop, msg) {\n    new Assertion(obj, msg, assert.property, true).to.have.property(prop);\n  };\n\n  /**\n   * ### .notProperty(object, property, [message])\n   *\n   * Asserts that `object` does _not_ have a direct or inherited property named\n   * by `property`.\n   *\n   *     assert.notProperty({ tea: { green: 'matcha' }}, 'coffee');\n   *\n   * @name notProperty\n   * @param {Object} object\n   * @param {String} property\n   * @param {String} message\n   * @namespace Assert\n   * @api public\n   */\n\n  assert.notProperty = function (obj, prop, msg) {\n    new Assertion(obj, msg, assert.notProperty, true)\n      .to.not.have.property(prop);\n  };\n\n  /**\n   * ### .propertyVal(object, property, value, [message])\n   *\n   * Asserts that `object` has a direct or inherited property named by\n   * `property` with a value given by `value`. Uses a strict equality check\n   * (===).\n   *\n   *     assert.propertyVal({ tea: 'is good' }, 'tea', 'is good');\n   *\n   * @name propertyVal\n   * @param {Object} object\n   * @param {String} property\n   * @param {Mixed} value\n   * @param {String} message\n   * @namespace Assert\n   * @api public\n   */\n\n  assert.propertyVal = function (obj, prop, val, msg) {\n    new Assertion(obj, msg, assert.propertyVal, true)\n      .to.have.property(prop, val);\n  };\n\n  /**\n   * ### .notPropertyVal(object, property, value, [message])\n   *\n   * Asserts that `object` does _not_ have a direct or inherited property named\n   * by `property` with value given by `value`. Uses a strict equality check\n   * (===).\n   *\n   *     assert.notPropertyVal({ tea: 'is good' }, 'tea', 'is bad');\n   *     assert.notPropertyVal({ tea: 'is good' }, 'coffee', 'is good');\n   *\n   * @name notPropertyVal\n   * @param {Object} object\n   * @param {String} property\n   * @param {Mixed} value\n   * @param {String} message\n   * @namespace Assert\n   * @api public\n   */\n\n  assert.notPropertyVal = function (obj, prop, val, msg) {\n    new Assertion(obj, msg, assert.notPropertyVal, true)\n      .to.not.have.property(prop, val);\n  };\n\n  /**\n   * ### .deepPropertyVal(object, property, value, [message])\n   *\n   * Asserts that `object` has a direct or inherited property named by\n   * `property` with a value given by `value`. Uses a deep equality check.\n   *\n   *     assert.deepPropertyVal({ tea: { green: 'matcha' } }, 'tea', { green: 'matcha' });\n   *\n   * @name deepPropertyVal\n   * @param {Object} object\n   * @param {String} property\n   * @param {Mixed} value\n   * @param {String} message\n   * @namespace Assert\n   * @api public\n   */\n\n  assert.deepPropertyVal = function (obj, prop, val, msg) {\n    new Assertion(obj, msg, assert.deepPropertyVal, true)\n      .to.have.deep.property(prop, val);\n  };\n\n  /**\n   * ### .notDeepPropertyVal(object, property, value, [message])\n   *\n   * Asserts that `object` does _not_ have a direct or inherited property named\n   * by `property` with value given by `value`. Uses a deep equality check.\n   *\n   *     assert.notDeepPropertyVal({ tea: { green: 'matcha' } }, 'tea', { black: 'matcha' });\n   *     assert.notDeepPropertyVal({ tea: { green: 'matcha' } }, 'tea', { green: 'oolong' });\n   *     assert.notDeepPropertyVal({ tea: { green: 'matcha' } }, 'coffee', { green: 'matcha' });\n   *\n   * @name notDeepPropertyVal\n   * @param {Object} object\n   * @param {String} property\n   * @param {Mixed} value\n   * @param {String} message\n   * @namespace Assert\n   * @api public\n   */\n\n  assert.notDeepPropertyVal = function (obj, prop, val, msg) {\n    new Assertion(obj, msg, assert.notDeepPropertyVal, true)\n      .to.not.have.deep.property(prop, val);\n  };\n\n  /**\n   * ### .ownProperty(object, property, [message])\n   *\n   * Asserts that `object` has a direct property named by `property`. Inherited\n   * properties aren't checked.\n   *\n   *     assert.ownProperty({ tea: { green: 'matcha' }}, 'tea');\n   *\n   * @name ownProperty\n   * @param {Object} object\n   * @param {String} property\n   * @param {String} message\n   * @api public\n   */\n\n  assert.ownProperty = function (obj, prop, msg) {\n    new Assertion(obj, msg, assert.ownProperty, true)\n      .to.have.own.property(prop);\n  };\n\n  /**\n   * ### .notOwnProperty(object, property, [message])\n   *\n   * Asserts that `object` does _not_ have a direct property named by\n   * `property`. Inherited properties aren't checked.\n   *\n   *     assert.notOwnProperty({ tea: { green: 'matcha' }}, 'coffee');\n   *     assert.notOwnProperty({}, 'toString');\n   *\n   * @name notOwnProperty\n   * @param {Object} object\n   * @param {String} property\n   * @param {String} message\n   * @api public\n   */\n\n  assert.notOwnProperty = function (obj, prop, msg) {\n    new Assertion(obj, msg, assert.notOwnProperty, true)\n      .to.not.have.own.property(prop);\n  };\n\n  /**\n   * ### .ownPropertyVal(object, property, value, [message])\n   *\n   * Asserts that `object` has a direct property named by `property` and a value\n   * equal to the provided `value`. Uses a strict equality check (===).\n   * Inherited properties aren't checked.\n   *\n   *     assert.ownPropertyVal({ coffee: 'is good'}, 'coffee', 'is good');\n   *\n   * @name ownPropertyVal\n   * @param {Object} object\n   * @param {String} property\n   * @param {Mixed} value\n   * @param {String} message\n   * @api public\n   */\n\n  assert.ownPropertyVal = function (obj, prop, value, msg) {\n    new Assertion(obj, msg, assert.ownPropertyVal, true)\n      .to.have.own.property(prop, value);\n  };\n\n  /**\n   * ### .notOwnPropertyVal(object, property, value, [message])\n   *\n   * Asserts that `object` does _not_ have a direct property named by `property`\n   * with a value equal to the provided `value`. Uses a strict equality check\n   * (===). Inherited properties aren't checked.\n   *\n   *     assert.notOwnPropertyVal({ tea: 'is better'}, 'tea', 'is worse');\n   *     assert.notOwnPropertyVal({}, 'toString', Object.prototype.toString);\n   *\n   * @name notOwnPropertyVal\n   * @param {Object} object\n   * @param {String} property\n   * @param {Mixed} value\n   * @param {String} message\n   * @api public\n   */\n\n  assert.notOwnPropertyVal = function (obj, prop, value, msg) {\n    new Assertion(obj, msg, assert.notOwnPropertyVal, true)\n      .to.not.have.own.property(prop, value);\n  };\n\n  /**\n   * ### .deepOwnPropertyVal(object, property, value, [message])\n   *\n   * Asserts that `object` has a direct property named by `property` and a value\n   * equal to the provided `value`. Uses a deep equality check. Inherited\n   * properties aren't checked.\n   *\n   *     assert.deepOwnPropertyVal({ tea: { green: 'matcha' } }, 'tea', { green: 'matcha' });\n   *\n   * @name deepOwnPropertyVal\n   * @param {Object} object\n   * @param {String} property\n   * @param {Mixed} value\n   * @param {String} message\n   * @api public\n   */\n\n  assert.deepOwnPropertyVal = function (obj, prop, value, msg) {\n    new Assertion(obj, msg, assert.deepOwnPropertyVal, true)\n      .to.have.deep.own.property(prop, value);\n  };\n\n  /**\n   * ### .notDeepOwnPropertyVal(object, property, value, [message])\n   *\n   * Asserts that `object` does _not_ have a direct property named by `property`\n   * with a value equal to the provided `value`. Uses a deep equality check.\n   * Inherited properties aren't checked.\n   *\n   *     assert.notDeepOwnPropertyVal({ tea: { green: 'matcha' } }, 'tea', { black: 'matcha' });\n   *     assert.notDeepOwnPropertyVal({ tea: { green: 'matcha' } }, 'tea', { green: 'oolong' });\n   *     assert.notDeepOwnPropertyVal({ tea: { green: 'matcha' } }, 'coffee', { green: 'matcha' });\n   *     assert.notDeepOwnPropertyVal({}, 'toString', Object.prototype.toString);\n   *\n   * @name notDeepOwnPropertyVal\n   * @param {Object} object\n   * @param {String} property\n   * @param {Mixed} value\n   * @param {String} message\n   * @api public\n   */\n\n  assert.notDeepOwnPropertyVal = function (obj, prop, value, msg) {\n    new Assertion(obj, msg, assert.notDeepOwnPropertyVal, true)\n      .to.not.have.deep.own.property(prop, value);\n  };\n\n  /**\n   * ### .nestedProperty(object, property, [message])\n   *\n   * Asserts that `object` has a direct or inherited property named by\n   * `property`, which can be a string using dot- and bracket-notation for\n   * nested reference.\n   *\n   *     assert.nestedProperty({ tea: { green: 'matcha' }}, 'tea.green');\n   *\n   * @name nestedProperty\n   * @param {Object} object\n   * @param {String} property\n   * @param {String} message\n   * @namespace Assert\n   * @api public\n   */\n\n  assert.nestedProperty = function (obj, prop, msg) {\n    new Assertion(obj, msg, assert.nestedProperty, true)\n      .to.have.nested.property(prop);\n  };\n\n  /**\n   * ### .notNestedProperty(object, property, [message])\n   *\n   * Asserts that `object` does _not_ have a property named by `property`, which\n   * can be a string using dot- and bracket-notation for nested reference. The\n   * property cannot exist on the object nor anywhere in its prototype chain.\n   *\n   *     assert.notNestedProperty({ tea: { green: 'matcha' }}, 'tea.oolong');\n   *\n   * @name notNestedProperty\n   * @param {Object} object\n   * @param {String} property\n   * @param {String} message\n   * @namespace Assert\n   * @api public\n   */\n\n  assert.notNestedProperty = function (obj, prop, msg) {\n    new Assertion(obj, msg, assert.notNestedProperty, true)\n      .to.not.have.nested.property(prop);\n  };\n\n  /**\n   * ### .nestedPropertyVal(object, property, value, [message])\n   *\n   * Asserts that `object` has a property named by `property` with value given\n   * by `value`. `property` can use dot- and bracket-notation for nested\n   * reference. Uses a strict equality check (===).\n   *\n   *     assert.nestedPropertyVal({ tea: { green: 'matcha' }}, 'tea.green', 'matcha');\n   *\n   * @name nestedPropertyVal\n   * @param {Object} object\n   * @param {String} property\n   * @param {Mixed} value\n   * @param {String} message\n   * @namespace Assert\n   * @api public\n   */\n\n  assert.nestedPropertyVal = function (obj, prop, val, msg) {\n    new Assertion(obj, msg, assert.nestedPropertyVal, true)\n      .to.have.nested.property(prop, val);\n  };\n\n  /**\n   * ### .notNestedPropertyVal(object, property, value, [message])\n   *\n   * Asserts that `object` does _not_ have a property named by `property` with\n   * value given by `value`. `property` can use dot- and bracket-notation for\n   * nested reference. Uses a strict equality check (===).\n   *\n   *     assert.notNestedPropertyVal({ tea: { green: 'matcha' }}, 'tea.green', 'konacha');\n   *     assert.notNestedPropertyVal({ tea: { green: 'matcha' }}, 'coffee.green', 'matcha');\n   *\n   * @name notNestedPropertyVal\n   * @param {Object} object\n   * @param {String} property\n   * @param {Mixed} value\n   * @param {String} message\n   * @namespace Assert\n   * @api public\n   */\n\n  assert.notNestedPropertyVal = function (obj, prop, val, msg) {\n    new Assertion(obj, msg, assert.notNestedPropertyVal, true)\n      .to.not.have.nested.property(prop, val);\n  };\n\n  /**\n   * ### .deepNestedPropertyVal(object, property, value, [message])\n   *\n   * Asserts that `object` has a property named by `property` with a value given\n   * by `value`. `property` can use dot- and bracket-notation for nested\n   * reference. Uses a deep equality check.\n   *\n   *     assert.deepNestedPropertyVal({ tea: { green: { matcha: 'yum' } } }, 'tea.green', { matcha: 'yum' });\n   *\n   * @name deepNestedPropertyVal\n   * @param {Object} object\n   * @param {String} property\n   * @param {Mixed} value\n   * @param {String} message\n   * @namespace Assert\n   * @api public\n   */\n\n  assert.deepNestedPropertyVal = function (obj, prop, val, msg) {\n    new Assertion(obj, msg, assert.deepNestedPropertyVal, true)\n      .to.have.deep.nested.property(prop, val);\n  };\n\n  /**\n   * ### .notDeepNestedPropertyVal(object, property, value, [message])\n   *\n   * Asserts that `object` does _not_ have a property named by `property` with\n   * value given by `value`. `property` can use dot- and bracket-notation for\n   * nested reference. Uses a deep equality check.\n   *\n   *     assert.notDeepNestedPropertyVal({ tea: { green: { matcha: 'yum' } } }, 'tea.green', { oolong: 'yum' });\n   *     assert.notDeepNestedPropertyVal({ tea: { green: { matcha: 'yum' } } }, 'tea.green', { matcha: 'yuck' });\n   *     assert.notDeepNestedPropertyVal({ tea: { green: { matcha: 'yum' } } }, 'tea.black', { matcha: 'yum' });\n   *\n   * @name notDeepNestedPropertyVal\n   * @param {Object} object\n   * @param {String} property\n   * @param {Mixed} value\n   * @param {String} message\n   * @namespace Assert\n   * @api public\n   */\n\n  assert.notDeepNestedPropertyVal = function (obj, prop, val, msg) {\n    new Assertion(obj, msg, assert.notDeepNestedPropertyVal, true)\n      .to.not.have.deep.nested.property(prop, val);\n  }\n\n  /**\n   * ### .lengthOf(object, length, [message])\n   *\n   * Asserts that `object` has a `length` property with the expected value.\n   *\n   *     assert.lengthOf([1,2,3], 3, 'array has length of 3');\n   *     assert.lengthOf('foobar', 6, 'string has length of 6');\n   *\n   * @name lengthOf\n   * @param {Mixed} object\n   * @param {Number} length\n   * @param {String} message\n   * @namespace Assert\n   * @api public\n   */\n\n  assert.lengthOf = function (exp, len, msg) {\n    new Assertion(exp, msg, assert.lengthOf, true).to.have.lengthOf(len);\n  };\n\n  /**\n   * ### .hasAnyKeys(object, [keys], [message])\n   *\n   * Asserts that `object` has at least one of the `keys` provided.\n   * You can also provide a single object instead of a `keys` array and its keys\n   * will be used as the expected set of keys.\n   *\n   *     assert.hasAnyKeys({foo: 1, bar: 2, baz: 3}, ['foo', 'iDontExist', 'baz']);\n   *     assert.hasAnyKeys({foo: 1, bar: 2, baz: 3}, {foo: 30, iDontExist: 99, baz: 1337});\n   *     assert.hasAnyKeys(new Map([[{foo: 1}, 'bar'], ['key', 'value']]), [{foo: 1}, 'key']);\n   *     assert.hasAnyKeys(new Set([{foo: 'bar'}, 'anotherKey']), [{foo: 'bar'}, 'anotherKey']);\n   *\n   * @name hasAnyKeys\n   * @param {Mixed} object\n   * @param {Array|Object} keys\n   * @param {String} message\n   * @namespace Assert\n   * @api public\n   */\n\n  assert.hasAnyKeys = function (obj, keys, msg) {\n    new Assertion(obj, msg, assert.hasAnyKeys, true).to.have.any.keys(keys);\n  }\n\n  /**\n   * ### .hasAllKeys(object, [keys], [message])\n   *\n   * Asserts that `object` has all and only all of the `keys` provided.\n   * You can also provide a single object instead of a `keys` array and its keys\n   * will be used as the expected set of keys.\n   *\n   *     assert.hasAllKeys({foo: 1, bar: 2, baz: 3}, ['foo', 'bar', 'baz']);\n   *     assert.hasAllKeys({foo: 1, bar: 2, baz: 3}, {foo: 30, bar: 99, baz: 1337]);\n   *     assert.hasAllKeys(new Map([[{foo: 1}, 'bar'], ['key', 'value']]), [{foo: 1}, 'key']);\n   *     assert.hasAllKeys(new Set([{foo: 'bar'}, 'anotherKey'], [{foo: 'bar'}, 'anotherKey']);\n   *\n   * @name hasAllKeys\n   * @param {Mixed} object\n   * @param {String[]} keys\n   * @param {String} message\n   * @namespace Assert\n   * @api public\n   */\n\n  assert.hasAllKeys = function (obj, keys, msg) {\n    new Assertion(obj, msg, assert.hasAllKeys, true).to.have.all.keys(keys);\n  }\n\n  /**\n   * ### .containsAllKeys(object, [keys], [message])\n   *\n   * Asserts that `object` has all of the `keys` provided but may have more keys not listed.\n   * You can also provide a single object instead of a `keys` array and its keys\n   * will be used as the expected set of keys.\n   *\n   *     assert.containsAllKeys({foo: 1, bar: 2, baz: 3}, ['foo', 'baz']);\n   *     assert.containsAllKeys({foo: 1, bar: 2, baz: 3}, ['foo', 'bar', 'baz']);\n   *     assert.containsAllKeys({foo: 1, bar: 2, baz: 3}, {foo: 30, baz: 1337});\n   *     assert.containsAllKeys({foo: 1, bar: 2, baz: 3}, {foo: 30, bar: 99, baz: 1337});\n   *     assert.containsAllKeys(new Map([[{foo: 1}, 'bar'], ['key', 'value']]), [{foo: 1}]);\n   *     assert.containsAllKeys(new Map([[{foo: 1}, 'bar'], ['key', 'value']]), [{foo: 1}, 'key']);\n   *     assert.containsAllKeys(new Set([{foo: 'bar'}, 'anotherKey'], [{foo: 'bar'}]);\n   *     assert.containsAllKeys(new Set([{foo: 'bar'}, 'anotherKey'], [{foo: 'bar'}, 'anotherKey']);\n   *\n   * @name containsAllKeys\n   * @param {Mixed} object\n   * @param {String[]} keys\n   * @param {String} message\n   * @namespace Assert\n   * @api public\n   */\n\n  assert.containsAllKeys = function (obj, keys, msg) {\n    new Assertion(obj, msg, assert.containsAllKeys, true)\n      .to.contain.all.keys(keys);\n  }\n\n  /**\n   * ### .doesNotHaveAnyKeys(object, [keys], [message])\n   *\n   * Asserts that `object` has none of the `keys` provided.\n   * You can also provide a single object instead of a `keys` array and its keys\n   * will be used as the expected set of keys.\n   *\n   *     assert.doesNotHaveAnyKeys({foo: 1, bar: 2, baz: 3}, ['one', 'two', 'example']);\n   *     assert.doesNotHaveAnyKeys({foo: 1, bar: 2, baz: 3}, {one: 1, two: 2, example: 'foo'});\n   *     assert.doesNotHaveAnyKeys(new Map([[{foo: 1}, 'bar'], ['key', 'value']]), [{one: 'two'}, 'example']);\n   *     assert.doesNotHaveAnyKeys(new Set([{foo: 'bar'}, 'anotherKey'], [{one: 'two'}, 'example']);\n   *\n   * @name doesNotHaveAnyKeys\n   * @param {Mixed} object\n   * @param {String[]} keys\n   * @param {String} message\n   * @namespace Assert\n   * @api public\n   */\n\n  assert.doesNotHaveAnyKeys = function (obj, keys, msg) {\n    new Assertion(obj, msg, assert.doesNotHaveAnyKeys, true)\n      .to.not.have.any.keys(keys);\n  }\n\n  /**\n   * ### .doesNotHaveAllKeys(object, [keys], [message])\n   *\n   * Asserts that `object` does not have at least one of the `keys` provided.\n   * You can also provide a single object instead of a `keys` array and its keys\n   * will be used as the expected set of keys.\n   *\n   *     assert.doesNotHaveAllKeys({foo: 1, bar: 2, baz: 3}, ['one', 'two', 'example']);\n   *     assert.doesNotHaveAllKeys({foo: 1, bar: 2, baz: 3}, {one: 1, two: 2, example: 'foo'});\n   *     assert.doesNotHaveAllKeys(new Map([[{foo: 1}, 'bar'], ['key', 'value']]), [{one: 'two'}, 'example']);\n   *     assert.doesNotHaveAllKeys(new Set([{foo: 'bar'}, 'anotherKey'], [{one: 'two'}, 'example']);\n   *\n   * @name doesNotHaveAllKeys\n   * @param {Mixed} object\n   * @param {String[]} keys\n   * @param {String} message\n   * @namespace Assert\n   * @api public\n   */\n\n  assert.doesNotHaveAllKeys = function (obj, keys, msg) {\n    new Assertion(obj, msg, assert.doesNotHaveAllKeys, true)\n      .to.not.have.all.keys(keys);\n  }\n\n  /**\n   * ### .hasAnyDeepKeys(object, [keys], [message])\n   *\n   * Asserts that `object` has at least one of the `keys` provided.\n   * Since Sets and Maps can have objects as keys you can use this assertion to perform\n   * a deep comparison.\n   * You can also provide a single object instead of a `keys` array and its keys\n   * will be used as the expected set of keys.\n   *\n   *     assert.hasAnyDeepKeys(new Map([[{one: 'one'}, 'valueOne'], [1, 2]]), {one: 'one'});\n   *     assert.hasAnyDeepKeys(new Map([[{one: 'one'}, 'valueOne'], [1, 2]]), [{one: 'one'}, {two: 'two'}]);\n   *     assert.hasAnyDeepKeys(new Map([[{one: 'one'}, 'valueOne'], [{two: 'two'}, 'valueTwo']]), [{one: 'one'}, {two: 'two'}]);\n   *     assert.hasAnyDeepKeys(new Set([{one: 'one'}, {two: 'two'}]), {one: 'one'});\n   *     assert.hasAnyDeepKeys(new Set([{one: 'one'}, {two: 'two'}]), [{one: 'one'}, {three: 'three'}]);\n   *     assert.hasAnyDeepKeys(new Set([{one: 'one'}, {two: 'two'}]), [{one: 'one'}, {two: 'two'}]);\n   *\n   * @name doesNotHaveAllKeys\n   * @param {Mixed} object\n   * @param {Array|Object} keys\n   * @param {String} message\n   * @namespace Assert\n   * @api public\n   */\n\n  assert.hasAnyDeepKeys = function (obj, keys, msg) {\n    new Assertion(obj, msg, assert.hasAnyDeepKeys, true)\n      .to.have.any.deep.keys(keys);\n  }\n\n /**\n   * ### .hasAllDeepKeys(object, [keys], [message])\n   *\n   * Asserts that `object` has all and only all of the `keys` provided.\n   * Since Sets and Maps can have objects as keys you can use this assertion to perform\n   * a deep comparison.\n   * You can also provide a single object instead of a `keys` array and its keys\n   * will be used as the expected set of keys.\n   *\n   *     assert.hasAllDeepKeys(new Map([[{one: 'one'}, 'valueOne']]), {one: 'one'});\n   *     assert.hasAllDeepKeys(new Map([[{one: 'one'}, 'valueOne'], [{two: 'two'}, 'valueTwo']]), [{one: 'one'}, {two: 'two'}]);\n   *     assert.hasAllDeepKeys(new Set([{one: 'one'}]), {one: 'one'});\n   *     assert.hasAllDeepKeys(new Set([{one: 'one'}, {two: 'two'}]), [{one: 'one'}, {two: 'two'}]);\n   *\n   * @name hasAllDeepKeys\n   * @param {Mixed} object\n   * @param {Array|Object} keys\n   * @param {String} message\n   * @namespace Assert\n   * @api public\n   */\n\n  assert.hasAllDeepKeys = function (obj, keys, msg) {\n    new Assertion(obj, msg, assert.hasAllDeepKeys, true)\n      .to.have.all.deep.keys(keys);\n  }\n\n /**\n   * ### .containsAllDeepKeys(object, [keys], [message])\n   *\n   * Asserts that `object` contains all of the `keys` provided.\n   * Since Sets and Maps can have objects as keys you can use this assertion to perform\n   * a deep comparison.\n   * You can also provide a single object instead of a `keys` array and its keys\n   * will be used as the expected set of keys.\n   *\n   *     assert.containsAllDeepKeys(new Map([[{one: 'one'}, 'valueOne'], [1, 2]]), {one: 'one'});\n   *     assert.containsAllDeepKeys(new Map([[{one: 'one'}, 'valueOne'], [{two: 'two'}, 'valueTwo']]), [{one: 'one'}, {two: 'two'}]);\n   *     assert.containsAllDeepKeys(new Set([{one: 'one'}, {two: 'two'}]), {one: 'one'});\n   *     assert.containsAllDeepKeys(new Set([{one: 'one'}, {two: 'two'}]), [{one: 'one'}, {two: 'two'}]);\n   *\n   * @name containsAllDeepKeys\n   * @param {Mixed} object\n   * @param {Array|Object} keys\n   * @param {String} message\n   * @namespace Assert\n   * @api public\n   */\n\n  assert.containsAllDeepKeys = function (obj, keys, msg) {\n    new Assertion(obj, msg, assert.containsAllDeepKeys, true)\n      .to.contain.all.deep.keys(keys);\n  }\n\n /**\n   * ### .doesNotHaveAnyDeepKeys(object, [keys], [message])\n   *\n   * Asserts that `object` has none of the `keys` provided.\n   * Since Sets and Maps can have objects as keys you can use this assertion to perform\n   * a deep comparison.\n   * You can also provide a single object instead of a `keys` array and its keys\n   * will be used as the expected set of keys.\n   *\n   *     assert.doesNotHaveAnyDeepKeys(new Map([[{one: 'one'}, 'valueOne'], [1, 2]]), {thisDoesNot: 'exist'});\n   *     assert.doesNotHaveAnyDeepKeys(new Map([[{one: 'one'}, 'valueOne'], [{two: 'two'}, 'valueTwo']]), [{twenty: 'twenty'}, {fifty: 'fifty'}]);\n   *     assert.doesNotHaveAnyDeepKeys(new Set([{one: 'one'}, {two: 'two'}]), {twenty: 'twenty'});\n   *     assert.doesNotHaveAnyDeepKeys(new Set([{one: 'one'}, {two: 'two'}]), [{twenty: 'twenty'}, {fifty: 'fifty'}]);\n   *\n   * @name doesNotHaveAnyDeepKeys\n   * @param {Mixed} object\n   * @param {Array|Object} keys\n   * @param {String} message\n   * @namespace Assert\n   * @api public\n   */\n\n  assert.doesNotHaveAnyDeepKeys = function (obj, keys, msg) {\n    new Assertion(obj, msg, assert.doesNotHaveAnyDeepKeys, true)\n      .to.not.have.any.deep.keys(keys);\n  }\n\n /**\n   * ### .doesNotHaveAllDeepKeys(object, [keys], [message])\n   *\n   * Asserts that `object` does not have at least one of the `keys` provided.\n   * Since Sets and Maps can have objects as keys you can use this assertion to perform\n   * a deep comparison.\n   * You can also provide a single object instead of a `keys` array and its keys\n   * will be used as the expected set of keys.\n   *\n   *     assert.doesNotHaveAllDeepKeys(new Map([[{one: 'one'}, 'valueOne'], [1, 2]]), {thisDoesNot: 'exist'});\n   *     assert.doesNotHaveAllDeepKeys(new Map([[{one: 'one'}, 'valueOne'], [{two: 'two'}, 'valueTwo']]), [{twenty: 'twenty'}, {one: 'one'}]);\n   *     assert.doesNotHaveAllDeepKeys(new Set([{one: 'one'}, {two: 'two'}]), {twenty: 'twenty'});\n   *     assert.doesNotHaveAllDeepKeys(new Set([{one: 'one'}, {two: 'two'}]), [{one: 'one'}, {fifty: 'fifty'}]);\n   *\n   * @name doesNotHaveAllDeepKeys\n   * @param {Mixed} object\n   * @param {Array|Object} keys\n   * @param {String} message\n   * @namespace Assert\n   * @api public\n   */\n\n  assert.doesNotHaveAllDeepKeys = function (obj, keys, msg) {\n    new Assertion(obj, msg, assert.doesNotHaveAllDeepKeys, true)\n      .to.not.have.all.deep.keys(keys);\n  }\n\n /**\n   * ### .throws(fn, [errorLike/string/regexp], [string/regexp], [message])\n   *\n   * If `errorLike` is an `Error` constructor, asserts that `fn` will throw an error that is an\n   * instance of `errorLike`.\n   * If `errorLike` is an `Error` instance, asserts that the error thrown is the same\n   * instance as `errorLike`.\n   * If `errMsgMatcher` is provided, it also asserts that the error thrown will have a\n   * message matching `errMsgMatcher`.\n   *\n   *     assert.throws(fn, 'function throws a reference error');\n   *     assert.throws(fn, /function throws a reference error/);\n   *     assert.throws(fn, ReferenceError);\n   *     assert.throws(fn, errorInstance);\n   *     assert.throws(fn, ReferenceError, 'Error thrown must be a ReferenceError and have this msg');\n   *     assert.throws(fn, errorInstance, 'Error thrown must be the same errorInstance and have this msg');\n   *     assert.throws(fn, ReferenceError, /Error thrown must be a ReferenceError and match this/);\n   *     assert.throws(fn, errorInstance, /Error thrown must be the same errorInstance and match this/);\n   *\n   * @name throws\n   * @alias throw\n   * @alias Throw\n   * @param {Function} fn\n   * @param {ErrorConstructor|Error} errorLike\n   * @param {RegExp|String} errMsgMatcher\n   * @param {String} message\n   * @see https://developer.mozilla.org/en/JavaScript/Reference/Global_Objects/Error#Error_types\n   * @namespace Assert\n   * @api public\n   */\n\n  assert.throws = function (fn, errorLike, errMsgMatcher, msg) {\n    if ('string' === typeof errorLike || errorLike instanceof RegExp) {\n      errMsgMatcher = errorLike;\n      errorLike = null;\n    }\n\n    var assertErr = new Assertion(fn, msg, assert.throws, true)\n      .to.throw(errorLike, errMsgMatcher);\n    return flag(assertErr, 'object');\n  };\n\n  /**\n   * ### .doesNotThrow(fn, [errorLike/string/regexp], [string/regexp], [message])\n   *\n   * If `errorLike` is an `Error` constructor, asserts that `fn` will _not_ throw an error that is an\n   * instance of `errorLike`.\n   * If `errorLike` is an `Error` instance, asserts that the error thrown is _not_ the same\n   * instance as `errorLike`.\n   * If `errMsgMatcher` is provided, it also asserts that the error thrown will _not_ have a\n   * message matching `errMsgMatcher`.\n   *\n   *     assert.doesNotThrow(fn, 'Any Error thrown must not have this message');\n   *     assert.doesNotThrow(fn, /Any Error thrown must not match this/);\n   *     assert.doesNotThrow(fn, Error);\n   *     assert.doesNotThrow(fn, errorInstance);\n   *     assert.doesNotThrow(fn, Error, 'Error must not have this message');\n   *     assert.doesNotThrow(fn, errorInstance, 'Error must not have this message');\n   *     assert.doesNotThrow(fn, Error, /Error must not match this/);\n   *     assert.doesNotThrow(fn, errorInstance, /Error must not match this/);\n   *\n   * @name doesNotThrow\n   * @param {Function} fn\n   * @param {ErrorConstructor} errorLike\n   * @param {RegExp|String} errMsgMatcher\n   * @param {String} message\n   * @see https://developer.mozilla.org/en/JavaScript/Reference/Global_Objects/Error#Error_types\n   * @namespace Assert\n   * @api public\n   */\n\n  assert.doesNotThrow = function (fn, errorLike, errMsgMatcher, msg) {\n    if ('string' === typeof errorLike || errorLike instanceof RegExp) {\n      errMsgMatcher = errorLike;\n      errorLike = null;\n    }\n\n    new Assertion(fn, msg, assert.doesNotThrow, true)\n      .to.not.throw(errorLike, errMsgMatcher);\n  };\n\n  /**\n   * ### .operator(val1, operator, val2, [message])\n   *\n   * Compares two values using `operator`.\n   *\n   *     assert.operator(1, '<', 2, 'everything is ok');\n   *     assert.operator(1, '>', 2, 'this will fail');\n   *\n   * @name operator\n   * @param {Mixed} val1\n   * @param {String} operator\n   * @param {Mixed} val2\n   * @param {String} message\n   * @namespace Assert\n   * @api public\n   */\n\n  assert.operator = function (val, operator, val2, msg) {\n    var ok;\n    switch(operator) {\n      case '==':\n        ok = val == val2;\n        break;\n      case '===':\n        ok = val === val2;\n        break;\n      case '>':\n        ok = val > val2;\n        break;\n      case '>=':\n        ok = val >= val2;\n        break;\n      case '<':\n        ok = val < val2;\n        break;\n      case '<=':\n        ok = val <= val2;\n        break;\n      case '!=':\n        ok = val != val2;\n        break;\n      case '!==':\n        ok = val !== val2;\n        break;\n      default:\n        msg = msg ? msg + ': ' : msg;\n        throw new chai.AssertionError(\n          msg + 'Invalid operator \"' + operator + '\"',\n          undefined,\n          assert.operator\n        );\n    }\n    var test = new Assertion(ok, msg, assert.operator, true);\n    test.assert(\n        true === flag(test, 'object')\n      , 'expected ' + util.inspect(val) + ' to be ' + operator + ' ' + util.inspect(val2)\n      , 'expected ' + util.inspect(val) + ' to not be ' + operator + ' ' + util.inspect(val2) );\n  };\n\n  /**\n   * ### .closeTo(actual, expected, delta, [message])\n   *\n   * Asserts that the target is equal `expected`, to within a +/- `delta` range.\n   *\n   *     assert.closeTo(1.5, 1, 0.5, 'numbers are close');\n   *\n   * @name closeTo\n   * @param {Number} actual\n   * @param {Number} expected\n   * @param {Number} delta\n   * @param {String} message\n   * @namespace Assert\n   * @api public\n   */\n\n  assert.closeTo = function (act, exp, delta, msg) {\n    new Assertion(act, msg, assert.closeTo, true).to.be.closeTo(exp, delta);\n  };\n\n  /**\n   * ### .approximately(actual, expected, delta, [message])\n   *\n   * Asserts that the target is equal `expected`, to within a +/- `delta` range.\n   *\n   *     assert.approximately(1.5, 1, 0.5, 'numbers are close');\n   *\n   * @name approximately\n   * @param {Number} actual\n   * @param {Number} expected\n   * @param {Number} delta\n   * @param {String} message\n   * @namespace Assert\n   * @api public\n   */\n\n  assert.approximately = function (act, exp, delta, msg) {\n    new Assertion(act, msg, assert.approximately, true)\n      .to.be.approximately(exp, delta);\n  };\n\n  /**\n   * ### .sameMembers(set1, set2, [message])\n   *\n   * Asserts that `set1` and `set2` have the same members in any order. Uses a\n   * strict equality check (===).\n   *\n   *     assert.sameMembers([ 1, 2, 3 ], [ 2, 1, 3 ], 'same members');\n   *\n   * @name sameMembers\n   * @param {Array} set1\n   * @param {Array} set2\n   * @param {String} message\n   * @namespace Assert\n   * @api public\n   */\n\n  assert.sameMembers = function (set1, set2, msg) {\n    new Assertion(set1, msg, assert.sameMembers, true)\n      .to.have.same.members(set2);\n  }\n\n  /**\n   * ### .notSameMembers(set1, set2, [message])\n   *\n   * Asserts that `set1` and `set2` don't have the same members in any order.\n   * Uses a strict equality check (===).\n   *\n   *     assert.notSameMembers([ 1, 2, 3 ], [ 5, 1, 3 ], 'not same members');\n   *\n   * @name notSameMembers\n   * @param {Array} set1\n   * @param {Array} set2\n   * @param {String} message\n   * @namespace Assert\n   * @api public\n   */\n\n  assert.notSameMembers = function (set1, set2, msg) {\n    new Assertion(set1, msg, assert.notSameMembers, true)\n      .to.not.have.same.members(set2);\n  }\n\n  /**\n   * ### .sameDeepMembers(set1, set2, [message])\n   *\n   * Asserts that `set1` and `set2` have the same members in any order. Uses a\n   * deep equality check.\n   *\n   *     assert.sameDeepMembers([ { a: 1 }, { b: 2 }, { c: 3 } ], [{ b: 2 }, { a: 1 }, { c: 3 }], 'same deep members');\n   *\n   * @name sameDeepMembers\n   * @param {Array} set1\n   * @param {Array} set2\n   * @param {String} message\n   * @namespace Assert\n   * @api public\n   */\n\n  assert.sameDeepMembers = function (set1, set2, msg) {\n    new Assertion(set1, msg, assert.sameDeepMembers, true)\n      .to.have.same.deep.members(set2);\n  }\n\n  /**\n   * ### .notSameDeepMembers(set1, set2, [message])\n   *\n   * Asserts that `set1` and `set2` don't have the same members in any order.\n   * Uses a deep equality check.\n   *\n   *     assert.notSameDeepMembers([ { a: 1 }, { b: 2 }, { c: 3 } ], [{ b: 2 }, { a: 1 }, { f: 5 }], 'not same deep members');\n   *\n   * @name notSameDeepMembers\n   * @param {Array} set1\n   * @param {Array} set2\n   * @param {String} message\n   * @namespace Assert\n   * @api public\n   */\n\n  assert.notSameDeepMembers = function (set1, set2, msg) {\n    new Assertion(set1, msg, assert.notSameDeepMembers, true)\n      .to.not.have.same.deep.members(set2);\n  }\n\n  /**\n   * ### .sameOrderedMembers(set1, set2, [message])\n   *\n   * Asserts that `set1` and `set2` have the same members in the same order.\n   * Uses a strict equality check (===).\n   *\n   *     assert.sameOrderedMembers([ 1, 2, 3 ], [ 1, 2, 3 ], 'same ordered members');\n   *\n   * @name sameOrderedMembers\n   * @param {Array} set1\n   * @param {Array} set2\n   * @param {String} message\n   * @namespace Assert\n   * @api public\n   */\n\n  assert.sameOrderedMembers = function (set1, set2, msg) {\n    new Assertion(set1, msg, assert.sameOrderedMembers, true)\n      .to.have.same.ordered.members(set2);\n  }\n\n  /**\n   * ### .notSameOrderedMembers(set1, set2, [message])\n   *\n   * Asserts that `set1` and `set2` don't have the same members in the same\n   * order. Uses a strict equality check (===).\n   *\n   *     assert.notSameOrderedMembers([ 1, 2, 3 ], [ 2, 1, 3 ], 'not same ordered members');\n   *\n   * @name notSameOrderedMembers\n   * @param {Array} set1\n   * @param {Array} set2\n   * @param {String} message\n   * @namespace Assert\n   * @api public\n   */\n\n  assert.notSameOrderedMembers = function (set1, set2, msg) {\n    new Assertion(set1, msg, assert.notSameOrderedMembers, true)\n      .to.not.have.same.ordered.members(set2);\n  }\n\n  /**\n   * ### .sameDeepOrderedMembers(set1, set2, [message])\n   *\n   * Asserts that `set1` and `set2` have the same members in the same order.\n   * Uses a deep equality check.\n   *\n   * assert.sameDeepOrderedMembers([ { a: 1 }, { b: 2 }, { c: 3 } ], [ { a: 1 }, { b: 2 }, { c: 3 } ], 'same deep ordered members');\n   *\n   * @name sameDeepOrderedMembers\n   * @param {Array} set1\n   * @param {Array} set2\n   * @param {String} message\n   * @namespace Assert\n   * @api public\n   */\n\n  assert.sameDeepOrderedMembers = function (set1, set2, msg) {\n    new Assertion(set1, msg, assert.sameDeepOrderedMembers, true)\n      .to.have.same.deep.ordered.members(set2);\n  }\n\n  /**\n   * ### .notSameDeepOrderedMembers(set1, set2, [message])\n   *\n   * Asserts that `set1` and `set2` don't have the same members in the same\n   * order. Uses a deep equality check.\n   *\n   * assert.notSameDeepOrderedMembers([ { a: 1 }, { b: 2 }, { c: 3 } ], [ { a: 1 }, { b: 2 }, { z: 5 } ], 'not same deep ordered members');\n   * assert.notSameDeepOrderedMembers([ { a: 1 }, { b: 2 }, { c: 3 } ], [ { b: 2 }, { a: 1 }, { c: 3 } ], 'not same deep ordered members');\n   *\n   * @name notSameDeepOrderedMembers\n   * @param {Array} set1\n   * @param {Array} set2\n   * @param {String} message\n   * @namespace Assert\n   * @api public\n   */\n\n  assert.notSameDeepOrderedMembers = function (set1, set2, msg) {\n    new Assertion(set1, msg, assert.notSameDeepOrderedMembers, true)\n      .to.not.have.same.deep.ordered.members(set2);\n  }\n\n  /**\n   * ### .includeMembers(superset, subset, [message])\n   *\n   * Asserts that `subset` is included in `superset` in any order. Uses a\n   * strict equality check (===). Duplicates are ignored.\n   *\n   *     assert.includeMembers([ 1, 2, 3 ], [ 2, 1, 2 ], 'include members');\n   *\n   * @name includeMembers\n   * @param {Array} superset\n   * @param {Array} subset\n   * @param {String} message\n   * @namespace Assert\n   * @api public\n   */\n\n  assert.includeMembers = function (superset, subset, msg) {\n    new Assertion(superset, msg, assert.includeMembers, true)\n      .to.include.members(subset);\n  }\n\n  /**\n   * ### .notIncludeMembers(superset, subset, [message])\n   *\n   * Asserts that `subset` isn't included in `superset` in any order. Uses a\n   * strict equality check (===). Duplicates are ignored.\n   *\n   *     assert.notIncludeMembers([ 1, 2, 3 ], [ 5, 1 ], 'not include members');\n   *\n   * @name notIncludeMembers\n   * @param {Array} superset\n   * @param {Array} subset\n   * @param {String} message\n   * @namespace Assert\n   * @api public\n   */\n\n  assert.notIncludeMembers = function (superset, subset, msg) {\n    new Assertion(superset, msg, assert.notIncludeMembers, true)\n      .to.not.include.members(subset);\n  }\n\n  /**\n   * ### .includeDeepMembers(superset, subset, [message])\n   *\n   * Asserts that `subset` is included in `superset` in any order. Uses a deep\n   * equality check. Duplicates are ignored.\n   *\n   *     assert.includeDeepMembers([ { a: 1 }, { b: 2 }, { c: 3 } ], [ { b: 2 }, { a: 1 }, { b: 2 } ], 'include deep members');\n   *\n   * @name includeDeepMembers\n   * @param {Array} superset\n   * @param {Array} subset\n   * @param {String} message\n   * @namespace Assert\n   * @api public\n   */\n\n  assert.includeDeepMembers = function (superset, subset, msg) {\n    new Assertion(superset, msg, assert.includeDeepMembers, true)\n      .to.include.deep.members(subset);\n  }\n\n  /**\n   * ### .notIncludeDeepMembers(superset, subset, [message])\n   *\n   * Asserts that `subset` isn't included in `superset` in any order. Uses a\n   * deep equality check. Duplicates are ignored.\n   *\n   *     assert.notIncludeDeepMembers([ { a: 1 }, { b: 2 }, { c: 3 } ], [ { b: 2 }, { f: 5 } ], 'not include deep members');\n   *\n   * @name notIncludeDeepMembers\n   * @param {Array} superset\n   * @param {Array} subset\n   * @param {String} message\n   * @namespace Assert\n   * @api public\n   */\n\n  assert.notIncludeDeepMembers = function (superset, subset, msg) {\n    new Assertion(superset, msg, assert.notIncludeDeepMembers, true)\n      .to.not.include.deep.members(subset);\n  }\n\n  /**\n   * ### .includeOrderedMembers(superset, subset, [message])\n   *\n   * Asserts that `subset` is included in `superset` in the same order\n   * beginning with the first element in `superset`. Uses a strict equality\n   * check (===).\n   *\n   *     assert.includeOrderedMembers([ 1, 2, 3 ], [ 1, 2 ], 'include ordered members');\n   *\n   * @name includeOrderedMembers\n   * @param {Array} superset\n   * @param {Array} subset\n   * @param {String} message\n   * @namespace Assert\n   * @api public\n   */\n\n  assert.includeOrderedMembers = function (superset, subset, msg) {\n    new Assertion(superset, msg, assert.includeOrderedMembers, true)\n      .to.include.ordered.members(subset);\n  }\n\n  /**\n   * ### .notIncludeOrderedMembers(superset, subset, [message])\n   *\n   * Asserts that `subset` isn't included in `superset` in the same order\n   * beginning with the first element in `superset`. Uses a strict equality\n   * check (===).\n   *\n   *     assert.notIncludeOrderedMembers([ 1, 2, 3 ], [ 2, 1 ], 'not include ordered members');\n   *     assert.notIncludeOrderedMembers([ 1, 2, 3 ], [ 2, 3 ], 'not include ordered members');\n   *\n   * @name notIncludeOrderedMembers\n   * @param {Array} superset\n   * @param {Array} subset\n   * @param {String} message\n   * @namespace Assert\n   * @api public\n   */\n\n  assert.notIncludeOrderedMembers = function (superset, subset, msg) {\n    new Assertion(superset, msg, assert.notIncludeOrderedMembers, true)\n      .to.not.include.ordered.members(subset);\n  }\n\n  /**\n   * ### .includeDeepOrderedMembers(superset, subset, [message])\n   *\n   * Asserts that `subset` is included in `superset` in the same order\n   * beginning with the first element in `superset`. Uses a deep equality\n   * check.\n   *\n   *     assert.includeDeepOrderedMembers([ { a: 1 }, { b: 2 }, { c: 3 } ], [ { a: 1 }, { b: 2 } ], 'include deep ordered members');\n   *\n   * @name includeDeepOrderedMembers\n   * @param {Array} superset\n   * @param {Array} subset\n   * @param {String} message\n   * @namespace Assert\n   * @api public\n   */\n\n  assert.includeDeepOrderedMembers = function (superset, subset, msg) {\n    new Assertion(superset, msg, assert.includeDeepOrderedMembers, true)\n      .to.include.deep.ordered.members(subset);\n  }\n\n  /**\n   * ### .notIncludeDeepOrderedMembers(superset, subset, [message])\n   *\n   * Asserts that `subset` isn't included in `superset` in the same order\n   * beginning with the first element in `superset`. Uses a deep equality\n   * check.\n   *\n   *     assert.notIncludeDeepOrderedMembers([ { a: 1 }, { b: 2 }, { c: 3 } ], [ { a: 1 }, { f: 5 } ], 'not include deep ordered members');\n   *     assert.notIncludeDeepOrderedMembers([ { a: 1 }, { b: 2 }, { c: 3 } ], [ { b: 2 }, { a: 1 } ], 'not include deep ordered members');\n   *     assert.notIncludeDeepOrderedMembers([ { a: 1 }, { b: 2 }, { c: 3 } ], [ { b: 2 }, { c: 3 } ], 'not include deep ordered members');\n   *\n   * @name notIncludeDeepOrderedMembers\n   * @param {Array} superset\n   * @param {Array} subset\n   * @param {String} message\n   * @namespace Assert\n   * @api public\n   */\n\n  assert.notIncludeDeepOrderedMembers = function (superset, subset, msg) {\n    new Assertion(superset, msg, assert.notIncludeDeepOrderedMembers, true)\n      .to.not.include.deep.ordered.members(subset);\n  }\n\n  /**\n   * ### .oneOf(inList, list, [message])\n   *\n   * Asserts that non-object, non-array value `inList` appears in the flat array `list`.\n   *\n   *     assert.oneOf(1, [ 2, 1 ], 'Not found in list');\n   *\n   * @name oneOf\n   * @param {*} inList\n   * @param {Array<*>} list\n   * @param {String} message\n   * @namespace Assert\n   * @api public\n   */\n\n  assert.oneOf = function (inList, list, msg) {\n    new Assertion(inList, msg, assert.oneOf, true).to.be.oneOf(list);\n  }\n\n  /**\n   * ### .changes(function, object, property, [message])\n   *\n   * Asserts that a function changes the value of a property.\n   *\n   *     var obj = { val: 10 };\n   *     var fn = function() { obj.val = 22 };\n   *     assert.changes(fn, obj, 'val');\n   *\n   * @name changes\n   * @param {Function} modifier function\n   * @param {Object} object or getter function\n   * @param {String} property name _optional_\n   * @param {String} message _optional_\n   * @namespace Assert\n   * @api public\n   */\n\n  assert.changes = function (fn, obj, prop, msg) {\n    if (arguments.length === 3 && typeof obj === 'function') {\n      msg = prop;\n      prop = null;\n    }\n\n    new Assertion(fn, msg, assert.changes, true).to.change(obj, prop);\n  }\n\n   /**\n   * ### .changesBy(function, object, property, delta, [message])\n   *\n   * Asserts that a function changes the value of a property by an amount (delta).\n   *\n   *     var obj = { val: 10 };\n   *     var fn = function() { obj.val += 2 };\n   *     assert.changesBy(fn, obj, 'val', 2);\n   *\n   * @name changesBy\n   * @param {Function} modifier function\n   * @param {Object} object or getter function\n   * @param {String} property name _optional_\n   * @param {Number} change amount (delta)\n   * @param {String} message _optional_\n   * @namespace Assert\n   * @api public\n   */\n\n  assert.changesBy = function (fn, obj, prop, delta, msg) {\n    if (arguments.length === 4 && typeof obj === 'function') {\n      var tmpMsg = delta;\n      delta = prop;\n      msg = tmpMsg;\n    } else if (arguments.length === 3) {\n      delta = prop;\n      prop = null;\n    }\n\n    new Assertion(fn, msg, assert.changesBy, true)\n      .to.change(obj, prop).by(delta);\n  }\n\n   /**\n   * ### .doesNotChange(function, object, property, [message])\n   *\n   * Asserts that a function does not change the value of a property.\n   *\n   *     var obj = { val: 10 };\n   *     var fn = function() { console.log('foo'); };\n   *     assert.doesNotChange(fn, obj, 'val');\n   *\n   * @name doesNotChange\n   * @param {Function} modifier function\n   * @param {Object} object or getter function\n   * @param {String} property name _optional_\n   * @param {String} message _optional_\n   * @namespace Assert\n   * @api public\n   */\n\n  assert.doesNotChange = function (fn, obj, prop, msg) {\n    if (arguments.length === 3 && typeof obj === 'function') {\n      msg = prop;\n      prop = null;\n    }\n\n    return new Assertion(fn, msg, assert.doesNotChange, true)\n      .to.not.change(obj, prop);\n  }\n\n  /**\n   * ### .changesButNotBy(function, object, property, delta, [message])\n   *\n   * Asserts that a function does not change the value of a property or of a function's return value by an amount (delta)\n   *\n   *     var obj = { val: 10 };\n   *     var fn = function() { obj.val += 10 };\n   *     assert.changesButNotBy(fn, obj, 'val', 5);\n   *\n   * @name changesButNotBy\n   * @param {Function} modifier function\n   * @param {Object} object or getter function\n   * @param {String} property name _optional_\n   * @param {Number} change amount (delta)\n   * @param {String} message _optional_\n   * @namespace Assert\n   * @api public\n   */\n\n  assert.changesButNotBy = function (fn, obj, prop, delta, msg) {\n    if (arguments.length === 4 && typeof obj === 'function') {\n      var tmpMsg = delta;\n      delta = prop;\n      msg = tmpMsg;\n    } else if (arguments.length === 3) {\n      delta = prop;\n      prop = null;\n    }\n\n    new Assertion(fn, msg, assert.changesButNotBy, true)\n      .to.change(obj, prop).but.not.by(delta);\n  }\n\n  /**\n   * ### .increases(function, object, property, [message])\n   *\n   * Asserts that a function increases a numeric object property.\n   *\n   *     var obj = { val: 10 };\n   *     var fn = function() { obj.val = 13 };\n   *     assert.increases(fn, obj, 'val');\n   *\n   * @name increases\n   * @param {Function} modifier function\n   * @param {Object} object or getter function\n   * @param {String} property name _optional_\n   * @param {String} message _optional_\n   * @namespace Assert\n   * @api public\n   */\n\n  assert.increases = function (fn, obj, prop, msg) {\n    if (arguments.length === 3 && typeof obj === 'function') {\n      msg = prop;\n      prop = null;\n    }\n\n    return new Assertion(fn, msg, assert.increases, true)\n      .to.increase(obj, prop);\n  }\n\n  /**\n   * ### .increasesBy(function, object, property, delta, [message])\n   *\n   * Asserts that a function increases a numeric object property or a function's return value by an amount (delta).\n   *\n   *     var obj = { val: 10 };\n   *     var fn = function() { obj.val += 10 };\n   *     assert.increasesBy(fn, obj, 'val', 10);\n   *\n   * @name increasesBy\n   * @param {Function} modifier function\n   * @param {Object} object or getter function\n   * @param {String} property name _optional_\n   * @param {Number} change amount (delta)\n   * @param {String} message _optional_\n   * @namespace Assert\n   * @api public\n   */\n\n  assert.increasesBy = function (fn, obj, prop, delta, msg) {\n    if (arguments.length === 4 && typeof obj === 'function') {\n      var tmpMsg = delta;\n      delta = prop;\n      msg = tmpMsg;\n    } else if (arguments.length === 3) {\n      delta = prop;\n      prop = null;\n    }\n\n    new Assertion(fn, msg, assert.increasesBy, true)\n      .to.increase(obj, prop).by(delta);\n  }\n\n  /**\n   * ### .doesNotIncrease(function, object, property, [message])\n   *\n   * Asserts that a function does not increase a numeric object property.\n   *\n   *     var obj = { val: 10 };\n   *     var fn = function() { obj.val = 8 };\n   *     assert.doesNotIncrease(fn, obj, 'val');\n   *\n   * @name doesNotIncrease\n   * @param {Function} modifier function\n   * @param {Object} object or getter function\n   * @param {String} property name _optional_\n   * @param {String} message _optional_\n   * @namespace Assert\n   * @api public\n   */\n\n  assert.doesNotIncrease = function (fn, obj, prop, msg) {\n    if (arguments.length === 3 && typeof obj === 'function') {\n      msg = prop;\n      prop = null;\n    }\n\n    return new Assertion(fn, msg, assert.doesNotIncrease, true)\n      .to.not.increase(obj, prop);\n  }\n\n  /**\n   * ### .increasesButNotBy(function, object, property, [message])\n   *\n   * Asserts that a function does not increase a numeric object property or function's return value by an amount (delta).\n   *\n   *     var obj = { val: 10 };\n   *     var fn = function() { obj.val = 15 };\n   *     assert.increasesButNotBy(fn, obj, 'val', 10);\n   *\n   * @name increasesButNotBy\n   * @param {Function} modifier function\n   * @param {Object} object or getter function\n   * @param {String} property name _optional_\n   * @param {Number} change amount (delta)\n   * @param {String} message _optional_\n   * @namespace Assert\n   * @api public\n   */\n\n  assert.increasesButNotBy = function (fn, obj, prop, delta, msg) {\n    if (arguments.length === 4 && typeof obj === 'function') {\n      var tmpMsg = delta;\n      delta = prop;\n      msg = tmpMsg;\n    } else if (arguments.length === 3) {\n      delta = prop;\n      prop = null;\n    }\n\n    new Assertion(fn, msg, assert.increasesButNotBy, true)\n      .to.increase(obj, prop).but.not.by(delta);\n  }\n\n  /**\n   * ### .decreases(function, object, property, [message])\n   *\n   * Asserts that a function decreases a numeric object property.\n   *\n   *     var obj = { val: 10 };\n   *     var fn = function() { obj.val = 5 };\n   *     assert.decreases(fn, obj, 'val');\n   *\n   * @name decreases\n   * @param {Function} modifier function\n   * @param {Object} object or getter function\n   * @param {String} property name _optional_\n   * @param {String} message _optional_\n   * @namespace Assert\n   * @api public\n   */\n\n  assert.decreases = function (fn, obj, prop, msg) {\n    if (arguments.length === 3 && typeof obj === 'function') {\n      msg = prop;\n      prop = null;\n    }\n\n    return new Assertion(fn, msg, assert.decreases, true)\n      .to.decrease(obj, prop);\n  }\n\n  /**\n   * ### .decreasesBy(function, object, property, delta, [message])\n   *\n   * Asserts that a function decreases a numeric object property or a function's return value by an amount (delta)\n   *\n   *     var obj = { val: 10 };\n   *     var fn = function() { obj.val -= 5 };\n   *     assert.decreasesBy(fn, obj, 'val', 5);\n   *\n   * @name decreasesBy\n   * @param {Function} modifier function\n   * @param {Object} object or getter function\n   * @param {String} property name _optional_\n   * @param {Number} change amount (delta)\n   * @param {String} message _optional_\n   * @namespace Assert\n   * @api public\n   */\n\n  assert.decreasesBy = function (fn, obj, prop, delta, msg) {\n    if (arguments.length === 4 && typeof obj === 'function') {\n      var tmpMsg = delta;\n      delta = prop;\n      msg = tmpMsg;\n    } else if (arguments.length === 3) {\n      delta = prop;\n      prop = null;\n    }\n\n    new Assertion(fn, msg, assert.decreasesBy, true)\n      .to.decrease(obj, prop).by(delta);\n  }\n\n  /**\n   * ### .doesNotDecrease(function, object, property, [message])\n   *\n   * Asserts that a function does not decreases a numeric object property.\n   *\n   *     var obj = { val: 10 };\n   *     var fn = function() { obj.val = 15 };\n   *     assert.doesNotDecrease(fn, obj, 'val');\n   *\n   * @name doesNotDecrease\n   * @param {Function} modifier function\n   * @param {Object} object or getter function\n   * @param {String} property name _optional_\n   * @param {String} message _optional_\n   * @namespace Assert\n   * @api public\n   */\n\n  assert.doesNotDecrease = function (fn, obj, prop, msg) {\n    if (arguments.length === 3 && typeof obj === 'function') {\n      msg = prop;\n      prop = null;\n    }\n\n    return new Assertion(fn, msg, assert.doesNotDecrease, true)\n      .to.not.decrease(obj, prop);\n  }\n\n  /**\n   * ### .doesNotDecreaseBy(function, object, property, delta, [message])\n   *\n   * Asserts that a function does not decreases a numeric object property or a function's return value by an amount (delta)\n   *\n   *     var obj = { val: 10 };\n   *     var fn = function() { obj.val = 5 };\n   *     assert.doesNotDecreaseBy(fn, obj, 'val', 1);\n   *\n   * @name doesNotDecrease\n   * @param {Function} modifier function\n   * @param {Object} object or getter function\n   * @param {String} property name _optional_\n   * @param {Number} change amount (delta)\n   * @param {String} message _optional_\n   * @namespace Assert\n   * @api public\n   */\n\n  assert.doesNotDecreaseBy = function (fn, obj, prop, delta, msg) {\n    if (arguments.length === 4 && typeof obj === 'function') {\n      var tmpMsg = delta;\n      delta = prop;\n      msg = tmpMsg;\n    } else if (arguments.length === 3) {\n      delta = prop;\n      prop = null;\n    }\n\n    return new Assertion(fn, msg, assert.doesNotDecreaseBy, true)\n      .to.not.decrease(obj, prop).by(delta);\n  }\n\n  /**\n   * ### .decreasesButNotBy(function, object, property, delta, [message])\n   *\n   * Asserts that a function does not decreases a numeric object property or a function's return value by an amount (delta)\n   *\n   *     var obj = { val: 10 };\n   *     var fn = function() { obj.val = 5 };\n   *     assert.decreasesButNotBy(fn, obj, 'val', 1);\n   *\n   * @name decreasesButNotBy\n   * @param {Function} modifier function\n   * @param {Object} object or getter function\n   * @param {String} property name _optional_\n   * @param {Number} change amount (delta)\n   * @param {String} message _optional_\n   * @namespace Assert\n   * @api public\n   */\n\n  assert.decreasesButNotBy = function (fn, obj, prop, delta, msg) {\n    if (arguments.length === 4 && typeof obj === 'function') {\n      var tmpMsg = delta;\n      delta = prop;\n      msg = tmpMsg;\n    } else if (arguments.length === 3) {\n      delta = prop;\n      prop = null;\n    }\n\n    new Assertion(fn, msg, assert.decreasesButNotBy, true)\n      .to.decrease(obj, prop).but.not.by(delta);\n  }\n\n  /*!\n   * ### .ifError(object)\n   *\n   * Asserts if value is not a false value, and throws if it is a true value.\n   * This is added to allow for chai to be a drop-in replacement for Node's\n   * assert class.\n   *\n   *     var err = new Error('I am a custom error');\n   *     assert.ifError(err); // Rethrows err!\n   *\n   * @name ifError\n   * @param {Object} object\n   * @namespace Assert\n   * @api public\n   */\n\n  assert.ifError = function (val) {\n    if (val) {\n      throw(val);\n    }\n  };\n\n  /**\n   * ### .isExtensible(object)\n   *\n   * Asserts that `object` is extensible (can have new properties added to it).\n   *\n   *     assert.isExtensible({});\n   *\n   * @name isExtensible\n   * @alias extensible\n   * @param {Object} object\n   * @param {String} message _optional_\n   * @namespace Assert\n   * @api public\n   */\n\n  assert.isExtensible = function (obj, msg) {\n    new Assertion(obj, msg, assert.isExtensible, true).to.be.extensible;\n  };\n\n  /**\n   * ### .isNotExtensible(object)\n   *\n   * Asserts that `object` is _not_ extensible.\n   *\n   *     var nonExtensibleObject = Object.preventExtensions({});\n   *     var sealedObject = Object.seal({});\n   *     var frozenObject = Object.freeze({});\n   *\n   *     assert.isNotExtensible(nonExtensibleObject);\n   *     assert.isNotExtensible(sealedObject);\n   *     assert.isNotExtensible(frozenObject);\n   *\n   * @name isNotExtensible\n   * @alias notExtensible\n   * @param {Object} object\n   * @param {String} message _optional_\n   * @namespace Assert\n   * @api public\n   */\n\n  assert.isNotExtensible = function (obj, msg) {\n    new Assertion(obj, msg, assert.isNotExtensible, true).to.not.be.extensible;\n  };\n\n  /**\n   * ### .isSealed(object)\n   *\n   * Asserts that `object` is sealed (cannot have new properties added to it\n   * and its existing properties cannot be removed).\n   *\n   *     var sealedObject = Object.seal({});\n   *     var frozenObject = Object.seal({});\n   *\n   *     assert.isSealed(sealedObject);\n   *     assert.isSealed(frozenObject);\n   *\n   * @name isSealed\n   * @alias sealed\n   * @param {Object} object\n   * @param {String} message _optional_\n   * @namespace Assert\n   * @api public\n   */\n\n  assert.isSealed = function (obj, msg) {\n    new Assertion(obj, msg, assert.isSealed, true).to.be.sealed;\n  };\n\n  /**\n   * ### .isNotSealed(object)\n   *\n   * Asserts that `object` is _not_ sealed.\n   *\n   *     assert.isNotSealed({});\n   *\n   * @name isNotSealed\n   * @alias notSealed\n   * @param {Object} object\n   * @param {String} message _optional_\n   * @namespace Assert\n   * @api public\n   */\n\n  assert.isNotSealed = function (obj, msg) {\n    new Assertion(obj, msg, assert.isNotSealed, true).to.not.be.sealed;\n  };\n\n  /**\n   * ### .isFrozen(object)\n   *\n   * Asserts that `object` is frozen (cannot have new properties added to it\n   * and its existing properties cannot be modified).\n   *\n   *     var frozenObject = Object.freeze({});\n   *     assert.frozen(frozenObject);\n   *\n   * @name isFrozen\n   * @alias frozen\n   * @param {Object} object\n   * @param {String} message _optional_\n   * @namespace Assert\n   * @api public\n   */\n\n  assert.isFrozen = function (obj, msg) {\n    new Assertion(obj, msg, assert.isFrozen, true).to.be.frozen;\n  };\n\n  /**\n   * ### .isNotFrozen(object)\n   *\n   * Asserts that `object` is _not_ frozen.\n   *\n   *     assert.isNotFrozen({});\n   *\n   * @name isNotFrozen\n   * @alias notFrozen\n   * @param {Object} object\n   * @param {String} message _optional_\n   * @namespace Assert\n   * @api public\n   */\n\n  assert.isNotFrozen = function (obj, msg) {\n    new Assertion(obj, msg, assert.isNotFrozen, true).to.not.be.frozen;\n  };\n\n  /**\n   * ### .isEmpty(target)\n   *\n   * Asserts that the target does not contain any values.\n   * For arrays and strings, it checks the `length` property.\n   * For `Map` and `Set` instances, it checks the `size` property.\n   * For non-function objects, it gets the count of own\n   * enumerable string keys.\n   *\n   *     assert.isEmpty([]);\n   *     assert.isEmpty('');\n   *     assert.isEmpty(new Map);\n   *     assert.isEmpty({});\n   *\n   * @name isEmpty\n   * @alias empty\n   * @param {Object|Array|String|Map|Set} target\n   * @param {String} message _optional_\n   * @namespace Assert\n   * @api public\n   */\n\n  assert.isEmpty = function(val, msg) {\n    new Assertion(val, msg, assert.isEmpty, true).to.be.empty;\n  };\n\n  /**\n   * ### .isNotEmpty(target)\n   *\n   * Asserts that the target contains values.\n   * For arrays and strings, it checks the `length` property.\n   * For `Map` and `Set` instances, it checks the `size` property.\n   * For non-function objects, it gets the count of own\n   * enumerable string keys.\n   *\n   *     assert.isNotEmpty([1, 2]);\n   *     assert.isNotEmpty('34');\n   *     assert.isNotEmpty(new Set([5, 6]));\n   *     assert.isNotEmpty({ key: 7 });\n   *\n   * @name isNotEmpty\n   * @alias notEmpty\n   * @param {Object|Array|String|Map|Set} target\n   * @param {String} message _optional_\n   * @namespace Assert\n   * @api public\n   */\n\n  assert.isNotEmpty = function(val, msg) {\n    new Assertion(val, msg, assert.isNotEmpty, true).to.not.be.empty;\n  };\n\n  /*!\n   * Aliases.\n   */\n\n  (function alias(name, as){\n    assert[as] = assert[name];\n    return alias;\n  })\n  ('isOk', 'ok')\n  ('isNotOk', 'notOk')\n  ('throws', 'throw')\n  ('throws', 'Throw')\n  ('isExtensible', 'extensible')\n  ('isNotExtensible', 'notExtensible')\n  ('isSealed', 'sealed')\n  ('isNotSealed', 'notSealed')\n  ('isFrozen', 'frozen')\n  ('isNotFrozen', 'notFrozen')\n  ('isEmpty', 'empty')\n  ('isNotEmpty', 'notEmpty');\n};\n","import { thePlayer, GetCurrentEnemy, RemoveByDeath, theStage, GetCurrentUnit } from \"../Database\";\r\nimport $ from \"jquery\";\r\nvar Enemy = (function () {\r\n    function Enemy(baseHP, baseDamage) {\r\n        this.baseHP = baseHP;\r\n        this.maxHP = this.baseHP * theStage.Level;\r\n        this.currentHP = this.MaxHP;\r\n        this.baseDamage = baseDamage;\r\n        this.currentDamage = this.baseDamage * theStage.Level;\r\n    }\r\n    Enemy.prototype.UpdateFeedback = function (counter) {\r\n        if (counter % 20) {\r\n            this.Hurt();\r\n            this.Regenerate(10 * theStage.Level);\r\n        }\r\n    };\r\n    Object.defineProperty(Enemy.prototype, \"MaxHP\", {\r\n        get: function () {\r\n            this.maxHP = this.baseHP * theStage.Level;\r\n            return this.maxHP;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(Enemy.prototype, \"CurrentHP\", {\r\n        get: function () {\r\n            return this.currentHP;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(Enemy.prototype, \"CurrentDamage\", {\r\n        get: function () {\r\n            this.currentDamage = this.baseDamage * theStage.Level;\r\n            return this.currentDamage;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Enemy.prototype.ReceiveDamage = function (damage) {\r\n        this.currentHP -= damage;\r\n        this.currentHP = Math.max(this.currentHP, 0);\r\n        adjustBarAnimation(\"monster-hp\", (this.CurrentHP / this.MaxHP));\r\n        if (this.currentHP == 0) {\r\n            this.Die();\r\n        }\r\n    };\r\n    Enemy.prototype.Birth = function () {\r\n        adjustBarAnimation(\"monster-hp\", this.MaxHP);\r\n    };\r\n    Enemy.prototype.Die = function () {\r\n        RemoveByDeath(\"Enemy\");\r\n    };\r\n    Enemy.prototype.Hurt = function () {\r\n        GetCurrentUnit().ReceiveDamage(this.CurrentDamage);\r\n    };\r\n    Enemy.prototype.Regenerate = function (health) {\r\n        this.currentHP += health;\r\n        this.currentHP = Math.min(this.CurrentHP, this.MaxHP);\r\n        adjustBarAnimation(\"monster-hp\", (this.CurrentHP / this.MaxHP));\r\n    };\r\n    return Enemy;\r\n}());\r\nexport { Enemy };\r\nvar Unit = (function () {\r\n    function Unit(id, image, name, baseHP, baseDamage, range) {\r\n        this.id = id;\r\n        this.image = image;\r\n        this.name = name;\r\n        this.baseHP = baseHP;\r\n        this.maxHP = this.baseHP * thePlayer.ArmyVitality;\r\n        this.currentHP = this.MaxHP;\r\n        this.baseDamage = baseDamage;\r\n        this.currentDamage = this.baseDamage * thePlayer.ArmyVitality;\r\n        this.range = range;\r\n        this.count = 0;\r\n        this.isUnlocked = false;\r\n    }\r\n    Unit.prototype.UpdateFeedback = function (counter) {\r\n        if (counter % 20) {\r\n            this.Hurt();\r\n            this.Regenerate(10 * thePlayer.ArmyVitality);\r\n        }\r\n    };\r\n    Object.defineProperty(Unit.prototype, \"MaxHP\", {\r\n        get: function () {\r\n            this.maxHP = this.baseHP * thePlayer.ArmyVitality;\r\n            return this.maxHP;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(Unit.prototype, \"CurrentHP\", {\r\n        get: function () {\r\n            return this.currentHP;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(Unit.prototype, \"CurrentDamage\", {\r\n        get: function () {\r\n            this.currentDamage = this.baseDamage * thePlayer.ArmyVitality * this.Count;\r\n            return this.currentDamage;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(Unit.prototype, \"Count\", {\r\n        get: function () {\r\n            return this.count;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Unit.prototype.ReceiveDamage = function (damage) {\r\n        this.currentHP -= damage;\r\n        this.currentHP = Math.max(this.currentHP, 0);\r\n        adjustBarAnimation(\"fighter-hp\", (this.CurrentHP / this.MaxHP));\r\n        if (this.currentHP == 0) {\r\n            this.Die();\r\n            this.Unexist(1);\r\n        }\r\n    };\r\n    Unit.prototype.Unlocked = function () {\r\n        alert(\"You have unlocked \" + this.name);\r\n        this.isUnlocked = true;\r\n    };\r\n    Unit.prototype.Exist = function (count) {\r\n        if (!this.isUnlocked) {\r\n            this.Unlocked();\r\n        }\r\n        ;\r\n        this.count += count;\r\n    };\r\n    Unit.prototype.Unexist = function (count) {\r\n        this.count -= count;\r\n        RemoveByDeath(\"Unit\");\r\n    };\r\n    Unit.prototype.Birth = function () {\r\n        adjustBarAnimation(\"fighter-hp\", this.MaxHP);\r\n    };\r\n    Unit.prototype.Die = function () {\r\n    };\r\n    Unit.prototype.Hurt = function () {\r\n        GetCurrentEnemy().ReceiveDamage(this.CurrentDamage);\r\n    };\r\n    Unit.prototype.Regenerate = function (health) {\r\n        this.currentHP += health;\r\n        this.currentHP = Math.min(this.MaxHP, this.CurrentHP);\r\n        adjustBarAnimation(\"fighter-hp\", (this.CurrentHP / this.MaxHP));\r\n    };\r\n    return Unit;\r\n}());\r\nexport { Unit };\r\nfunction adjustBarAnimation(type, percentage) {\r\n    $(\"#\" + type + \"-bar\").animate({ \"width\": (\"\" + percentage.toString() + \"%\") }, 200);\r\n    if (percentage == 100) {\r\n        $(\"#\" + type + \"-bar\").animate({ \"width\": (\"0%\") }, 100);\r\n    }\r\n}\r\n","var Player = (function () {\r\n    function Player(armyVitality) {\r\n        this.ArmyVitality = armyVitality;\r\n    }\r\n    Player.prototype.Birth = function () {\r\n    };\r\n    return Player;\r\n}());\r\nexport { Player };\r\n","var StageLevel = (function () {\r\n    function StageLevel(level) {\r\n        this.Level = level;\r\n        this.hasEnemy = false;\r\n        this.hasUnit = false;\r\n    }\r\n    return StageLevel;\r\n}());\r\nexport { StageLevel };\r\n","import { Unit, Enemy } from \"./InterfacesBaseClasses/Unit\";\r\nimport { Player } from \"./InterfacesBaseClasses/Player\";\r\nimport { StageLevel } from \"./InterfacesBaseClasses/StageLevel\";\r\nexport var thePlayer = new Player(1);\r\nexport var theStage = new StageLevel(1);\r\nconsole.log(Enemy);\r\nconsole.log(Unit);\r\nconsole.log(Player);\r\nvar EnemyArrCounter = 1;\r\nvar StageOneEnemyArr = [new Enemy(5, 5)];\r\nvar StageTwoEnemyArr = [new Enemy(5, 5)];\r\nvar StageThreeEnemyArr = [new Enemy(5, 5)];\r\nvar StageFourEnemyArr = [new Enemy(5, 5)];\r\nvar StageFiveEnemyArr = [new Enemy(5, 5)];\r\nvar EnemyArr = [StageOneEnemyArr, StageTwoEnemyArr, StageThreeEnemyArr, StageFourEnemyArr, StageFiveEnemyArr];\r\nvar CurrentEnemyArr = StageOneEnemyArr;\r\nvar RangeOneUnitArr = [new Unit(0, \"abc\", \"abc\", 123, 123, 123)];\r\nvar RangeTwoUnitArr = [new Unit(0, \"abc\", \"abc\", 123, 123, 123)];\r\nvar RangeThreeUnitArr = [new Unit(0, \"abc\", \"abc\", 123, 123, 123)];\r\nvar RangeFourUnitArr = [new Unit(0, \"abc\", \"abc\", 123, 123, 123)];\r\nvar RangeFiveUnitArr = [new Unit(0, \"abc\", \"abc\", 123, 123, 123)];\r\nvar RangeSixUnitArr = [new Unit(0, \"abc\", \"abc\", 123, 123, 123)];\r\nvar HeroArr = [new Unit(0, \"abc\", \"abc\", 123, 123, 123)];\r\nvar UnitArr = [RangeOneUnitArr, RangeTwoUnitArr, RangeThreeUnitArr, RangeFourUnitArr, RangeFiveUnitArr, RangeSixUnitArr, HeroArr];\r\nvar CurrentUnit;\r\nvar counter = 0;\r\nsetInterval(function () {\r\n    counter++;\r\n    MainGameCycle(counter);\r\n}, 50);\r\nfunction MainGameCycle(currentTime) {\r\n    UnitArr.forEach(function (s) { return s.forEach(function (u) { return u.UpdateFeedback(currentTime); }); });\r\n    CurrentEnemyArr[0].UpdateFeedback(currentTime);\r\n}\r\nexport function GetCurrentEnemy() {\r\n    return CurrentEnemyArr[0];\r\n}\r\nexport function GetCurrentUnit() {\r\n    return CurrentUnit;\r\n}\r\nexport function RemoveByDeath(type) {\r\n    if (type == \"Unit\") {\r\n        var isEmpty = true;\r\n        for (var i = 0; i < UnitArr.length && isEmpty; i++) {\r\n            for (var j = 0; j < UnitArr[i].length && isEmpty; j++) {\r\n                if (UnitArr[i][j].Count > 0) {\r\n                    isEmpty = false;\r\n                    UnitArr[i][j].Birth();\r\n                    CurrentUnit = UnitArr[i][j];\r\n                }\r\n            }\r\n        }\r\n        if (isEmpty) {\r\n            thePlayer.Birth();\r\n        }\r\n    }\r\n    else if (type == \"Enemy\") {\r\n        CurrentEnemyArr.slice(1);\r\n        if (!CurrentEnemyArr.length) {\r\n            CurrentEnemyArr = EnemyArr[EnemyArrCounter % 5];\r\n            EnemyArrCounter++;\r\n        }\r\n        CurrentEnemyArr[0].Birth();\r\n    }\r\n}\r\nexport function AddToArray(object, type, category) {\r\n    if (type == \"Unit\") {\r\n        UnitArr[category].push(object);\r\n    }\r\n}\r\n","import { RemoveByDeath, theStage, GetCurrentUnit } from \"../Database\";\r\nimport $ from \"jquery\";\r\nvar Enemy = (function () {\r\n    function Enemy(baseHP, baseDamage) {\r\n        this.baseHP = baseHP;\r\n        this.maxHP = this.baseHP * theStage.Level;\r\n        this.currentHP = this.MaxHP;\r\n        this.baseDamage = baseDamage;\r\n        this.currentDamage = this.baseDamage * theStage.Level;\r\n    }\r\n    Enemy.prototype.UpdateFeedback = function (counter) {\r\n        if (counter % 20) {\r\n            this.Hurt();\r\n            this.Regenerate(10 * theStage.Level);\r\n        }\r\n    };\r\n    Object.defineProperty(Enemy.prototype, \"MaxHP\", {\r\n        get: function () {\r\n            this.maxHP = this.baseHP * theStage.Level;\r\n            return this.maxHP;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(Enemy.prototype, \"CurrentHP\", {\r\n        get: function () {\r\n            return this.currentHP;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(Enemy.prototype, \"CurrentDamage\", {\r\n        get: function () {\r\n            this.currentDamage = this.baseDamage * theStage.Level;\r\n            return this.currentDamage;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Enemy.prototype.ReceiveDamage = function (damage) {\r\n        this.currentHP -= damage;\r\n        this.currentHP = Math.max(this.currentHP, 0);\r\n        adjustBarAnimation(\"monster-hp\", (this.CurrentHP / this.MaxHP));\r\n        if (this.currentHP == 0) {\r\n            this.Die();\r\n        }\r\n    };\r\n    Enemy.prototype.Birth = function () {\r\n        adjustBarAnimation(\"monster-hp\", this.MaxHP);\r\n    };\r\n    Enemy.prototype.Die = function () {\r\n        RemoveByDeath(\"Enemy\");\r\n    };\r\n    Enemy.prototype.Hurt = function () {\r\n        GetCurrentUnit().ReceiveDamage(this.CurrentDamage);\r\n    };\r\n    Enemy.prototype.Regenerate = function (health) {\r\n        this.currentHP += health;\r\n        this.currentHP = Math.min(this.CurrentHP, this.MaxHP);\r\n        adjustBarAnimation(\"monster-hp\", (this.CurrentHP / this.MaxHP));\r\n    };\r\n    return Enemy;\r\n}());\r\nexport { Enemy };\r\nfunction adjustBarAnimation(type, percentage) {\r\n    $(\"#\" + type + \"-bar\").animate({ \"width\": (\"\" + percentage.toString() + \"%\") }, 200);\r\n    if (percentage == 100) {\r\n        $(\"#\" + type + \"-bar\").animate({ \"width\": (\"0%\") }, 100);\r\n    }\r\n}\r\n","import { should } from \"chai\";\r\nimport { Database_Test } from \"./Database.spec\";\r\nshould();\r\nDatabase_Test();\r\n","import { Enemy } from \"../src/javascript/InterfacesBaseClasses/Enemy\";\r\nimport { GetCurrentEnemy } from \"../src/javascript/Database\";\r\nexport function Database_Test() {\r\n    describe(\"Database\", function () {\r\n        var EnemyArrCounter = 1;\r\n        var StageOneEnemyArr = [new Enemy(10, 10)];\r\n        var StageTwoEnemyArr = [];\r\n        var StageThreeEnemyArr = [];\r\n        var StageFourEnemyArr = [];\r\n        var StageFiveEnemyArr = [];\r\n        var EnemyArr = [StageOneEnemyArr, StageTwoEnemyArr, StageThreeEnemyArr, StageFourEnemyArr, StageFiveEnemyArr];\r\n        var CurrentEnemyArr = StageOneEnemyArr;\r\n        it(\"should return Enemy on the screen when run\", function () {\r\n            GetCurrentEnemy().should.equal(new Enemy(10, 10));\r\n        });\r\n    });\r\n}\r\n"],"sourceRoot":""}